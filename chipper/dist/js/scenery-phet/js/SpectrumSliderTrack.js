// Copyright 2019-2024, University of Colorado Boulder
/**
 * This SliderTrack depicts a spectrum of colors in the track.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 */ import Dimension2 from '../../dot/js/Dimension2.js';
import optionize from '../../phet-core/js/optionize.js';
import { Rectangle } from '../../scenery/js/imports.js';
import SliderTrack from '../../sun/js/SliderTrack.js';
import sceneryPhet from './sceneryPhet.js';
import SpectrumNode from './SpectrumNode.js';
let SpectrumSliderTrack = class SpectrumSliderTrack extends SliderTrack {
    constructor(property, range, providedOptions){
        const options = optionize()({
            size: new Dimension2(150, 30),
            valueToColor: SpectrumNode.DEFAULT_VALUE_TO_COLOR,
            borderRectangleOptions: {
                stroke: 'black',
                lineWidth: 1
            }
        }, providedOptions);
        const spectrumNode = new SpectrumNode({
            minValue: range.min,
            maxValue: range.max,
            size: options.size,
            valueToColor: options.valueToColor
        });
        // Show a thin black stroke around the border
        spectrumNode.addChild(new Rectangle(0, 0, spectrumNode.width, spectrumNode.height, options.borderRectangleOptions));
        super(property, spectrumNode, range, options);
    }
};
export { SpectrumSliderTrack as default };
sceneryPhet.register('SpectrumSliderTrack', SpectrumSliderTrack);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9TcGVjdHJ1bVNsaWRlclRyYWNrLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE5LTIwMjQsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxuXG4vKipcbiAqIFRoaXMgU2xpZGVyVHJhY2sgZGVwaWN0cyBhIHNwZWN0cnVtIG9mIGNvbG9ycyBpbiB0aGUgdHJhY2suXG4gKlxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcbiAqL1xuXG5pbXBvcnQgVFByb3BlcnR5IGZyb20gJy4uLy4uL2F4b24vanMvVFByb3BlcnR5LmpzJztcbmltcG9ydCBEaW1lbnNpb24yIGZyb20gJy4uLy4uL2RvdC9qcy9EaW1lbnNpb24yLmpzJztcbmltcG9ydCBSYW5nZSBmcm9tICcuLi8uLi9kb3QvanMvUmFuZ2UuanMnO1xuaW1wb3J0IHsgTGluZUpvaW4gfSBmcm9tICcuLi8uLi9raXRlL2pzL2ltcG9ydHMuanMnO1xuaW1wb3J0IG9wdGlvbml6ZSBmcm9tICcuLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcbmltcG9ydCBQaWNrT3B0aW9uYWwgZnJvbSAnLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1BpY2tPcHRpb25hbC5qcyc7XG5pbXBvcnQgeyBSZWN0YW5nbGUsIFRDb2xvciB9IGZyb20gJy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XG5pbXBvcnQgU2xpZGVyVHJhY2ssIHsgU2xpZGVyVHJhY2tPcHRpb25zIH0gZnJvbSAnLi4vLi4vc3VuL2pzL1NsaWRlclRyYWNrLmpzJztcbmltcG9ydCBzY2VuZXJ5UGhldCBmcm9tICcuL3NjZW5lcnlQaGV0LmpzJztcbmltcG9ydCBTcGVjdHJ1bU5vZGUsIHsgU3BlY3RydW1Ob2RlT3B0aW9ucyB9IGZyb20gJy4vU3BlY3RydW1Ob2RlLmpzJztcblxudHlwZSBTZWxmT3B0aW9ucyA9IHtcbiAgYm9yZGVyUmVjdGFuZ2xlT3B0aW9ucz86IHtcbiAgICBzdHJva2U/OiBUQ29sb3I7XG4gICAgbGluZVdpZHRoPzogbnVtYmVyO1xuICAgIGxpbmVEYXNoPzogbnVtYmVyW107XG4gICAgbGluZURhc2hPZmZzZXQ/OiBudW1iZXI7XG4gICAgbGluZUpvaW4/OiBMaW5lSm9pbjtcbiAgfTtcbn0gJiBQaWNrT3B0aW9uYWw8U3BlY3RydW1Ob2RlT3B0aW9ucywgJ3ZhbHVlVG9Db2xvcic+O1xuXG5leHBvcnQgdHlwZSBTcGVjdHJ1bVNsaWRlclRyYWNrT3B0aW9ucyA9IFNlbGZPcHRpb25zICYgU2xpZGVyVHJhY2tPcHRpb25zO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTcGVjdHJ1bVNsaWRlclRyYWNrIGV4dGVuZHMgU2xpZGVyVHJhY2sge1xuXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggcHJvcGVydHk6IFRQcm9wZXJ0eTxudW1iZXI+LCByYW5nZTogUmFuZ2UsIHByb3ZpZGVkT3B0aW9ucz86IFNwZWN0cnVtU2xpZGVyVHJhY2tPcHRpb25zICkge1xuXG4gICAgY29uc3Qgb3B0aW9ucyA9IG9wdGlvbml6ZTxTcGVjdHJ1bVNsaWRlclRyYWNrT3B0aW9ucywgU2VsZk9wdGlvbnMsIFNsaWRlclRyYWNrT3B0aW9ucz4oKSgge1xuICAgICAgc2l6ZTogbmV3IERpbWVuc2lvbjIoIDE1MCwgMzAgKSxcbiAgICAgIHZhbHVlVG9Db2xvcjogU3BlY3RydW1Ob2RlLkRFRkFVTFRfVkFMVUVfVE9fQ09MT1IsIC8vIERlZmF1bHRzIHRvIGEgYmxhY2sgdG8gd2hpdGUgZ3JhZGllbnQsXG4gICAgICBib3JkZXJSZWN0YW5nbGVPcHRpb25zOiB7XG4gICAgICAgIHN0cm9rZTogJ2JsYWNrJyxcbiAgICAgICAgbGluZVdpZHRoOiAxXG4gICAgICB9XG4gICAgfSwgcHJvdmlkZWRPcHRpb25zICk7XG5cbiAgICBjb25zdCBzcGVjdHJ1bU5vZGUgPSBuZXcgU3BlY3RydW1Ob2RlKCB7XG4gICAgICBtaW5WYWx1ZTogcmFuZ2UubWluLFxuICAgICAgbWF4VmFsdWU6IHJhbmdlLm1heCxcbiAgICAgIHNpemU6IG9wdGlvbnMuc2l6ZSxcbiAgICAgIHZhbHVlVG9Db2xvcjogb3B0aW9ucy52YWx1ZVRvQ29sb3JcbiAgICB9ICk7XG5cbiAgICAvLyBTaG93IGEgdGhpbiBibGFjayBzdHJva2UgYXJvdW5kIHRoZSBib3JkZXJcbiAgICBzcGVjdHJ1bU5vZGUuYWRkQ2hpbGQoIG5ldyBSZWN0YW5nbGUoIDAsIDAsIHNwZWN0cnVtTm9kZS53aWR0aCwgc3BlY3RydW1Ob2RlLmhlaWdodCwgb3B0aW9ucy5ib3JkZXJSZWN0YW5nbGVPcHRpb25zICkgKTtcblxuICAgIHN1cGVyKCBwcm9wZXJ0eSwgc3BlY3RydW1Ob2RlLCByYW5nZSwgb3B0aW9ucyApO1xuICB9XG59XG5cbnNjZW5lcnlQaGV0LnJlZ2lzdGVyKCAnU3BlY3RydW1TbGlkZXJUcmFjaycsIFNwZWN0cnVtU2xpZGVyVHJhY2sgKTsiXSwibmFtZXMiOlsiRGltZW5zaW9uMiIsIm9wdGlvbml6ZSIsIlJlY3RhbmdsZSIsIlNsaWRlclRyYWNrIiwic2NlbmVyeVBoZXQiLCJTcGVjdHJ1bU5vZGUiLCJTcGVjdHJ1bVNsaWRlclRyYWNrIiwicHJvcGVydHkiLCJyYW5nZSIsInByb3ZpZGVkT3B0aW9ucyIsIm9wdGlvbnMiLCJzaXplIiwidmFsdWVUb0NvbG9yIiwiREVGQVVMVF9WQUxVRV9UT19DT0xPUiIsImJvcmRlclJlY3RhbmdsZU9wdGlvbnMiLCJzdHJva2UiLCJsaW5lV2lkdGgiLCJzcGVjdHJ1bU5vZGUiLCJtaW5WYWx1ZSIsIm1pbiIsIm1heFZhbHVlIiwibWF4IiwiYWRkQ2hpbGQiLCJ3aWR0aCIsImhlaWdodCIsInJlZ2lzdGVyIl0sIm1hcHBpbmdzIjoiQUFBQSxzREFBc0Q7QUFFdEQ7Ozs7Q0FJQyxHQUdELE9BQU9BLGdCQUFnQiw2QkFBNkI7QUFHcEQsT0FBT0MsZUFBZSxrQ0FBa0M7QUFFeEQsU0FBU0MsU0FBUyxRQUFnQiw4QkFBOEI7QUFDaEUsT0FBT0MsaUJBQXlDLDhCQUE4QjtBQUM5RSxPQUFPQyxpQkFBaUIsbUJBQW1CO0FBQzNDLE9BQU9DLGtCQUEyQyxvQkFBb0I7QUFjdkQsSUFBQSxBQUFNQyxzQkFBTixNQUFNQSw0QkFBNEJIO0lBRS9DLFlBQW9CSSxRQUEyQixFQUFFQyxLQUFZLEVBQUVDLGVBQTRDLENBQUc7UUFFNUcsTUFBTUMsVUFBVVQsWUFBMEU7WUFDeEZVLE1BQU0sSUFBSVgsV0FBWSxLQUFLO1lBQzNCWSxjQUFjUCxhQUFhUSxzQkFBc0I7WUFDakRDLHdCQUF3QjtnQkFDdEJDLFFBQVE7Z0JBQ1JDLFdBQVc7WUFDYjtRQUNGLEdBQUdQO1FBRUgsTUFBTVEsZUFBZSxJQUFJWixhQUFjO1lBQ3JDYSxVQUFVVixNQUFNVyxHQUFHO1lBQ25CQyxVQUFVWixNQUFNYSxHQUFHO1lBQ25CVixNQUFNRCxRQUFRQyxJQUFJO1lBQ2xCQyxjQUFjRixRQUFRRSxZQUFZO1FBQ3BDO1FBRUEsNkNBQTZDO1FBQzdDSyxhQUFhSyxRQUFRLENBQUUsSUFBSXBCLFVBQVcsR0FBRyxHQUFHZSxhQUFhTSxLQUFLLEVBQUVOLGFBQWFPLE1BQU0sRUFBRWQsUUFBUUksc0JBQXNCO1FBRW5ILEtBQUssQ0FBRVAsVUFBVVUsY0FBY1QsT0FBT0U7SUFDeEM7QUFDRjtBQXpCQSxTQUFxQkosaUNBeUJwQjtBQUVERixZQUFZcUIsUUFBUSxDQUFFLHVCQUF1Qm5CIn0=