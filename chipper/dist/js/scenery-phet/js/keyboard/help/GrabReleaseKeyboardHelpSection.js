// Copyright 2022-2024, University of Colorado Boulder
/**
 * Help section for explaining how to use a keyboard to interact with the grab/release interaction.
 *
 * @author Michael Kauzmann (PhET Interactive Simulations)
 */ import PatternStringProperty from '../../../../axon/js/PatternStringProperty.js';
import { combineOptions } from '../../../../phet-core/js/optionize.js';
import Tandem from '../../../../tandem/js/Tandem.js';
import sceneryPhet from '../../sceneryPhet.js';
import SceneryPhetStrings from '../../SceneryPhetStrings.js';
import TextKeyNode from '../TextKeyNode.js';
import KeyboardHelpIconFactory from './KeyboardHelpIconFactory.js';
import KeyboardHelpSection from './KeyboardHelpSection.js';
import KeyboardHelpSectionRow from './KeyboardHelpSectionRow.js';
let GrabReleaseKeyboardHelpSection = class GrabReleaseKeyboardHelpSection extends KeyboardHelpSection {
    /**
   * @param thingAsTitle - the item being grabbed, capitalized as a title
   * @param thingAsLowerCase - the item being grabbed, lower case as used in a sentence.
   * @param [providedOptions]
   */ constructor(thingAsTitle, thingAsLowerCase, providedOptions){
        const options = combineOptions({
            // There is only a single paragraph for this section, no list needed in the PDOM
            a11yContentTagName: null
        }, providedOptions);
        // the visible heading string
        const headingStringProperty = new PatternStringProperty(SceneryPhetStrings.keyboardHelpDialog.grabOrReleaseHeadingPatternStringProperty, {
            thing: thingAsTitle
        }, {
            tandem: Tandem.OPT_OUT
        });
        // the visible label string
        const labelStringProperty = new PatternStringProperty(SceneryPhetStrings.keyboardHelpDialog.grabOrReleaseLabelPatternStringProperty, {
            thing: thingAsLowerCase
        }, {
            tandem: Tandem.OPT_OUT
        });
        // the string for the PDOM
        const descriptionStringProperty = new PatternStringProperty(SceneryPhetStrings.a11y.keyboardHelpDialog.grabOrReleaseDescriptionPatternStringProperty, {
            thing: thingAsLowerCase
        }, {
            tandem: Tandem.OPT_OUT
        });
        const spaceKeyNode = TextKeyNode.space();
        const enterKeyNode = TextKeyNode.enter();
        const icons = KeyboardHelpIconFactory.iconOrIcon(spaceKeyNode, enterKeyNode);
        const labelWithContentRow = KeyboardHelpSectionRow.labelWithIcon(labelStringProperty, icons, {
            labelInnerContent: descriptionStringProperty,
            iconOptions: {
                tagName: 'p' // it is the only item, so it is 'p' rather than 'li'
            }
        });
        super(headingStringProperty, [
            labelWithContentRow
        ], options);
    }
};
export { GrabReleaseKeyboardHelpSection as default };
sceneryPhet.register('GrabReleaseKeyboardHelpSection', GrabReleaseKeyboardHelpSection);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9rZXlib2FyZC9oZWxwL0dyYWJSZWxlYXNlS2V5Ym9hcmRIZWxwU2VjdGlvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMi0yMDI0LCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcblxuLyoqXG4gKiBIZWxwIHNlY3Rpb24gZm9yIGV4cGxhaW5pbmcgaG93IHRvIHVzZSBhIGtleWJvYXJkIHRvIGludGVyYWN0IHdpdGggdGhlIGdyYWIvcmVsZWFzZSBpbnRlcmFjdGlvbi5cbiAqXG4gKiBAYXV0aG9yIE1pY2hhZWwgS2F1em1hbm4gKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXG4gKi9cblxuaW1wb3J0IFBhdHRlcm5TdHJpbmdQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9heG9uL2pzL1BhdHRlcm5TdHJpbmdQcm9wZXJ0eS5qcyc7XG5pbXBvcnQgVFJlYWRPbmx5UHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vLi4vYXhvbi9qcy9UUmVhZE9ubHlQcm9wZXJ0eS5qcyc7XG5pbXBvcnQgeyBjb21iaW5lT3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9vcHRpb25pemUuanMnO1xuaW1wb3J0IFN0cmljdE9taXQgZnJvbSAnLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1N0cmljdE9taXQuanMnO1xuaW1wb3J0IFRhbmRlbSBmcm9tICcuLi8uLi8uLi8uLi90YW5kZW0vanMvVGFuZGVtLmpzJztcbmltcG9ydCBzY2VuZXJ5UGhldCBmcm9tICcuLi8uLi9zY2VuZXJ5UGhldC5qcyc7XG5pbXBvcnQgU2NlbmVyeVBoZXRTdHJpbmdzIGZyb20gJy4uLy4uL1NjZW5lcnlQaGV0U3RyaW5ncy5qcyc7XG5pbXBvcnQgVGV4dEtleU5vZGUgZnJvbSAnLi4vVGV4dEtleU5vZGUuanMnO1xuaW1wb3J0IEtleWJvYXJkSGVscEljb25GYWN0b3J5IGZyb20gJy4vS2V5Ym9hcmRIZWxwSWNvbkZhY3RvcnkuanMnO1xuaW1wb3J0IEtleWJvYXJkSGVscFNlY3Rpb24sIHsgS2V5Ym9hcmRIZWxwU2VjdGlvbk9wdGlvbnMgfSBmcm9tICcuL0tleWJvYXJkSGVscFNlY3Rpb24uanMnO1xuaW1wb3J0IEtleWJvYXJkSGVscFNlY3Rpb25Sb3cgZnJvbSAnLi9LZXlib2FyZEhlbHBTZWN0aW9uUm93LmpzJztcblxudHlwZSBHcmFiUmVsZWFzZUtleWJvYXJkSGVscFNlY3Rpb25PcHRpb25zID0gU3RyaWN0T21pdDxLZXlib2FyZEhlbHBTZWN0aW9uT3B0aW9ucywgJ2ExMXlDb250ZW50VGFnTmFtZSc+O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHcmFiUmVsZWFzZUtleWJvYXJkSGVscFNlY3Rpb24gZXh0ZW5kcyBLZXlib2FyZEhlbHBTZWN0aW9uIHtcblxuICAvKipcbiAgICogQHBhcmFtIHRoaW5nQXNUaXRsZSAtIHRoZSBpdGVtIGJlaW5nIGdyYWJiZWQsIGNhcGl0YWxpemVkIGFzIGEgdGl0bGVcbiAgICogQHBhcmFtIHRoaW5nQXNMb3dlckNhc2UgLSB0aGUgaXRlbSBiZWluZyBncmFiYmVkLCBsb3dlciBjYXNlIGFzIHVzZWQgaW4gYSBzZW50ZW5jZS5cbiAgICogQHBhcmFtIFtwcm92aWRlZE9wdGlvbnNdXG4gICAqL1xuICBwdWJsaWMgY29uc3RydWN0b3IoIHRoaW5nQXNUaXRsZTogVFJlYWRPbmx5UHJvcGVydHk8c3RyaW5nPiwgdGhpbmdBc0xvd2VyQ2FzZTogVFJlYWRPbmx5UHJvcGVydHk8c3RyaW5nPixcbiAgICAgICAgICAgICAgICAgICAgICBwcm92aWRlZE9wdGlvbnM/OiBHcmFiUmVsZWFzZUtleWJvYXJkSGVscFNlY3Rpb25PcHRpb25zICkge1xuXG4gICAgY29uc3Qgb3B0aW9ucyA9IGNvbWJpbmVPcHRpb25zPEtleWJvYXJkSGVscFNlY3Rpb25PcHRpb25zPigge1xuXG4gICAgICAvLyBUaGVyZSBpcyBvbmx5IGEgc2luZ2xlIHBhcmFncmFwaCBmb3IgdGhpcyBzZWN0aW9uLCBubyBsaXN0IG5lZWRlZCBpbiB0aGUgUERPTVxuICAgICAgYTExeUNvbnRlbnRUYWdOYW1lOiBudWxsXG4gICAgfSwgcHJvdmlkZWRPcHRpb25zICk7XG5cbiAgICAvLyB0aGUgdmlzaWJsZSBoZWFkaW5nIHN0cmluZ1xuICAgIGNvbnN0IGhlYWRpbmdTdHJpbmdQcm9wZXJ0eSA9IG5ldyBQYXR0ZXJuU3RyaW5nUHJvcGVydHkoIFNjZW5lcnlQaGV0U3RyaW5ncy5rZXlib2FyZEhlbHBEaWFsb2cuZ3JhYk9yUmVsZWFzZUhlYWRpbmdQYXR0ZXJuU3RyaW5nUHJvcGVydHksIHtcbiAgICAgIHRoaW5nOiB0aGluZ0FzVGl0bGVcbiAgICB9LCB7IHRhbmRlbTogVGFuZGVtLk9QVF9PVVQgfSApO1xuXG4gICAgLy8gdGhlIHZpc2libGUgbGFiZWwgc3RyaW5nXG4gICAgY29uc3QgbGFiZWxTdHJpbmdQcm9wZXJ0eSA9IG5ldyBQYXR0ZXJuU3RyaW5nUHJvcGVydHkoIFNjZW5lcnlQaGV0U3RyaW5ncy5rZXlib2FyZEhlbHBEaWFsb2cuZ3JhYk9yUmVsZWFzZUxhYmVsUGF0dGVyblN0cmluZ1Byb3BlcnR5LCB7XG4gICAgICB0aGluZzogdGhpbmdBc0xvd2VyQ2FzZVxuICAgIH0sIHsgdGFuZGVtOiBUYW5kZW0uT1BUX09VVCB9ICk7XG5cbiAgICAvLyB0aGUgc3RyaW5nIGZvciB0aGUgUERPTVxuICAgIGNvbnN0IGRlc2NyaXB0aW9uU3RyaW5nUHJvcGVydHkgPSBuZXcgUGF0dGVyblN0cmluZ1Byb3BlcnR5KCBTY2VuZXJ5UGhldFN0cmluZ3MuYTExeS5rZXlib2FyZEhlbHBEaWFsb2cuZ3JhYk9yUmVsZWFzZURlc2NyaXB0aW9uUGF0dGVyblN0cmluZ1Byb3BlcnR5LCB7XG4gICAgICB0aGluZzogdGhpbmdBc0xvd2VyQ2FzZVxuICAgIH0sIHsgdGFuZGVtOiBUYW5kZW0uT1BUX09VVCB9ICk7XG5cbiAgICBjb25zdCBzcGFjZUtleU5vZGUgPSBUZXh0S2V5Tm9kZS5zcGFjZSgpO1xuICAgIGNvbnN0IGVudGVyS2V5Tm9kZSA9IFRleHRLZXlOb2RlLmVudGVyKCk7XG4gICAgY29uc3QgaWNvbnMgPSBLZXlib2FyZEhlbHBJY29uRmFjdG9yeS5pY29uT3JJY29uKCBzcGFjZUtleU5vZGUsIGVudGVyS2V5Tm9kZSApO1xuICAgIGNvbnN0IGxhYmVsV2l0aENvbnRlbnRSb3cgPSBLZXlib2FyZEhlbHBTZWN0aW9uUm93LmxhYmVsV2l0aEljb24oIGxhYmVsU3RyaW5nUHJvcGVydHksIGljb25zLCB7XG4gICAgICBsYWJlbElubmVyQ29udGVudDogZGVzY3JpcHRpb25TdHJpbmdQcm9wZXJ0eSxcbiAgICAgIGljb25PcHRpb25zOiB7XG4gICAgICAgIHRhZ05hbWU6ICdwJyAvLyBpdCBpcyB0aGUgb25seSBpdGVtLCBzbyBpdCBpcyAncCcgcmF0aGVyIHRoYW4gJ2xpJ1xuICAgICAgfVxuICAgIH0gKTtcblxuICAgIHN1cGVyKCBoZWFkaW5nU3RyaW5nUHJvcGVydHksIFsgbGFiZWxXaXRoQ29udGVudFJvdyBdLCBvcHRpb25zICk7XG4gIH1cbn1cblxuc2NlbmVyeVBoZXQucmVnaXN0ZXIoICdHcmFiUmVsZWFzZUtleWJvYXJkSGVscFNlY3Rpb24nLCBHcmFiUmVsZWFzZUtleWJvYXJkSGVscFNlY3Rpb24gKTsiXSwibmFtZXMiOlsiUGF0dGVyblN0cmluZ1Byb3BlcnR5IiwiY29tYmluZU9wdGlvbnMiLCJUYW5kZW0iLCJzY2VuZXJ5UGhldCIsIlNjZW5lcnlQaGV0U3RyaW5ncyIsIlRleHRLZXlOb2RlIiwiS2V5Ym9hcmRIZWxwSWNvbkZhY3RvcnkiLCJLZXlib2FyZEhlbHBTZWN0aW9uIiwiS2V5Ym9hcmRIZWxwU2VjdGlvblJvdyIsIkdyYWJSZWxlYXNlS2V5Ym9hcmRIZWxwU2VjdGlvbiIsInRoaW5nQXNUaXRsZSIsInRoaW5nQXNMb3dlckNhc2UiLCJwcm92aWRlZE9wdGlvbnMiLCJvcHRpb25zIiwiYTExeUNvbnRlbnRUYWdOYW1lIiwiaGVhZGluZ1N0cmluZ1Byb3BlcnR5Iiwia2V5Ym9hcmRIZWxwRGlhbG9nIiwiZ3JhYk9yUmVsZWFzZUhlYWRpbmdQYXR0ZXJuU3RyaW5nUHJvcGVydHkiLCJ0aGluZyIsInRhbmRlbSIsIk9QVF9PVVQiLCJsYWJlbFN0cmluZ1Byb3BlcnR5IiwiZ3JhYk9yUmVsZWFzZUxhYmVsUGF0dGVyblN0cmluZ1Byb3BlcnR5IiwiZGVzY3JpcHRpb25TdHJpbmdQcm9wZXJ0eSIsImExMXkiLCJncmFiT3JSZWxlYXNlRGVzY3JpcHRpb25QYXR0ZXJuU3RyaW5nUHJvcGVydHkiLCJzcGFjZUtleU5vZGUiLCJzcGFjZSIsImVudGVyS2V5Tm9kZSIsImVudGVyIiwiaWNvbnMiLCJpY29uT3JJY29uIiwibGFiZWxXaXRoQ29udGVudFJvdyIsImxhYmVsV2l0aEljb24iLCJsYWJlbElubmVyQ29udGVudCIsImljb25PcHRpb25zIiwidGFnTmFtZSIsInJlZ2lzdGVyIl0sIm1hcHBpbmdzIjoiQUFBQSxzREFBc0Q7QUFFdEQ7Ozs7Q0FJQyxHQUVELE9BQU9BLDJCQUEyQiwrQ0FBK0M7QUFFakYsU0FBU0MsY0FBYyxRQUFRLHdDQUF3QztBQUV2RSxPQUFPQyxZQUFZLGtDQUFrQztBQUNyRCxPQUFPQyxpQkFBaUIsdUJBQXVCO0FBQy9DLE9BQU9DLHdCQUF3Qiw4QkFBOEI7QUFDN0QsT0FBT0MsaUJBQWlCLG9CQUFvQjtBQUM1QyxPQUFPQyw2QkFBNkIsK0JBQStCO0FBQ25FLE9BQU9DLHlCQUF5RCwyQkFBMkI7QUFDM0YsT0FBT0MsNEJBQTRCLDhCQUE4QjtBQUlsRCxJQUFBLEFBQU1DLGlDQUFOLE1BQU1BLHVDQUF1Q0Y7SUFFMUQ7Ozs7R0FJQyxHQUNELFlBQW9CRyxZQUF1QyxFQUFFQyxnQkFBMkMsRUFDcEZDLGVBQXVELENBQUc7UUFFNUUsTUFBTUMsVUFBVVosZUFBNEM7WUFFMUQsZ0ZBQWdGO1lBQ2hGYSxvQkFBb0I7UUFDdEIsR0FBR0Y7UUFFSCw2QkFBNkI7UUFDN0IsTUFBTUcsd0JBQXdCLElBQUlmLHNCQUF1QkksbUJBQW1CWSxrQkFBa0IsQ0FBQ0MseUNBQXlDLEVBQUU7WUFDeElDLE9BQU9SO1FBQ1QsR0FBRztZQUFFUyxRQUFRakIsT0FBT2tCLE9BQU87UUFBQztRQUU1QiwyQkFBMkI7UUFDM0IsTUFBTUMsc0JBQXNCLElBQUlyQixzQkFBdUJJLG1CQUFtQlksa0JBQWtCLENBQUNNLHVDQUF1QyxFQUFFO1lBQ3BJSixPQUFPUDtRQUNULEdBQUc7WUFBRVEsUUFBUWpCLE9BQU9rQixPQUFPO1FBQUM7UUFFNUIsMEJBQTBCO1FBQzFCLE1BQU1HLDRCQUE0QixJQUFJdkIsc0JBQXVCSSxtQkFBbUJvQixJQUFJLENBQUNSLGtCQUFrQixDQUFDUyw2Q0FBNkMsRUFBRTtZQUNySlAsT0FBT1A7UUFDVCxHQUFHO1lBQUVRLFFBQVFqQixPQUFPa0IsT0FBTztRQUFDO1FBRTVCLE1BQU1NLGVBQWVyQixZQUFZc0IsS0FBSztRQUN0QyxNQUFNQyxlQUFldkIsWUFBWXdCLEtBQUs7UUFDdEMsTUFBTUMsUUFBUXhCLHdCQUF3QnlCLFVBQVUsQ0FBRUwsY0FBY0U7UUFDaEUsTUFBTUksc0JBQXNCeEIsdUJBQXVCeUIsYUFBYSxDQUFFWixxQkFBcUJTLE9BQU87WUFDNUZJLG1CQUFtQlg7WUFDbkJZLGFBQWE7Z0JBQ1hDLFNBQVMsSUFBSSxxREFBcUQ7WUFDcEU7UUFDRjtRQUVBLEtBQUssQ0FBRXJCLHVCQUF1QjtZQUFFaUI7U0FBcUIsRUFBRW5CO0lBQ3pEO0FBQ0Y7QUEzQ0EsU0FBcUJKLDRDQTJDcEI7QUFFRE4sWUFBWWtDLFFBQVEsQ0FBRSxrQ0FBa0M1QiJ9