// Copyright 2022-2024, University of Colorado Boulder
/**
 * Demo for GrabDragInteraction
 *
 * @author Chris Malley (PixelZoom, Inc.)
 */ import Vector2 from '../../../../dot/js/Vector2.js';
import Vector2Property from '../../../../dot/js/Vector2Property.js';
import { DragListener, KeyboardDragListener, Node, Rectangle } from '../../../../scenery/js/imports.js';
import GrabDragInteraction from '../../accessibility/grab-drag/GrabDragInteraction.js';
export default function demoGrabDragInteraction(layoutBounds, providedOptions) {
    const rect = new Rectangle(0, 0, 100, 100, {
        tagName: 'div',
        ariaRole: 'application',
        fill: 'blue',
        cursor: 'pointer'
    });
    const positionProperty = new Vector2Property(Vector2.ZERO);
    positionProperty.linkAttribute(rect, 'translation');
    const listener = new DragListener({
        positionProperty: positionProperty
    });
    rect.addInputListener(listener);
    const keyboardDragListener = new KeyboardDragListener({
        positionProperty: positionProperty,
        tandem: providedOptions.tandem.createTandem('keyboardDragListener')
    });
    rect.addInputListener(keyboardDragListener);
    // A parent Node for the interaction cues that will be added by GrabDragInteraction.
    const interactionCueParent = new Node();
    new GrabDragInteraction(rect, keyboardDragListener, interactionCueParent, {
        objectToGrabString: 'rectangle',
        idleStateAccessibleName: 'grab rectangle',
        grabCueOffset: new Vector2(0, 10),
        tandem: providedOptions.tandem.createTandem('grabDragInteraction')
    });
    return new Node({
        children: [
            interactionCueParent,
            rect
        ],
        center: layoutBounds.center
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9kZW1vL2NvbXBvbmVudHMvZGVtb0dyYWJEcmFnSW50ZXJhY3Rpb24udHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjItMjAyNCwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXG5cbi8qKlxuICogRGVtbyBmb3IgR3JhYkRyYWdJbnRlcmFjdGlvblxuICpcbiAqIEBhdXRob3IgQ2hyaXMgTWFsbGV5IChQaXhlbFpvb20sIEluYy4pXG4gKi9cblxuaW1wb3J0IEJvdW5kczIgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL0JvdW5kczIuanMnO1xuaW1wb3J0IFZlY3RvcjIgZnJvbSAnLi4vLi4vLi4vLi4vZG90L2pzL1ZlY3RvcjIuanMnO1xuaW1wb3J0IFZlY3RvcjJQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi9kb3QvanMvVmVjdG9yMlByb3BlcnR5LmpzJztcbmltcG9ydCB7IERyYWdMaXN0ZW5lciwgS2V5Ym9hcmREcmFnTGlzdGVuZXIsIE5vZGUsIFJlY3RhbmdsZSB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XG5pbXBvcnQgeyBTdW5EZW1vT3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uL3N1bi9qcy9kZW1vL0RlbW9zU2NyZWVuVmlldy5qcyc7XG5pbXBvcnQgR3JhYkRyYWdJbnRlcmFjdGlvbiBmcm9tICcuLi8uLi9hY2Nlc3NpYmlsaXR5L2dyYWItZHJhZy9HcmFiRHJhZ0ludGVyYWN0aW9uLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZGVtb0dyYWJEcmFnSW50ZXJhY3Rpb24oIGxheW91dEJvdW5kczogQm91bmRzMiwgcHJvdmlkZWRPcHRpb25zOiBTdW5EZW1vT3B0aW9ucyApOiBOb2RlIHtcblxuICBjb25zdCByZWN0ID0gbmV3IFJlY3RhbmdsZSggMCwgMCwgMTAwLCAxMDAsIHtcbiAgICB0YWdOYW1lOiAnZGl2JyxcbiAgICBhcmlhUm9sZTogJ2FwcGxpY2F0aW9uJyxcbiAgICBmaWxsOiAnYmx1ZScsXG4gICAgY3Vyc29yOiAncG9pbnRlcidcbiAgfSApO1xuICBjb25zdCBwb3NpdGlvblByb3BlcnR5ID0gbmV3IFZlY3RvcjJQcm9wZXJ0eSggVmVjdG9yMi5aRVJPICk7XG4gIHBvc2l0aW9uUHJvcGVydHkubGlua0F0dHJpYnV0ZSggcmVjdCwgJ3RyYW5zbGF0aW9uJyApO1xuXG4gIGNvbnN0IGxpc3RlbmVyID0gbmV3IERyYWdMaXN0ZW5lcigge1xuICAgIHBvc2l0aW9uUHJvcGVydHk6IHBvc2l0aW9uUHJvcGVydHlcbiAgfSApO1xuICByZWN0LmFkZElucHV0TGlzdGVuZXIoIGxpc3RlbmVyICk7XG4gIGNvbnN0IGtleWJvYXJkRHJhZ0xpc3RlbmVyID0gbmV3IEtleWJvYXJkRHJhZ0xpc3RlbmVyKCB7XG4gICAgcG9zaXRpb25Qcm9wZXJ0eTogcG9zaXRpb25Qcm9wZXJ0eSxcbiAgICB0YW5kZW06IHByb3ZpZGVkT3B0aW9ucy50YW5kZW0hLmNyZWF0ZVRhbmRlbSggJ2tleWJvYXJkRHJhZ0xpc3RlbmVyJyApXG4gIH0gKTtcbiAgcmVjdC5hZGRJbnB1dExpc3RlbmVyKCBrZXlib2FyZERyYWdMaXN0ZW5lciApO1xuXG4gIC8vIEEgcGFyZW50IE5vZGUgZm9yIHRoZSBpbnRlcmFjdGlvbiBjdWVzIHRoYXQgd2lsbCBiZSBhZGRlZCBieSBHcmFiRHJhZ0ludGVyYWN0aW9uLlxuICBjb25zdCBpbnRlcmFjdGlvbkN1ZVBhcmVudCA9IG5ldyBOb2RlKCk7XG5cbiAgbmV3IEdyYWJEcmFnSW50ZXJhY3Rpb24oIHJlY3QsIGtleWJvYXJkRHJhZ0xpc3RlbmVyLCBpbnRlcmFjdGlvbkN1ZVBhcmVudCwgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgIG9iamVjdFRvR3JhYlN0cmluZzogJ3JlY3RhbmdsZScsXG4gICAgaWRsZVN0YXRlQWNjZXNzaWJsZU5hbWU6ICdncmFiIHJlY3RhbmdsZScsXG4gICAgZ3JhYkN1ZU9mZnNldDogbmV3IFZlY3RvcjIoIDAsIDEwICksXG4gICAgdGFuZGVtOiBwcm92aWRlZE9wdGlvbnMudGFuZGVtIS5jcmVhdGVUYW5kZW0oICdncmFiRHJhZ0ludGVyYWN0aW9uJyApXG4gIH0gKTtcblxuICByZXR1cm4gbmV3IE5vZGUoIHtcbiAgICBjaGlsZHJlbjogWyBpbnRlcmFjdGlvbkN1ZVBhcmVudCwgcmVjdCBdLFxuICAgIGNlbnRlcjogbGF5b3V0Qm91bmRzLmNlbnRlclxuICB9ICk7XG59Il0sIm5hbWVzIjpbIlZlY3RvcjIiLCJWZWN0b3IyUHJvcGVydHkiLCJEcmFnTGlzdGVuZXIiLCJLZXlib2FyZERyYWdMaXN0ZW5lciIsIk5vZGUiLCJSZWN0YW5nbGUiLCJHcmFiRHJhZ0ludGVyYWN0aW9uIiwiZGVtb0dyYWJEcmFnSW50ZXJhY3Rpb24iLCJsYXlvdXRCb3VuZHMiLCJwcm92aWRlZE9wdGlvbnMiLCJyZWN0IiwidGFnTmFtZSIsImFyaWFSb2xlIiwiZmlsbCIsImN1cnNvciIsInBvc2l0aW9uUHJvcGVydHkiLCJaRVJPIiwibGlua0F0dHJpYnV0ZSIsImxpc3RlbmVyIiwiYWRkSW5wdXRMaXN0ZW5lciIsImtleWJvYXJkRHJhZ0xpc3RlbmVyIiwidGFuZGVtIiwiY3JlYXRlVGFuZGVtIiwiaW50ZXJhY3Rpb25DdWVQYXJlbnQiLCJvYmplY3RUb0dyYWJTdHJpbmciLCJpZGxlU3RhdGVBY2Nlc3NpYmxlTmFtZSIsImdyYWJDdWVPZmZzZXQiLCJjaGlsZHJlbiIsImNlbnRlciJdLCJtYXBwaW5ncyI6IkFBQUEsc0RBQXNEO0FBRXREOzs7O0NBSUMsR0FHRCxPQUFPQSxhQUFhLGdDQUFnQztBQUNwRCxPQUFPQyxxQkFBcUIsd0NBQXdDO0FBQ3BFLFNBQVNDLFlBQVksRUFBRUMsb0JBQW9CLEVBQUVDLElBQUksRUFBRUMsU0FBUyxRQUFRLG9DQUFvQztBQUV4RyxPQUFPQyx5QkFBeUIsdURBQXVEO0FBRXZGLGVBQWUsU0FBU0Msd0JBQXlCQyxZQUFxQixFQUFFQyxlQUErQjtJQUVyRyxNQUFNQyxPQUFPLElBQUlMLFVBQVcsR0FBRyxHQUFHLEtBQUssS0FBSztRQUMxQ00sU0FBUztRQUNUQyxVQUFVO1FBQ1ZDLE1BQU07UUFDTkMsUUFBUTtJQUNWO0lBQ0EsTUFBTUMsbUJBQW1CLElBQUlkLGdCQUFpQkQsUUFBUWdCLElBQUk7SUFDMURELGlCQUFpQkUsYUFBYSxDQUFFUCxNQUFNO0lBRXRDLE1BQU1RLFdBQVcsSUFBSWhCLGFBQWM7UUFDakNhLGtCQUFrQkE7SUFDcEI7SUFDQUwsS0FBS1MsZ0JBQWdCLENBQUVEO0lBQ3ZCLE1BQU1FLHVCQUF1QixJQUFJakIscUJBQXNCO1FBQ3JEWSxrQkFBa0JBO1FBQ2xCTSxRQUFRWixnQkFBZ0JZLE1BQU0sQ0FBRUMsWUFBWSxDQUFFO0lBQ2hEO0lBQ0FaLEtBQUtTLGdCQUFnQixDQUFFQztJQUV2QixvRkFBb0Y7SUFDcEYsTUFBTUcsdUJBQXVCLElBQUluQjtJQUVqQyxJQUFJRSxvQkFBcUJJLE1BQU1VLHNCQUFzQkcsc0JBQXNCO1FBQ3pFQyxvQkFBb0I7UUFDcEJDLHlCQUF5QjtRQUN6QkMsZUFBZSxJQUFJMUIsUUFBUyxHQUFHO1FBQy9CcUIsUUFBUVosZ0JBQWdCWSxNQUFNLENBQUVDLFlBQVksQ0FBRTtJQUNoRDtJQUVBLE9BQU8sSUFBSWxCLEtBQU07UUFDZnVCLFVBQVU7WUFBRUo7WUFBc0JiO1NBQU07UUFDeENrQixRQUFRcEIsYUFBYW9CLE1BQU07SUFDN0I7QUFDRiJ9