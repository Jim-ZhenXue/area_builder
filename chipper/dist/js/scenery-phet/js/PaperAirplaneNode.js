// Copyright 2014-2022, University of Colorado Boulder
/**
 * PaperAirplaneNode draws the paper airplane that is part of the PhET logo.
 *
 * @author John Blanco
 */ import { Shape } from '../../kite/js/imports.js';
import optionize from '../../phet-core/js/optionize.js';
import { Path } from '../../scenery/js/imports.js';
import PhetColorScheme from './PhetColorScheme.js';
import sceneryPhet from './sceneryPhet.js';
let PaperAirplaneNode = class PaperAirplaneNode extends Path {
    constructor(providedOptions){
        const options = optionize()({
            fill: PhetColorScheme.PHET_LOGO_YELLOW
        }, providedOptions);
        // Define the shape, from the points in the PhET Logo AI file, see https://github.com/phetsims/scenery-phet/issues/75
        // The bounds offset were determined by getting bodyShape.bounds.minX, bodyShape.bounds.minY, and the shape
        // is adjusted to have top/left at (0,0)
        const dx = 221.92;
        const dy = 114.975;
        const bodyShape = new Shape().moveTo(221.92 - dx, 131.225 - dy).lineTo(234.307 - dx, 135.705 - dy).lineTo(250.253 - dx, 122.428 - dy).lineTo(237.983 - dx, 136.955 - dy).lineTo(251.236 - dx, 141.627 - dy).lineTo(256.021 - dx, 114.975 - dy).close()// Lower part
        .moveTo(238.004 - dx, 139.547 - dy).lineTo(238.312 - dx, 146.48 - dy).lineTo(243.254 - dx, 141.54 - dy).close();
        super(bodyShape, options);
    }
};
export { PaperAirplaneNode as default };
sceneryPhet.register('PaperAirplaneNode', PaperAirplaneNode);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9QYXBlckFpcnBsYW5lTm9kZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNC0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcblxuLyoqXG4gKiBQYXBlckFpcnBsYW5lTm9kZSBkcmF3cyB0aGUgcGFwZXIgYWlycGxhbmUgdGhhdCBpcyBwYXJ0IG9mIHRoZSBQaEVUIGxvZ28uXG4gKlxuICogQGF1dGhvciBKb2huIEJsYW5jb1xuICovXG5cbmltcG9ydCB7IFNoYXBlIH0gZnJvbSAnLi4vLi4va2l0ZS9qcy9pbXBvcnRzLmpzJztcbmltcG9ydCBvcHRpb25pemUsIHsgRW1wdHlTZWxmT3B0aW9ucyB9IGZyb20gJy4uLy4uL3BoZXQtY29yZS9qcy9vcHRpb25pemUuanMnO1xuaW1wb3J0IHsgUGF0aCwgUGF0aE9wdGlvbnMgfSBmcm9tICcuLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xuaW1wb3J0IFBoZXRDb2xvclNjaGVtZSBmcm9tICcuL1BoZXRDb2xvclNjaGVtZS5qcyc7XG5pbXBvcnQgc2NlbmVyeVBoZXQgZnJvbSAnLi9zY2VuZXJ5UGhldC5qcyc7XG5cbnR5cGUgU2VsZk9wdGlvbnMgPSBFbXB0eVNlbGZPcHRpb25zO1xuXG5leHBvcnQgdHlwZSBQYXBlckFpcnBsYW5lTm9kZU9wdGlvbnMgPSBTZWxmT3B0aW9ucyAmIFBhdGhPcHRpb25zO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQYXBlckFpcnBsYW5lTm9kZSBleHRlbmRzIFBhdGgge1xuXG4gIHB1YmxpYyBjb25zdHJ1Y3RvciggcHJvdmlkZWRPcHRpb25zPzogUGFwZXJBaXJwbGFuZU5vZGVPcHRpb25zICkge1xuXG4gICAgY29uc3Qgb3B0aW9ucyA9IG9wdGlvbml6ZTxQYXBlckFpcnBsYW5lTm9kZU9wdGlvbnMsIFNlbGZPcHRpb25zLCBQYXRoT3B0aW9ucz4oKSgge1xuICAgICAgZmlsbDogUGhldENvbG9yU2NoZW1lLlBIRVRfTE9HT19ZRUxMT1dcbiAgICB9LCBwcm92aWRlZE9wdGlvbnMgKTtcblxuICAgIC8vIERlZmluZSB0aGUgc2hhcGUsIGZyb20gdGhlIHBvaW50cyBpbiB0aGUgUGhFVCBMb2dvIEFJIGZpbGUsIHNlZSBodHRwczovL2dpdGh1Yi5jb20vcGhldHNpbXMvc2NlbmVyeS1waGV0L2lzc3Vlcy83NVxuICAgIC8vIFRoZSBib3VuZHMgb2Zmc2V0IHdlcmUgZGV0ZXJtaW5lZCBieSBnZXR0aW5nIGJvZHlTaGFwZS5ib3VuZHMubWluWCwgYm9keVNoYXBlLmJvdW5kcy5taW5ZLCBhbmQgdGhlIHNoYXBlXG4gICAgLy8gaXMgYWRqdXN0ZWQgdG8gaGF2ZSB0b3AvbGVmdCBhdCAoMCwwKVxuICAgIGNvbnN0IGR4ID0gMjIxLjkyO1xuICAgIGNvbnN0IGR5ID0gMTE0Ljk3NTtcbiAgICBjb25zdCBib2R5U2hhcGUgPSBuZXcgU2hhcGUoKVxuICAgICAgLm1vdmVUbyggMjIxLjkyIC0gZHgsIDEzMS4yMjUgLSBkeSApXG4gICAgICAubGluZVRvKCAyMzQuMzA3IC0gZHgsIDEzNS43MDUgLSBkeSApXG4gICAgICAubGluZVRvKCAyNTAuMjUzIC0gZHgsIDEyMi40MjggLSBkeSApXG4gICAgICAubGluZVRvKCAyMzcuOTgzIC0gZHgsIDEzNi45NTUgLSBkeSApXG4gICAgICAubGluZVRvKCAyNTEuMjM2IC0gZHgsIDE0MS42MjcgLSBkeSApXG4gICAgICAubGluZVRvKCAyNTYuMDIxIC0gZHgsIDExNC45NzUgLSBkeSApXG4gICAgICAuY2xvc2UoKVxuXG4gICAgICAvLyBMb3dlciBwYXJ0XG4gICAgICAubW92ZVRvKCAyMzguMDA0IC0gZHgsIDEzOS41NDcgLSBkeSApXG4gICAgICAubGluZVRvKCAyMzguMzEyIC0gZHgsIDE0Ni40OCAtIGR5IClcbiAgICAgIC5saW5lVG8oIDI0My4yNTQgLSBkeCwgMTQxLjU0IC0gZHkgKVxuICAgICAgLmNsb3NlKCk7XG5cbiAgICBzdXBlciggYm9keVNoYXBlLCBvcHRpb25zICk7XG4gIH1cbn1cblxuc2NlbmVyeVBoZXQucmVnaXN0ZXIoICdQYXBlckFpcnBsYW5lTm9kZScsIFBhcGVyQWlycGxhbmVOb2RlICk7Il0sIm5hbWVzIjpbIlNoYXBlIiwib3B0aW9uaXplIiwiUGF0aCIsIlBoZXRDb2xvclNjaGVtZSIsInNjZW5lcnlQaGV0IiwiUGFwZXJBaXJwbGFuZU5vZGUiLCJwcm92aWRlZE9wdGlvbnMiLCJvcHRpb25zIiwiZmlsbCIsIlBIRVRfTE9HT19ZRUxMT1ciLCJkeCIsImR5IiwiYm9keVNoYXBlIiwibW92ZVRvIiwibGluZVRvIiwiY2xvc2UiLCJyZWdpc3RlciJdLCJtYXBwaW5ncyI6IkFBQUEsc0RBQXNEO0FBRXREOzs7O0NBSUMsR0FFRCxTQUFTQSxLQUFLLFFBQVEsMkJBQTJCO0FBQ2pELE9BQU9DLGVBQXFDLGtDQUFrQztBQUM5RSxTQUFTQyxJQUFJLFFBQXFCLDhCQUE4QjtBQUNoRSxPQUFPQyxxQkFBcUIsdUJBQXVCO0FBQ25ELE9BQU9DLGlCQUFpQixtQkFBbUI7QUFNNUIsSUFBQSxBQUFNQyxvQkFBTixNQUFNQSwwQkFBMEJIO0lBRTdDLFlBQW9CSSxlQUEwQyxDQUFHO1FBRS9ELE1BQU1DLFVBQVVOLFlBQWlFO1lBQy9FTyxNQUFNTCxnQkFBZ0JNLGdCQUFnQjtRQUN4QyxHQUFHSDtRQUVILHFIQUFxSDtRQUNySCwyR0FBMkc7UUFDM0csd0NBQXdDO1FBQ3hDLE1BQU1JLEtBQUs7UUFDWCxNQUFNQyxLQUFLO1FBQ1gsTUFBTUMsWUFBWSxJQUFJWixRQUNuQmEsTUFBTSxDQUFFLFNBQVNILElBQUksVUFBVUMsSUFDL0JHLE1BQU0sQ0FBRSxVQUFVSixJQUFJLFVBQVVDLElBQ2hDRyxNQUFNLENBQUUsVUFBVUosSUFBSSxVQUFVQyxJQUNoQ0csTUFBTSxDQUFFLFVBQVVKLElBQUksVUFBVUMsSUFDaENHLE1BQU0sQ0FBRSxVQUFVSixJQUFJLFVBQVVDLElBQ2hDRyxNQUFNLENBQUUsVUFBVUosSUFBSSxVQUFVQyxJQUNoQ0ksS0FBSyxFQUVOLGFBQWE7U0FDWkYsTUFBTSxDQUFFLFVBQVVILElBQUksVUFBVUMsSUFDaENHLE1BQU0sQ0FBRSxVQUFVSixJQUFJLFNBQVNDLElBQy9CRyxNQUFNLENBQUUsVUFBVUosSUFBSSxTQUFTQyxJQUMvQkksS0FBSztRQUVSLEtBQUssQ0FBRUgsV0FBV0w7SUFDcEI7QUFDRjtBQTlCQSxTQUFxQkYsK0JBOEJwQjtBQUVERCxZQUFZWSxRQUFRLENBQUUscUJBQXFCWCJ9