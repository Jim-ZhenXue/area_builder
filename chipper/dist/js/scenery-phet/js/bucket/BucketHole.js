// Copyright 2013-2024, University of Colorado Boulder
/*
 * The hole of a bucket
 *
 * @author Jonathan Olson
 */ import Matrix3 from '../../../dot/js/Matrix3.js';
import { LinearGradient, Node, Path } from '../../../scenery/js/imports.js';
import sceneryPhet from '../sceneryPhet.js';
let BucketHole = class BucketHole extends Node {
    constructor(bucket, modelViewTransform, providedOptions){
        super(providedOptions);
        const scaleMatrix = Matrix3.scaling(modelViewTransform.getMatrix().m00(), modelViewTransform.getMatrix().m11());
        const transformedShape = bucket.holeShape.transformed(scaleMatrix);
        const gradientPaint = new LinearGradient(transformedShape.bounds.getMinX(), 0, transformedShape.bounds.getMaxX(), 0);
        gradientPaint.addColorStop(0, 'black');
        gradientPaint.addColorStop(1, '#c0c0c0');
        this.addChild(new Path(transformedShape, {
            fill: gradientPaint,
            stroke: '#777',
            lineWidth: 1
        }));
        // Set initial position.
        this.translation = modelViewTransform.modelToViewPosition(bucket.position);
    }
};
export { BucketHole as default };
sceneryPhet.register('BucketHole', BucketHole);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9idWNrZXQvQnVja2V0SG9sZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxMy0yMDI0LCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcblxuLypcbiAqIFRoZSBob2xlIG9mIGEgYnVja2V0XG4gKlxuICogQGF1dGhvciBKb25hdGhhbiBPbHNvblxuICovXG5cbmltcG9ydCBNYXRyaXgzIGZyb20gJy4uLy4uLy4uL2RvdC9qcy9NYXRyaXgzLmpzJztcbmltcG9ydCB7IEVtcHR5U2VsZk9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcbmltcG9ydCBCdWNrZXQgZnJvbSAnLi4vLi4vLi4vcGhldGNvbW1vbi9qcy9tb2RlbC9CdWNrZXQuanMnO1xuaW1wb3J0IE1vZGVsVmlld1RyYW5zZm9ybTIgZnJvbSAnLi4vLi4vLi4vcGhldGNvbW1vbi9qcy92aWV3L01vZGVsVmlld1RyYW5zZm9ybTIuanMnO1xuaW1wb3J0IHsgTGluZWFyR3JhZGllbnQsIE5vZGUsIE5vZGVPcHRpb25zLCBQYXRoIH0gZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcbmltcG9ydCBzY2VuZXJ5UGhldCBmcm9tICcuLi9zY2VuZXJ5UGhldC5qcyc7XG5cbnR5cGUgU2VsZk9wdGlvbnMgPSBFbXB0eVNlbGZPcHRpb25zO1xuXG5leHBvcnQgdHlwZSBCdWNrZXRIb2xlT3B0aW9ucyA9IFNlbGZPcHRpb25zICYgTm9kZU9wdGlvbnM7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJ1Y2tldEhvbGUgZXh0ZW5kcyBOb2RlIHtcblxuICBwdWJsaWMgY29uc3RydWN0b3IoIGJ1Y2tldDogQnVja2V0LCBtb2RlbFZpZXdUcmFuc2Zvcm06IE1vZGVsVmlld1RyYW5zZm9ybTIsIHByb3ZpZGVkT3B0aW9ucz86IEJ1Y2tldEhvbGVPcHRpb25zICkge1xuXG4gICAgc3VwZXIoIHByb3ZpZGVkT3B0aW9ucyApO1xuXG4gICAgY29uc3Qgc2NhbGVNYXRyaXggPSBNYXRyaXgzLnNjYWxpbmcoIG1vZGVsVmlld1RyYW5zZm9ybS5nZXRNYXRyaXgoKS5tMDAoKSwgbW9kZWxWaWV3VHJhbnNmb3JtLmdldE1hdHJpeCgpLm0xMSgpICk7XG4gICAgY29uc3QgdHJhbnNmb3JtZWRTaGFwZSA9IGJ1Y2tldC5ob2xlU2hhcGUudHJhbnNmb3JtZWQoIHNjYWxlTWF0cml4ICk7XG4gICAgY29uc3QgZ3JhZGllbnRQYWludCA9IG5ldyBMaW5lYXJHcmFkaWVudCggdHJhbnNmb3JtZWRTaGFwZS5ib3VuZHMuZ2V0TWluWCgpLCAwLCB0cmFuc2Zvcm1lZFNoYXBlLmJvdW5kcy5nZXRNYXhYKCksIDAgKTtcbiAgICBncmFkaWVudFBhaW50LmFkZENvbG9yU3RvcCggMCwgJ2JsYWNrJyApO1xuICAgIGdyYWRpZW50UGFpbnQuYWRkQ29sb3JTdG9wKCAxLCAnI2MwYzBjMCcgKTtcblxuICAgIHRoaXMuYWRkQ2hpbGQoIG5ldyBQYXRoKCB0cmFuc2Zvcm1lZFNoYXBlLCB7XG4gICAgICBmaWxsOiBncmFkaWVudFBhaW50LFxuICAgICAgc3Ryb2tlOiAnIzc3NycsXG4gICAgICBsaW5lV2lkdGg6IDFcbiAgICB9ICkgKTtcblxuICAgIC8vIFNldCBpbml0aWFsIHBvc2l0aW9uLlxuICAgIHRoaXMudHJhbnNsYXRpb24gPSBtb2RlbFZpZXdUcmFuc2Zvcm0ubW9kZWxUb1ZpZXdQb3NpdGlvbiggYnVja2V0LnBvc2l0aW9uICk7XG4gIH1cbn1cblxuc2NlbmVyeVBoZXQucmVnaXN0ZXIoICdCdWNrZXRIb2xlJywgQnVja2V0SG9sZSApOyJdLCJuYW1lcyI6WyJNYXRyaXgzIiwiTGluZWFyR3JhZGllbnQiLCJOb2RlIiwiUGF0aCIsInNjZW5lcnlQaGV0IiwiQnVja2V0SG9sZSIsImJ1Y2tldCIsIm1vZGVsVmlld1RyYW5zZm9ybSIsInByb3ZpZGVkT3B0aW9ucyIsInNjYWxlTWF0cml4Iiwic2NhbGluZyIsImdldE1hdHJpeCIsIm0wMCIsIm0xMSIsInRyYW5zZm9ybWVkU2hhcGUiLCJob2xlU2hhcGUiLCJ0cmFuc2Zvcm1lZCIsImdyYWRpZW50UGFpbnQiLCJib3VuZHMiLCJnZXRNaW5YIiwiZ2V0TWF4WCIsImFkZENvbG9yU3RvcCIsImFkZENoaWxkIiwiZmlsbCIsInN0cm9rZSIsImxpbmVXaWR0aCIsInRyYW5zbGF0aW9uIiwibW9kZWxUb1ZpZXdQb3NpdGlvbiIsInBvc2l0aW9uIiwicmVnaXN0ZXIiXSwibWFwcGluZ3MiOiJBQUFBLHNEQUFzRDtBQUV0RDs7OztDQUlDLEdBRUQsT0FBT0EsYUFBYSw2QkFBNkI7QUFJakQsU0FBU0MsY0FBYyxFQUFFQyxJQUFJLEVBQWVDLElBQUksUUFBUSxpQ0FBaUM7QUFDekYsT0FBT0MsaUJBQWlCLG9CQUFvQjtBQU03QixJQUFBLEFBQU1DLGFBQU4sTUFBTUEsbUJBQW1CSDtJQUV0QyxZQUFvQkksTUFBYyxFQUFFQyxrQkFBdUMsRUFBRUMsZUFBbUMsQ0FBRztRQUVqSCxLQUFLLENBQUVBO1FBRVAsTUFBTUMsY0FBY1QsUUFBUVUsT0FBTyxDQUFFSCxtQkFBbUJJLFNBQVMsR0FBR0MsR0FBRyxJQUFJTCxtQkFBbUJJLFNBQVMsR0FBR0UsR0FBRztRQUM3RyxNQUFNQyxtQkFBbUJSLE9BQU9TLFNBQVMsQ0FBQ0MsV0FBVyxDQUFFUDtRQUN2RCxNQUFNUSxnQkFBZ0IsSUFBSWhCLGVBQWdCYSxpQkFBaUJJLE1BQU0sQ0FBQ0MsT0FBTyxJQUFJLEdBQUdMLGlCQUFpQkksTUFBTSxDQUFDRSxPQUFPLElBQUk7UUFDbkhILGNBQWNJLFlBQVksQ0FBRSxHQUFHO1FBQy9CSixjQUFjSSxZQUFZLENBQUUsR0FBRztRQUUvQixJQUFJLENBQUNDLFFBQVEsQ0FBRSxJQUFJbkIsS0FBTVcsa0JBQWtCO1lBQ3pDUyxNQUFNTjtZQUNOTyxRQUFRO1lBQ1JDLFdBQVc7UUFDYjtRQUVBLHdCQUF3QjtRQUN4QixJQUFJLENBQUNDLFdBQVcsR0FBR25CLG1CQUFtQm9CLG1CQUFtQixDQUFFckIsT0FBT3NCLFFBQVE7SUFDNUU7QUFDRjtBQXJCQSxTQUFxQnZCLHdCQXFCcEI7QUFFREQsWUFBWXlCLFFBQVEsQ0FBRSxjQUFjeEIifQ==