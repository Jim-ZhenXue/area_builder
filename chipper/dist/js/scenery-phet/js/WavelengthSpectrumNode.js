// Copyright 2014-2023, University of Colorado Boulder
/**
 * WavelengthSpectrumNode displays a rectangle of the visible spectrum.
 *
 * @author Chris Malley (PixelZoom, Inc.)
 * @author Sam Reid (PhET Interactive Simulations)
 */ import optionize from '../../phet-core/js/optionize.js';
import sceneryPhet from './sceneryPhet.js';
import SpectrumNode from './SpectrumNode.js';
import VisibleColor from './VisibleColor.js';
let WavelengthSpectrumNode = class WavelengthSpectrumNode extends SpectrumNode {
    constructor(providedOptions){
        const options = optionize()({
            valueToColor: (value)=>VisibleColor.wavelengthToColor(value),
            minWavelength: VisibleColor.MIN_WAVELENGTH,
            maxWavelength: VisibleColor.MAX_WAVELENGTH
        }, providedOptions);
        // validation
        assert && assert(options.minWavelength < options.maxWavelength);
        assert && assert(options.minWavelength >= VisibleColor.MIN_WAVELENGTH && options.minWavelength <= VisibleColor.MAX_WAVELENGTH);
        assert && assert(options.maxWavelength >= VisibleColor.MIN_WAVELENGTH && options.maxWavelength <= VisibleColor.MAX_WAVELENGTH);
        options.minValue = options.minWavelength;
        options.maxValue = options.maxWavelength;
        super(options);
    }
};
export { WavelengthSpectrumNode as default };
sceneryPhet.register('WavelengthSpectrumNode', WavelengthSpectrumNode);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NjZW5lcnktcGhldC9qcy9XYXZlbGVuZ3RoU3BlY3RydW1Ob2RlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE0LTIwMjMsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxuXG4vKipcbiAqIFdhdmVsZW5ndGhTcGVjdHJ1bU5vZGUgZGlzcGxheXMgYSByZWN0YW5nbGUgb2YgdGhlIHZpc2libGUgc3BlY3RydW0uXG4gKlxuICogQGF1dGhvciBDaHJpcyBNYWxsZXkgKFBpeGVsWm9vbSwgSW5jLilcbiAqIEBhdXRob3IgU2FtIFJlaWQgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXG4gKi9cblxuaW1wb3J0IG9wdGlvbml6ZSBmcm9tICcuLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcbmltcG9ydCBTdHJpY3RPbWl0IGZyb20gJy4uLy4uL3BoZXQtY29yZS9qcy90eXBlcy9TdHJpY3RPbWl0LmpzJztcbmltcG9ydCBzY2VuZXJ5UGhldCBmcm9tICcuL3NjZW5lcnlQaGV0LmpzJztcbmltcG9ydCBTcGVjdHJ1bU5vZGUsIHsgU3BlY3RydW1Ob2RlT3B0aW9ucyB9IGZyb20gJy4vU3BlY3RydW1Ob2RlLmpzJztcbmltcG9ydCBWaXNpYmxlQ29sb3IgZnJvbSAnLi9WaXNpYmxlQ29sb3IuanMnO1xuXG50eXBlIFNlbGZPcHRpb25zID0ge1xuICBtaW5XYXZlbGVuZ3RoPzogbnVtYmVyO1xuICBtYXhXYXZlbGVuZ3RoPzogbnVtYmVyO1xufTtcblxuZXhwb3J0IHR5cGUgV2F2ZWxlbmd0aFNwZWN0cnVtTm9kZU9wdGlvbnMgPSBTZWxmT3B0aW9ucyAmIFN0cmljdE9taXQ8U3BlY3RydW1Ob2RlT3B0aW9ucywgJ21pblZhbHVlJyB8ICdtYXhWYWx1ZSc+O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBXYXZlbGVuZ3RoU3BlY3RydW1Ob2RlIGV4dGVuZHMgU3BlY3RydW1Ob2RlIHtcblxuICBwdWJsaWMgY29uc3RydWN0b3IoIHByb3ZpZGVkT3B0aW9ucz86IFdhdmVsZW5ndGhTcGVjdHJ1bU5vZGVPcHRpb25zICkge1xuXG4gICAgY29uc3Qgb3B0aW9ucyA9IG9wdGlvbml6ZTxXYXZlbGVuZ3RoU3BlY3RydW1Ob2RlT3B0aW9ucywgU2VsZk9wdGlvbnMsIFNwZWN0cnVtTm9kZU9wdGlvbnM+KCkoIHtcbiAgICAgIHZhbHVlVG9Db2xvcjogKCB2YWx1ZTogbnVtYmVyICkgPT4gVmlzaWJsZUNvbG9yLndhdmVsZW5ndGhUb0NvbG9yKCB2YWx1ZSApLFxuICAgICAgbWluV2F2ZWxlbmd0aDogVmlzaWJsZUNvbG9yLk1JTl9XQVZFTEVOR1RILFxuICAgICAgbWF4V2F2ZWxlbmd0aDogVmlzaWJsZUNvbG9yLk1BWF9XQVZFTEVOR1RIXG4gICAgfSwgcHJvdmlkZWRPcHRpb25zICk7XG5cbiAgICAvLyB2YWxpZGF0aW9uXG4gICAgYXNzZXJ0ICYmIGFzc2VydCggb3B0aW9ucy5taW5XYXZlbGVuZ3RoIDwgb3B0aW9ucy5tYXhXYXZlbGVuZ3RoICk7XG4gICAgYXNzZXJ0ICYmIGFzc2VydCggb3B0aW9ucy5taW5XYXZlbGVuZ3RoID49IFZpc2libGVDb2xvci5NSU5fV0FWRUxFTkdUSCAmJiBvcHRpb25zLm1pbldhdmVsZW5ndGggPD0gVmlzaWJsZUNvbG9yLk1BWF9XQVZFTEVOR1RIICk7XG4gICAgYXNzZXJ0ICYmIGFzc2VydCggb3B0aW9ucy5tYXhXYXZlbGVuZ3RoID49IFZpc2libGVDb2xvci5NSU5fV0FWRUxFTkdUSCAmJiBvcHRpb25zLm1heFdhdmVsZW5ndGggPD0gVmlzaWJsZUNvbG9yLk1BWF9XQVZFTEVOR1RIICk7XG5cbiAgICBvcHRpb25zLm1pblZhbHVlID0gb3B0aW9ucy5taW5XYXZlbGVuZ3RoO1xuICAgIG9wdGlvbnMubWF4VmFsdWUgPSBvcHRpb25zLm1heFdhdmVsZW5ndGg7XG5cbiAgICBzdXBlciggb3B0aW9ucyApO1xuICB9XG59XG5cbnNjZW5lcnlQaGV0LnJlZ2lzdGVyKCAnV2F2ZWxlbmd0aFNwZWN0cnVtTm9kZScsIFdhdmVsZW5ndGhTcGVjdHJ1bU5vZGUgKTsiXSwibmFtZXMiOlsib3B0aW9uaXplIiwic2NlbmVyeVBoZXQiLCJTcGVjdHJ1bU5vZGUiLCJWaXNpYmxlQ29sb3IiLCJXYXZlbGVuZ3RoU3BlY3RydW1Ob2RlIiwicHJvdmlkZWRPcHRpb25zIiwib3B0aW9ucyIsInZhbHVlVG9Db2xvciIsInZhbHVlIiwid2F2ZWxlbmd0aFRvQ29sb3IiLCJtaW5XYXZlbGVuZ3RoIiwiTUlOX1dBVkVMRU5HVEgiLCJtYXhXYXZlbGVuZ3RoIiwiTUFYX1dBVkVMRU5HVEgiLCJhc3NlcnQiLCJtaW5WYWx1ZSIsIm1heFZhbHVlIiwicmVnaXN0ZXIiXSwibWFwcGluZ3MiOiJBQUFBLHNEQUFzRDtBQUV0RDs7Ozs7Q0FLQyxHQUVELE9BQU9BLGVBQWUsa0NBQWtDO0FBRXhELE9BQU9DLGlCQUFpQixtQkFBbUI7QUFDM0MsT0FBT0Msa0JBQTJDLG9CQUFvQjtBQUN0RSxPQUFPQyxrQkFBa0Isb0JBQW9CO0FBUzlCLElBQUEsQUFBTUMseUJBQU4sTUFBTUEsK0JBQStCRjtJQUVsRCxZQUFvQkcsZUFBK0MsQ0FBRztRQUVwRSxNQUFNQyxVQUFVTixZQUE4RTtZQUM1Rk8sY0FBYyxDQUFFQyxRQUFtQkwsYUFBYU0saUJBQWlCLENBQUVEO1lBQ25FRSxlQUFlUCxhQUFhUSxjQUFjO1lBQzFDQyxlQUFlVCxhQUFhVSxjQUFjO1FBQzVDLEdBQUdSO1FBRUgsYUFBYTtRQUNiUyxVQUFVQSxPQUFRUixRQUFRSSxhQUFhLEdBQUdKLFFBQVFNLGFBQWE7UUFDL0RFLFVBQVVBLE9BQVFSLFFBQVFJLGFBQWEsSUFBSVAsYUFBYVEsY0FBYyxJQUFJTCxRQUFRSSxhQUFhLElBQUlQLGFBQWFVLGNBQWM7UUFDOUhDLFVBQVVBLE9BQVFSLFFBQVFNLGFBQWEsSUFBSVQsYUFBYVEsY0FBYyxJQUFJTCxRQUFRTSxhQUFhLElBQUlULGFBQWFVLGNBQWM7UUFFOUhQLFFBQVFTLFFBQVEsR0FBR1QsUUFBUUksYUFBYTtRQUN4Q0osUUFBUVUsUUFBUSxHQUFHVixRQUFRTSxhQUFhO1FBRXhDLEtBQUssQ0FBRU47SUFDVDtBQUNGO0FBcEJBLFNBQXFCRixvQ0FvQnBCO0FBRURILFlBQVlnQixRQUFRLENBQUUsMEJBQTBCYiJ9