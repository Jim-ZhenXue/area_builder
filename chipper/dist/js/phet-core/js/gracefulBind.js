// Copyright 2021-2023, University of Colorado Boulder
/**
 * Support gracefully binding a global function to itself. Returns null if the global doesn't exist.
 * @author Sam Reid (PhET Interactive Simulations)
 * @author Michael Kauzmann (PhET Interactive Simulations)
 */ import phetCore from './phetCore.js';
/**
 * If the path exists on the window global, return it as a bound function, otherwise returns null
 * @param path a path to a method, dot-separated, including the method, such as 'phet.joist.sim.showPopup'
 */ const gracefulBind = (path)=>{
    assert && assert(path.split('.').length > 1, 'path must have multiple parts');
    assert && assert(path.trim() === path, 'path must be trimmed');
    const terms = path.split('.');
    const method = terms.pop(); // mutates terms to become the method container
    const object = _.get(window, terms);
    return object ? object[method].bind(object) : null;
};
phetCore.register('gracefulBind', gracefulBind);
export default gracefulBind;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9ncmFjZWZ1bEJpbmQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXG5cbi8qKlxuICogU3VwcG9ydCBncmFjZWZ1bGx5IGJpbmRpbmcgYSBnbG9iYWwgZnVuY3Rpb24gdG8gaXRzZWxmLiBSZXR1cm5zIG51bGwgaWYgdGhlIGdsb2JhbCBkb2Vzbid0IGV4aXN0LlxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcbiAqIEBhdXRob3IgTWljaGFlbCBLYXV6bWFubiAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcbiAqL1xuXG5pbXBvcnQgcGhldENvcmUgZnJvbSAnLi9waGV0Q29yZS5qcyc7XG5cbi8qKlxuICogSWYgdGhlIHBhdGggZXhpc3RzIG9uIHRoZSB3aW5kb3cgZ2xvYmFsLCByZXR1cm4gaXQgYXMgYSBib3VuZCBmdW5jdGlvbiwgb3RoZXJ3aXNlIHJldHVybnMgbnVsbFxuICogQHBhcmFtIHBhdGggYSBwYXRoIHRvIGEgbWV0aG9kLCBkb3Qtc2VwYXJhdGVkLCBpbmNsdWRpbmcgdGhlIG1ldGhvZCwgc3VjaCBhcyAncGhldC5qb2lzdC5zaW0uc2hvd1BvcHVwJ1xuICovXG5jb25zdCBncmFjZWZ1bEJpbmQgPSAoIHBhdGg6IHN0cmluZyApOiBudWxsIHwgVm9pZEZ1bmN0aW9uID0+IHtcbiAgYXNzZXJ0ICYmIGFzc2VydCggcGF0aC5zcGxpdCggJy4nICkubGVuZ3RoID4gMSwgJ3BhdGggbXVzdCBoYXZlIG11bHRpcGxlIHBhcnRzJyApO1xuICBhc3NlcnQgJiYgYXNzZXJ0KCBwYXRoLnRyaW0oKSA9PT0gcGF0aCwgJ3BhdGggbXVzdCBiZSB0cmltbWVkJyApO1xuICBjb25zdCB0ZXJtcyA9IHBhdGguc3BsaXQoICcuJyApO1xuICBjb25zdCBtZXRob2QgPSB0ZXJtcy5wb3AoKSE7IC8vIG11dGF0ZXMgdGVybXMgdG8gYmVjb21lIHRoZSBtZXRob2QgY29udGFpbmVyXG4gIGNvbnN0IG9iamVjdCA9IF8uZ2V0KCB3aW5kb3csIHRlcm1zICk7XG4gIHJldHVybiBvYmplY3QgPyBvYmplY3RbIG1ldGhvZCBdLmJpbmQoIG9iamVjdCApIDogbnVsbDtcbn07XG5cbnBoZXRDb3JlLnJlZ2lzdGVyKCAnZ3JhY2VmdWxCaW5kJywgZ3JhY2VmdWxCaW5kICk7XG5cbmV4cG9ydCBkZWZhdWx0IGdyYWNlZnVsQmluZDsiXSwibmFtZXMiOlsicGhldENvcmUiLCJncmFjZWZ1bEJpbmQiLCJwYXRoIiwiYXNzZXJ0Iiwic3BsaXQiLCJsZW5ndGgiLCJ0cmltIiwidGVybXMiLCJtZXRob2QiLCJwb3AiLCJvYmplY3QiLCJfIiwiZ2V0Iiwid2luZG93IiwiYmluZCIsInJlZ2lzdGVyIl0sIm1hcHBpbmdzIjoiQUFBQSxzREFBc0Q7QUFFdEQ7Ozs7Q0FJQyxHQUVELE9BQU9BLGNBQWMsZ0JBQWdCO0FBRXJDOzs7Q0FHQyxHQUNELE1BQU1DLGVBQWUsQ0FBRUM7SUFDckJDLFVBQVVBLE9BQVFELEtBQUtFLEtBQUssQ0FBRSxLQUFNQyxNQUFNLEdBQUcsR0FBRztJQUNoREYsVUFBVUEsT0FBUUQsS0FBS0ksSUFBSSxPQUFPSixNQUFNO0lBQ3hDLE1BQU1LLFFBQVFMLEtBQUtFLEtBQUssQ0FBRTtJQUMxQixNQUFNSSxTQUFTRCxNQUFNRSxHQUFHLElBQUssK0NBQStDO0lBQzVFLE1BQU1DLFNBQVNDLEVBQUVDLEdBQUcsQ0FBRUMsUUFBUU47SUFDOUIsT0FBT0csU0FBU0EsTUFBTSxDQUFFRixPQUFRLENBQUNNLElBQUksQ0FBRUosVUFBVztBQUNwRDtBQUVBVixTQUFTZSxRQUFRLENBQUUsZ0JBQWdCZDtBQUVuQyxlQUFlQSxhQUFhIn0=