// Copyright 2013-2023, University of Colorado Boulder
/**
 * Like Underscore's _.extend and PHET_CORE/merge, but with hardcoded support for ES5 getters/setters. In general this
 * type shouldn't be used for phet's options pattern, and instead was designed to support extension for defining
 * mixins and object prototypes.
 *
 * See https://github.com/documentcloud/underscore/pull/986.
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */ import phetCore from './phetCore.js';
function extend(obj, ...sources) {
    _.each(sources, (source)=>{
        if (source) {
            for(const prop in source){
                Object.defineProperty(obj, prop, Object.getOwnPropertyDescriptor(source, prop));
            }
        }
    });
    return obj;
}
phetCore.register('extend', extend);
export default extend;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9leHRlbmQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTMtMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXG5cbi8qKlxuICogTGlrZSBVbmRlcnNjb3JlJ3MgXy5leHRlbmQgYW5kIFBIRVRfQ09SRS9tZXJnZSwgYnV0IHdpdGggaGFyZGNvZGVkIHN1cHBvcnQgZm9yIEVTNSBnZXR0ZXJzL3NldHRlcnMuIEluIGdlbmVyYWwgdGhpc1xuICogdHlwZSBzaG91bGRuJ3QgYmUgdXNlZCBmb3IgcGhldCdzIG9wdGlvbnMgcGF0dGVybiwgYW5kIGluc3RlYWQgd2FzIGRlc2lnbmVkIHRvIHN1cHBvcnQgZXh0ZW5zaW9uIGZvciBkZWZpbmluZ1xuICogbWl4aW5zIGFuZCBvYmplY3QgcHJvdG90eXBlcy5cbiAqXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2RvY3VtZW50Y2xvdWQvdW5kZXJzY29yZS9wdWxsLzk4Ni5cbiAqXG4gKiBAYXV0aG9yIEpvbmF0aGFuIE9sc29uIDxqb25hdGhhbi5vbHNvbkBjb2xvcmFkby5lZHU+XG4gKi9cblxuaW1wb3J0IHBoZXRDb3JlIGZyb20gJy4vcGhldENvcmUuanMnO1xuXG5mdW5jdGlvbiBleHRlbmQ8VD4oIG9iajogVCwgLi4uc291cmNlczogQXJyYXk8b2JqZWN0IHwgdW5kZWZpbmVkPiApOiBUIHtcbiAgXy5lYWNoKCBzb3VyY2VzLCBzb3VyY2UgPT4ge1xuICAgIGlmICggc291cmNlICkge1xuICAgICAgZm9yICggY29uc3QgcHJvcCBpbiBzb3VyY2UgKSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSggb2JqLCBwcm9wLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKCBzb3VyY2UsIHByb3AgKSEgKTtcbiAgICAgIH1cbiAgICB9XG4gIH0gKTtcbiAgcmV0dXJuIG9iajtcbn1cblxucGhldENvcmUucmVnaXN0ZXIoICdleHRlbmQnLCBleHRlbmQgKTtcblxuZXhwb3J0IGRlZmF1bHQgZXh0ZW5kOyJdLCJuYW1lcyI6WyJwaGV0Q29yZSIsImV4dGVuZCIsIm9iaiIsInNvdXJjZXMiLCJfIiwiZWFjaCIsInNvdXJjZSIsInByb3AiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInJlZ2lzdGVyIl0sIm1hcHBpbmdzIjoiQUFBQSxzREFBc0Q7QUFFdEQ7Ozs7Ozs7O0NBUUMsR0FFRCxPQUFPQSxjQUFjLGdCQUFnQjtBQUVyQyxTQUFTQyxPQUFXQyxHQUFNLEVBQUUsR0FBR0MsT0FBa0M7SUFDL0RDLEVBQUVDLElBQUksQ0FBRUYsU0FBU0csQ0FBQUE7UUFDZixJQUFLQSxRQUFTO1lBQ1osSUFBTSxNQUFNQyxRQUFRRCxPQUFTO2dCQUMzQkUsT0FBT0MsY0FBYyxDQUFFUCxLQUFLSyxNQUFNQyxPQUFPRSx3QkFBd0IsQ0FBRUosUUFBUUM7WUFDN0U7UUFDRjtJQUNGO0lBQ0EsT0FBT0w7QUFDVDtBQUVBRixTQUFTVyxRQUFRLENBQUUsVUFBVVY7QUFFN0IsZUFBZUEsT0FBTyJ9