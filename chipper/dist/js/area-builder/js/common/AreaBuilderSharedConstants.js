// Copyright 2014-2023, University of Colorado Boulder
/**
 * Constants that are shared between the various portions of the Area Builder simulation.
 *
 * @author John Blanco
 */ import Bounds2 from '../../../dot/js/Bounds2.js';
import areaBuilder from '../areaBuilder.js';
import AreaBuilderStrings from '../AreaBuilderStrings.js';
const invalidValueString = AreaBuilderStrings.invalidValue;
const AreaBuilderSharedConstants = {
    // A PhET wide decision was made to not update custom layout bounds even if they do not match the
    // default layout bounds in ScreenView. Do not change these bounds as changes could break or disturb
    // any phet-io instrumention. https://github.com/phetsims/phet-io/issues/1939
    LAYOUT_BOUNDS: new Bounds2(0, 0, 768, 464),
    // colors used for the various shapes
    GREENISH_COLOR: '#33E16E',
    DARK_GREEN_COLOR: '#1A7137',
    PURPLISH_COLOR: '#9D87C9',
    DARK_PURPLE_COLOR: '#634F8C',
    ORANGISH_COLOR: '#FFA64D',
    ORANGE_BROWN_COLOR: '#A95327',
    PALE_BLUE_COLOR: '#5DB9E7',
    DARK_BLUE_COLOR: '#277DA9',
    PINKISH_COLOR: '#E88DC9',
    PURPLE_PINK_COLOR: '#AA548D',
    PERIMETER_DARKEN_FACTOR: 0.6,
    // velocity at which animated elements move
    ANIMATION_SPEED: 200,
    // various other constants
    BACKGROUND_COLOR: 'rgb( 225, 255, 255 )',
    CONTROL_PANEL_BACKGROUND_COLOR: 'rgb( 254, 241, 233 )',
    RESET_BUTTON_RADIUS: 22,
    CONTROLS_INSET: 15,
    UNIT_SQUARE_LENGTH: 32,
    // string used to indicate an invalid value for area and perimeter
    INVALID_VALUE: invalidValueString
};
areaBuilder.register('AreaBuilderSharedConstants', AreaBuilderSharedConstants);
export default AreaBuilderSharedConstants;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2FyZWEtYnVpbGRlci9qcy9jb21tb24vQXJlYUJ1aWxkZXJTaGFyZWRDb25zdGFudHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTQtMjAyMywgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXG5cbi8qKlxuICogQ29uc3RhbnRzIHRoYXQgYXJlIHNoYXJlZCBiZXR3ZWVuIHRoZSB2YXJpb3VzIHBvcnRpb25zIG9mIHRoZSBBcmVhIEJ1aWxkZXIgc2ltdWxhdGlvbi5cbiAqXG4gKiBAYXV0aG9yIEpvaG4gQmxhbmNvXG4gKi9cblxuaW1wb3J0IEJvdW5kczIgZnJvbSAnLi4vLi4vLi4vZG90L2pzL0JvdW5kczIuanMnO1xuaW1wb3J0IGFyZWFCdWlsZGVyIGZyb20gJy4uL2FyZWFCdWlsZGVyLmpzJztcbmltcG9ydCBBcmVhQnVpbGRlclN0cmluZ3MgZnJvbSAnLi4vQXJlYUJ1aWxkZXJTdHJpbmdzLmpzJztcblxuY29uc3QgaW52YWxpZFZhbHVlU3RyaW5nID0gQXJlYUJ1aWxkZXJTdHJpbmdzLmludmFsaWRWYWx1ZTtcblxuY29uc3QgQXJlYUJ1aWxkZXJTaGFyZWRDb25zdGFudHMgPSB7XG5cbiAgLy8gQSBQaEVUIHdpZGUgZGVjaXNpb24gd2FzIG1hZGUgdG8gbm90IHVwZGF0ZSBjdXN0b20gbGF5b3V0IGJvdW5kcyBldmVuIGlmIHRoZXkgZG8gbm90IG1hdGNoIHRoZVxuICAvLyBkZWZhdWx0IGxheW91dCBib3VuZHMgaW4gU2NyZWVuVmlldy4gRG8gbm90IGNoYW5nZSB0aGVzZSBib3VuZHMgYXMgY2hhbmdlcyBjb3VsZCBicmVhayBvciBkaXN0dXJiXG4gIC8vIGFueSBwaGV0LWlvIGluc3RydW1lbnRpb24uIGh0dHBzOi8vZ2l0aHViLmNvbS9waGV0c2ltcy9waGV0LWlvL2lzc3Vlcy8xOTM5XG4gIExBWU9VVF9CT1VORFM6IG5ldyBCb3VuZHMyKCAwLCAwLCA3NjgsIDQ2NCApLFxuXG4gIC8vIGNvbG9ycyB1c2VkIGZvciB0aGUgdmFyaW91cyBzaGFwZXNcbiAgR1JFRU5JU0hfQ09MT1I6ICcjMzNFMTZFJyxcbiAgREFSS19HUkVFTl9DT0xPUjogJyMxQTcxMzcnLFxuICBQVVJQTElTSF9DT0xPUjogJyM5RDg3QzknLFxuICBEQVJLX1BVUlBMRV9DT0xPUjogJyM2MzRGOEMnLFxuICBPUkFOR0lTSF9DT0xPUjogJyNGRkE2NEQnLFxuICBPUkFOR0VfQlJPV05fQ09MT1I6ICcjQTk1MzI3JyxcbiAgUEFMRV9CTFVFX0NPTE9SOiAnIzVEQjlFNycsXG4gIERBUktfQkxVRV9DT0xPUjogJyMyNzdEQTknLFxuICBQSU5LSVNIX0NPTE9SOiAnI0U4OERDOScsXG4gIFBVUlBMRV9QSU5LX0NPTE9SOiAnI0FBNTQ4RCcsXG4gIFBFUklNRVRFUl9EQVJLRU5fRkFDVE9SOiAwLjYsIC8vIFRoZSBhbW91bnQgdGhhdCB0aGUgcGVyaW1ldGVyIGNvbG9ycyBhcmUgZGFya2VuZWQgZnJvbSB0aGUgbWFpbiBzaGFwZSBjb2xvclxuXG4gIC8vIHZlbG9jaXR5IGF0IHdoaWNoIGFuaW1hdGVkIGVsZW1lbnRzIG1vdmVcbiAgQU5JTUFUSU9OX1NQRUVEOiAyMDAsIC8vIEluIHNjcmVlbiBjb29yZGluYXRlcyBwZXIgc2Vjb25kXG5cbiAgLy8gdmFyaW91cyBvdGhlciBjb25zdGFudHNcbiAgQkFDS0dST1VORF9DT0xPUjogJ3JnYiggMjI1LCAyNTUsIDI1NSApJyxcbiAgQ09OVFJPTF9QQU5FTF9CQUNLR1JPVU5EX0NPTE9SOiAncmdiKCAyNTQsIDI0MSwgMjMzICknLFxuICBSRVNFVF9CVVRUT05fUkFESVVTOiAyMixcbiAgQ09OVFJPTFNfSU5TRVQ6IDE1LFxuXG4gIFVOSVRfU1FVQVJFX0xFTkdUSDogMzIsIC8vIEluIHNjcmVlbiBjb29yZGluYXRlcywgdXNlZCBpbiBzZXZlcmFsIHBsYWNlc1xuXG4gIC8vIHN0cmluZyB1c2VkIHRvIGluZGljYXRlIGFuIGludmFsaWQgdmFsdWUgZm9yIGFyZWEgYW5kIHBlcmltZXRlclxuICBJTlZBTElEX1ZBTFVFOiBpbnZhbGlkVmFsdWVTdHJpbmdcbn07XG5cbmFyZWFCdWlsZGVyLnJlZ2lzdGVyKCAnQXJlYUJ1aWxkZXJTaGFyZWRDb25zdGFudHMnLCBBcmVhQnVpbGRlclNoYXJlZENvbnN0YW50cyApO1xuZXhwb3J0IGRlZmF1bHQgQXJlYUJ1aWxkZXJTaGFyZWRDb25zdGFudHM7Il0sIm5hbWVzIjpbIkJvdW5kczIiLCJhcmVhQnVpbGRlciIsIkFyZWFCdWlsZGVyU3RyaW5ncyIsImludmFsaWRWYWx1ZVN0cmluZyIsImludmFsaWRWYWx1ZSIsIkFyZWFCdWlsZGVyU2hhcmVkQ29uc3RhbnRzIiwiTEFZT1VUX0JPVU5EUyIsIkdSRUVOSVNIX0NPTE9SIiwiREFSS19HUkVFTl9DT0xPUiIsIlBVUlBMSVNIX0NPTE9SIiwiREFSS19QVVJQTEVfQ09MT1IiLCJPUkFOR0lTSF9DT0xPUiIsIk9SQU5HRV9CUk9XTl9DT0xPUiIsIlBBTEVfQkxVRV9DT0xPUiIsIkRBUktfQkxVRV9DT0xPUiIsIlBJTktJU0hfQ09MT1IiLCJQVVJQTEVfUElOS19DT0xPUiIsIlBFUklNRVRFUl9EQVJLRU5fRkFDVE9SIiwiQU5JTUFUSU9OX1NQRUVEIiwiQkFDS0dST1VORF9DT0xPUiIsIkNPTlRST0xfUEFORUxfQkFDS0dST1VORF9DT0xPUiIsIlJFU0VUX0JVVFRPTl9SQURJVVMiLCJDT05UUk9MU19JTlNFVCIsIlVOSVRfU1FVQVJFX0xFTkdUSCIsIklOVkFMSURfVkFMVUUiLCJyZWdpc3RlciJdLCJtYXBwaW5ncyI6IkFBQUEsc0RBQXNEO0FBRXREOzs7O0NBSUMsR0FFRCxPQUFPQSxhQUFhLDZCQUE2QjtBQUNqRCxPQUFPQyxpQkFBaUIsb0JBQW9CO0FBQzVDLE9BQU9DLHdCQUF3QiwyQkFBMkI7QUFFMUQsTUFBTUMscUJBQXFCRCxtQkFBbUJFLFlBQVk7QUFFMUQsTUFBTUMsNkJBQTZCO0lBRWpDLGlHQUFpRztJQUNqRyxvR0FBb0c7SUFDcEcsNkVBQTZFO0lBQzdFQyxlQUFlLElBQUlOLFFBQVMsR0FBRyxHQUFHLEtBQUs7SUFFdkMscUNBQXFDO0lBQ3JDTyxnQkFBZ0I7SUFDaEJDLGtCQUFrQjtJQUNsQkMsZ0JBQWdCO0lBQ2hCQyxtQkFBbUI7SUFDbkJDLGdCQUFnQjtJQUNoQkMsb0JBQW9CO0lBQ3BCQyxpQkFBaUI7SUFDakJDLGlCQUFpQjtJQUNqQkMsZUFBZTtJQUNmQyxtQkFBbUI7SUFDbkJDLHlCQUF5QjtJQUV6QiwyQ0FBMkM7SUFDM0NDLGlCQUFpQjtJQUVqQiwwQkFBMEI7SUFDMUJDLGtCQUFrQjtJQUNsQkMsZ0NBQWdDO0lBQ2hDQyxxQkFBcUI7SUFDckJDLGdCQUFnQjtJQUVoQkMsb0JBQW9CO0lBRXBCLGtFQUFrRTtJQUNsRUMsZUFBZXJCO0FBQ2pCO0FBRUFGLFlBQVl3QixRQUFRLENBQUUsOEJBQThCcEI7QUFDcEQsZUFBZUEsMkJBQTJCIn0=