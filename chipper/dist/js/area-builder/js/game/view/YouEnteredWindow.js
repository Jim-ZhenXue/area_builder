// Copyright 2014-2023, University of Colorado Boulder
/**
 * A Scenery node that is used to show the user what they entered for a 'Find the Area' style of challenge.  It can be
 * dynamically updated if needed.
 *
 * @author John Blanco
 */ import { Text } from '../../../../scenery/js/imports.js';
import areaBuilder from '../../areaBuilder.js';
import AreaBuilderStrings from '../../AreaBuilderStrings.js';
import FeedbackWindow from './FeedbackWindow.js';
const youEnteredString = AreaBuilderStrings.youEntered;
// constants
const LINE_SPACING = 5;
let YouEnteredWindow = class YouEnteredWindow extends FeedbackWindow {
    // @public
    setValueEntered(valueEntered) {
        this.valueEnteredNode.string = valueEntered.toString();
        this.valueEnteredNode.centerX = this.titleNode.centerX;
    }
    /**
   * Constructor for the window that shows the user what they built.  It is constructed with no contents, and the
   * contents are added later when the build spec is set.
   *
   * @param maxWidth
   * @param {Object} [options]
   */ constructor(maxWidth, options){
        super(youEnteredString, maxWidth, options);
        // value entered text
        this.valueEnteredNode = new Text(99, {
            font: FeedbackWindow.NORMAL_TEXT_FONT,
            top: this.titleNode.bottom + LINE_SPACING
        });
        this.contentNode.addChild(this.valueEnteredNode);
    }
};
areaBuilder.register('YouEnteredWindow', YouEnteredWindow);
export default YouEnteredWindow;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2FyZWEtYnVpbGRlci9qcy9nYW1lL3ZpZXcvWW91RW50ZXJlZFdpbmRvdy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNC0yMDIzLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcblxuLyoqXG4gKiBBIFNjZW5lcnkgbm9kZSB0aGF0IGlzIHVzZWQgdG8gc2hvdyB0aGUgdXNlciB3aGF0IHRoZXkgZW50ZXJlZCBmb3IgYSAnRmluZCB0aGUgQXJlYScgc3R5bGUgb2YgY2hhbGxlbmdlLiAgSXQgY2FuIGJlXG4gKiBkeW5hbWljYWxseSB1cGRhdGVkIGlmIG5lZWRlZC5cbiAqXG4gKiBAYXV0aG9yIEpvaG4gQmxhbmNvXG4gKi9cblxuaW1wb3J0IHsgVGV4dCB9IGZyb20gJy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XG5pbXBvcnQgYXJlYUJ1aWxkZXIgZnJvbSAnLi4vLi4vYXJlYUJ1aWxkZXIuanMnO1xuaW1wb3J0IEFyZWFCdWlsZGVyU3RyaW5ncyBmcm9tICcuLi8uLi9BcmVhQnVpbGRlclN0cmluZ3MuanMnO1xuaW1wb3J0IEZlZWRiYWNrV2luZG93IGZyb20gJy4vRmVlZGJhY2tXaW5kb3cuanMnO1xuXG5jb25zdCB5b3VFbnRlcmVkU3RyaW5nID0gQXJlYUJ1aWxkZXJTdHJpbmdzLnlvdUVudGVyZWQ7XG5cbi8vIGNvbnN0YW50c1xuY29uc3QgTElORV9TUEFDSU5HID0gNTtcblxuY2xhc3MgWW91RW50ZXJlZFdpbmRvdyBleHRlbmRzIEZlZWRiYWNrV2luZG93IHtcblxuICAvKipcbiAgICogQ29uc3RydWN0b3IgZm9yIHRoZSB3aW5kb3cgdGhhdCBzaG93cyB0aGUgdXNlciB3aGF0IHRoZXkgYnVpbHQuICBJdCBpcyBjb25zdHJ1Y3RlZCB3aXRoIG5vIGNvbnRlbnRzLCBhbmQgdGhlXG4gICAqIGNvbnRlbnRzIGFyZSBhZGRlZCBsYXRlciB3aGVuIHRoZSBidWlsZCBzcGVjIGlzIHNldC5cbiAgICpcbiAgICogQHBhcmFtIG1heFdpZHRoXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICovXG4gIGNvbnN0cnVjdG9yKCBtYXhXaWR0aCwgb3B0aW9ucyApIHtcblxuICAgIHN1cGVyKCB5b3VFbnRlcmVkU3RyaW5nLCBtYXhXaWR0aCwgb3B0aW9ucyApO1xuXG4gICAgLy8gdmFsdWUgZW50ZXJlZCB0ZXh0XG4gICAgdGhpcy52YWx1ZUVudGVyZWROb2RlID0gbmV3IFRleHQoICggOTkgKSwge1xuICAgICAgZm9udDogRmVlZGJhY2tXaW5kb3cuTk9STUFMX1RFWFRfRk9OVCxcbiAgICAgIHRvcDogdGhpcy50aXRsZU5vZGUuYm90dG9tICsgTElORV9TUEFDSU5HXG4gICAgfSApO1xuICAgIHRoaXMuY29udGVudE5vZGUuYWRkQ2hpbGQoIHRoaXMudmFsdWVFbnRlcmVkTm9kZSApO1xuICB9XG5cbiAgLy8gQHB1YmxpY1xuICBzZXRWYWx1ZUVudGVyZWQoIHZhbHVlRW50ZXJlZCApIHtcbiAgICB0aGlzLnZhbHVlRW50ZXJlZE5vZGUuc3RyaW5nID0gdmFsdWVFbnRlcmVkLnRvU3RyaW5nKCk7XG4gICAgdGhpcy52YWx1ZUVudGVyZWROb2RlLmNlbnRlclggPSB0aGlzLnRpdGxlTm9kZS5jZW50ZXJYO1xuICB9XG59XG5cbmFyZWFCdWlsZGVyLnJlZ2lzdGVyKCAnWW91RW50ZXJlZFdpbmRvdycsIFlvdUVudGVyZWRXaW5kb3cgKTtcbmV4cG9ydCBkZWZhdWx0IFlvdUVudGVyZWRXaW5kb3c7Il0sIm5hbWVzIjpbIlRleHQiLCJhcmVhQnVpbGRlciIsIkFyZWFCdWlsZGVyU3RyaW5ncyIsIkZlZWRiYWNrV2luZG93IiwieW91RW50ZXJlZFN0cmluZyIsInlvdUVudGVyZWQiLCJMSU5FX1NQQUNJTkciLCJZb3VFbnRlcmVkV2luZG93Iiwic2V0VmFsdWVFbnRlcmVkIiwidmFsdWVFbnRlcmVkIiwidmFsdWVFbnRlcmVkTm9kZSIsInN0cmluZyIsInRvU3RyaW5nIiwiY2VudGVyWCIsInRpdGxlTm9kZSIsImNvbnN0cnVjdG9yIiwibWF4V2lkdGgiLCJvcHRpb25zIiwiZm9udCIsIk5PUk1BTF9URVhUX0ZPTlQiLCJ0b3AiLCJib3R0b20iLCJjb250ZW50Tm9kZSIsImFkZENoaWxkIiwicmVnaXN0ZXIiXSwibWFwcGluZ3MiOiJBQUFBLHNEQUFzRDtBQUV0RDs7Ozs7Q0FLQyxHQUVELFNBQVNBLElBQUksUUFBUSxvQ0FBb0M7QUFDekQsT0FBT0MsaUJBQWlCLHVCQUF1QjtBQUMvQyxPQUFPQyx3QkFBd0IsOEJBQThCO0FBQzdELE9BQU9DLG9CQUFvQixzQkFBc0I7QUFFakQsTUFBTUMsbUJBQW1CRixtQkFBbUJHLFVBQVU7QUFFdEQsWUFBWTtBQUNaLE1BQU1DLGVBQWU7QUFFckIsSUFBQSxBQUFNQyxtQkFBTixNQUFNQSx5QkFBeUJKO0lBcUI3QixVQUFVO0lBQ1ZLLGdCQUFpQkMsWUFBWSxFQUFHO1FBQzlCLElBQUksQ0FBQ0MsZ0JBQWdCLENBQUNDLE1BQU0sR0FBR0YsYUFBYUcsUUFBUTtRQUNwRCxJQUFJLENBQUNGLGdCQUFnQixDQUFDRyxPQUFPLEdBQUcsSUFBSSxDQUFDQyxTQUFTLENBQUNELE9BQU87SUFDeEQ7SUF2QkE7Ozs7OztHQU1DLEdBQ0RFLFlBQWFDLFFBQVEsRUFBRUMsT0FBTyxDQUFHO1FBRS9CLEtBQUssQ0FBRWIsa0JBQWtCWSxVQUFVQztRQUVuQyxxQkFBcUI7UUFDckIsSUFBSSxDQUFDUCxnQkFBZ0IsR0FBRyxJQUFJVixLQUFRLElBQU07WUFDeENrQixNQUFNZixlQUFlZ0IsZ0JBQWdCO1lBQ3JDQyxLQUFLLElBQUksQ0FBQ04sU0FBUyxDQUFDTyxNQUFNLEdBQUdmO1FBQy9CO1FBQ0EsSUFBSSxDQUFDZ0IsV0FBVyxDQUFDQyxRQUFRLENBQUUsSUFBSSxDQUFDYixnQkFBZ0I7SUFDbEQ7QUFPRjtBQUVBVCxZQUFZdUIsUUFBUSxDQUFFLG9CQUFvQmpCO0FBQzFDLGVBQWVBLGlCQUFpQiJ9