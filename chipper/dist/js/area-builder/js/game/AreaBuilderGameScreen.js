// Copyright 2014-2022, University of Colorado Boulder
/**
 * The 'Game' screen in the Area Builder simulation. Conforms to the contract specified in joist/Screen.
 *
 * @author John Blanco
 */ import Property from '../../../axon/js/Property.js';
import Screen from '../../../joist/js/Screen.js';
import ScreenIcon from '../../../joist/js/ScreenIcon.js';
import { Image } from '../../../scenery/js/imports.js';
import gameIcon_png from '../../images/gameIcon_png.js';
import areaBuilder from '../areaBuilder.js';
import AreaBuilderStrings from '../AreaBuilderStrings.js';
import AreaBuilderSharedConstants from '../common/AreaBuilderSharedConstants.js';
import AreaBuilderIconFactory from '../common/view/AreaBuilderIconFactory.js';
import AreaBuilderChallengeFactory from './model/AreaBuilderChallengeFactory.js';
import AreaBuilderGameModel from './model/AreaBuilderGameModel.js';
import QuizGameModel from './model/QuizGameModel.js';
import AreaBuilderGameView from './view/AreaBuilderGameView.js';
let AreaBuilderGameScreen = class AreaBuilderGameScreen extends Screen {
    constructor(tandem){
        const options = {
            name: AreaBuilderStrings.gameStringProperty,
            backgroundColorProperty: new Property(AreaBuilderSharedConstants.BACKGROUND_COLOR),
            homeScreenIcon: new ScreenIcon(new Image(gameIcon_png), {
                maxIconWidthProportion: 1,
                maxIconHeightProportion: 1
            }),
            navigationBarIcon: AreaBuilderIconFactory.createGameScreenNavBarIcon(),
            tandem: tandem
        };
        super(()=>new QuizGameModel(new AreaBuilderChallengeFactory(), new AreaBuilderGameModel()), (model)=>new AreaBuilderGameView(model), options);
    }
};
areaBuilder.register('AreaBuilderGameScreen', AreaBuilderGameScreen);
export default AreaBuilderGameScreen;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2FyZWEtYnVpbGRlci9qcy9nYW1lL0FyZWFCdWlsZGVyR2FtZVNjcmVlbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNC0yMDIyLCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcblxuLyoqXG4gKiBUaGUgJ0dhbWUnIHNjcmVlbiBpbiB0aGUgQXJlYSBCdWlsZGVyIHNpbXVsYXRpb24uIENvbmZvcm1zIHRvIHRoZSBjb250cmFjdCBzcGVjaWZpZWQgaW4gam9pc3QvU2NyZWVuLlxuICpcbiAqIEBhdXRob3IgSm9obiBCbGFuY29cbiAqL1xuXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XG5pbXBvcnQgU2NyZWVuIGZyb20gJy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbi5qcyc7XG5pbXBvcnQgU2NyZWVuSWNvbiBmcm9tICcuLi8uLi8uLi9qb2lzdC9qcy9TY3JlZW5JY29uLmpzJztcbmltcG9ydCB7IEltYWdlIH0gZnJvbSAnLi4vLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcbmltcG9ydCBnYW1lSWNvbl9wbmcgZnJvbSAnLi4vLi4vaW1hZ2VzL2dhbWVJY29uX3BuZy5qcyc7XG5pbXBvcnQgYXJlYUJ1aWxkZXIgZnJvbSAnLi4vYXJlYUJ1aWxkZXIuanMnO1xuaW1wb3J0IEFyZWFCdWlsZGVyU3RyaW5ncyBmcm9tICcuLi9BcmVhQnVpbGRlclN0cmluZ3MuanMnO1xuaW1wb3J0IEFyZWFCdWlsZGVyU2hhcmVkQ29uc3RhbnRzIGZyb20gJy4uL2NvbW1vbi9BcmVhQnVpbGRlclNoYXJlZENvbnN0YW50cy5qcyc7XG5pbXBvcnQgQXJlYUJ1aWxkZXJJY29uRmFjdG9yeSBmcm9tICcuLi9jb21tb24vdmlldy9BcmVhQnVpbGRlckljb25GYWN0b3J5LmpzJztcbmltcG9ydCBBcmVhQnVpbGRlckNoYWxsZW5nZUZhY3RvcnkgZnJvbSAnLi9tb2RlbC9BcmVhQnVpbGRlckNoYWxsZW5nZUZhY3RvcnkuanMnO1xuaW1wb3J0IEFyZWFCdWlsZGVyR2FtZU1vZGVsIGZyb20gJy4vbW9kZWwvQXJlYUJ1aWxkZXJHYW1lTW9kZWwuanMnO1xuaW1wb3J0IFF1aXpHYW1lTW9kZWwgZnJvbSAnLi9tb2RlbC9RdWl6R2FtZU1vZGVsLmpzJztcbmltcG9ydCBBcmVhQnVpbGRlckdhbWVWaWV3IGZyb20gJy4vdmlldy9BcmVhQnVpbGRlckdhbWVWaWV3LmpzJztcblxuY2xhc3MgQXJlYUJ1aWxkZXJHYW1lU2NyZWVuIGV4dGVuZHMgU2NyZWVuIHtcblxuICBjb25zdHJ1Y3RvciggdGFuZGVtICkge1xuXG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgIG5hbWU6IEFyZWFCdWlsZGVyU3RyaW5ncy5nYW1lU3RyaW5nUHJvcGVydHksXG4gICAgICBiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eTogbmV3IFByb3BlcnR5KCBBcmVhQnVpbGRlclNoYXJlZENvbnN0YW50cy5CQUNLR1JPVU5EX0NPTE9SICksXG4gICAgICBob21lU2NyZWVuSWNvbjogbmV3IFNjcmVlbkljb24oIG5ldyBJbWFnZSggZ2FtZUljb25fcG5nICksIHtcbiAgICAgICAgbWF4SWNvbldpZHRoUHJvcG9ydGlvbjogMSxcbiAgICAgICAgbWF4SWNvbkhlaWdodFByb3BvcnRpb246IDFcbiAgICAgIH0gKSxcbiAgICAgIG5hdmlnYXRpb25CYXJJY29uOiBBcmVhQnVpbGRlckljb25GYWN0b3J5LmNyZWF0ZUdhbWVTY3JlZW5OYXZCYXJJY29uKCksXG4gICAgICB0YW5kZW06IHRhbmRlbVxuICAgIH07XG5cbiAgICBzdXBlcihcbiAgICAgICgpID0+IG5ldyBRdWl6R2FtZU1vZGVsKCBuZXcgQXJlYUJ1aWxkZXJDaGFsbGVuZ2VGYWN0b3J5KCksIG5ldyBBcmVhQnVpbGRlckdhbWVNb2RlbCgpICksXG4gICAgICBtb2RlbCA9PiBuZXcgQXJlYUJ1aWxkZXJHYW1lVmlldyggbW9kZWwgKSxcbiAgICAgIG9wdGlvbnNcbiAgICApO1xuICB9XG59XG5cbmFyZWFCdWlsZGVyLnJlZ2lzdGVyKCAnQXJlYUJ1aWxkZXJHYW1lU2NyZWVuJywgQXJlYUJ1aWxkZXJHYW1lU2NyZWVuICk7XG5leHBvcnQgZGVmYXVsdCBBcmVhQnVpbGRlckdhbWVTY3JlZW47Il0sIm5hbWVzIjpbIlByb3BlcnR5IiwiU2NyZWVuIiwiU2NyZWVuSWNvbiIsIkltYWdlIiwiZ2FtZUljb25fcG5nIiwiYXJlYUJ1aWxkZXIiLCJBcmVhQnVpbGRlclN0cmluZ3MiLCJBcmVhQnVpbGRlclNoYXJlZENvbnN0YW50cyIsIkFyZWFCdWlsZGVySWNvbkZhY3RvcnkiLCJBcmVhQnVpbGRlckNoYWxsZW5nZUZhY3RvcnkiLCJBcmVhQnVpbGRlckdhbWVNb2RlbCIsIlF1aXpHYW1lTW9kZWwiLCJBcmVhQnVpbGRlckdhbWVWaWV3IiwiQXJlYUJ1aWxkZXJHYW1lU2NyZWVuIiwiY29uc3RydWN0b3IiLCJ0YW5kZW0iLCJvcHRpb25zIiwibmFtZSIsImdhbWVTdHJpbmdQcm9wZXJ0eSIsImJhY2tncm91bmRDb2xvclByb3BlcnR5IiwiQkFDS0dST1VORF9DT0xPUiIsImhvbWVTY3JlZW5JY29uIiwibWF4SWNvbldpZHRoUHJvcG9ydGlvbiIsIm1heEljb25IZWlnaHRQcm9wb3J0aW9uIiwibmF2aWdhdGlvbkJhckljb24iLCJjcmVhdGVHYW1lU2NyZWVuTmF2QmFySWNvbiIsIm1vZGVsIiwicmVnaXN0ZXIiXSwibWFwcGluZ3MiOiJBQUFBLHNEQUFzRDtBQUV0RDs7OztDQUlDLEdBRUQsT0FBT0EsY0FBYywrQkFBK0I7QUFDcEQsT0FBT0MsWUFBWSw4QkFBOEI7QUFDakQsT0FBT0MsZ0JBQWdCLGtDQUFrQztBQUN6RCxTQUFTQyxLQUFLLFFBQVEsaUNBQWlDO0FBQ3ZELE9BQU9DLGtCQUFrQiwrQkFBK0I7QUFDeEQsT0FBT0MsaUJBQWlCLG9CQUFvQjtBQUM1QyxPQUFPQyx3QkFBd0IsMkJBQTJCO0FBQzFELE9BQU9DLGdDQUFnQywwQ0FBMEM7QUFDakYsT0FBT0MsNEJBQTRCLDJDQUEyQztBQUM5RSxPQUFPQyxpQ0FBaUMseUNBQXlDO0FBQ2pGLE9BQU9DLDBCQUEwQixrQ0FBa0M7QUFDbkUsT0FBT0MsbUJBQW1CLDJCQUEyQjtBQUNyRCxPQUFPQyx5QkFBeUIsZ0NBQWdDO0FBRWhFLElBQUEsQUFBTUMsd0JBQU4sTUFBTUEsOEJBQThCWjtJQUVsQ2EsWUFBYUMsTUFBTSxDQUFHO1FBRXBCLE1BQU1DLFVBQVU7WUFDZEMsTUFBTVgsbUJBQW1CWSxrQkFBa0I7WUFDM0NDLHlCQUF5QixJQUFJbkIsU0FBVU8sMkJBQTJCYSxnQkFBZ0I7WUFDbEZDLGdCQUFnQixJQUFJbkIsV0FBWSxJQUFJQyxNQUFPQyxlQUFnQjtnQkFDekRrQix3QkFBd0I7Z0JBQ3hCQyx5QkFBeUI7WUFDM0I7WUFDQUMsbUJBQW1CaEIsdUJBQXVCaUIsMEJBQTBCO1lBQ3BFVixRQUFRQTtRQUNWO1FBRUEsS0FBSyxDQUNILElBQU0sSUFBSUosY0FBZSxJQUFJRiwrQkFBK0IsSUFBSUMseUJBQ2hFZ0IsQ0FBQUEsUUFBUyxJQUFJZCxvQkFBcUJjLFFBQ2xDVjtJQUVKO0FBQ0Y7QUFFQVgsWUFBWXNCLFFBQVEsQ0FBRSx5QkFBeUJkO0FBQy9DLGVBQWVBLHNCQUFzQiJ9