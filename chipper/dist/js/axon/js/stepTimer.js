// Copyright 2020-2024, University of Colorado Boulder
// @author Sam Reid (PhET Interactive Simulations)
import axon from './axon.js';
import Timer from './Timer.js';
/**
 * Register and return a singleton timer, which can be used to schedule events. This ticks under the following circumstances:
 * 1) When a JOIST/Sim is active, during the step event
 * 2) In various accessibility tests that require timing
 * 3) In SCENERY/Display's animation loop, which is run by various test and example HTML files
 *
 * In order to run an event when a simulation is inactive and not stepping, see animationFrameTimer.
 *
 * Listeners added with addListener are called with a {number} dt argument (in seconds) via timer.emit in
 * Sim.stepSimulation. Listeners added with setTimeout/setInterval are called with no arguments. This is not specific
 * to the running screen, it is global across all screens.
 */ const stepTimer = new Timer();
axon.register('stepTimer', stepTimer);
export default stepTimer;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2F4b24vanMvc3RlcFRpbWVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIwLTIwMjQsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxuLy8gQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcblxuaW1wb3J0IGF4b24gZnJvbSAnLi9heG9uLmpzJztcbmltcG9ydCBUaW1lciBmcm9tICcuL1RpbWVyLmpzJztcblxuLyoqXG4gKiBSZWdpc3RlciBhbmQgcmV0dXJuIGEgc2luZ2xldG9uIHRpbWVyLCB3aGljaCBjYW4gYmUgdXNlZCB0byBzY2hlZHVsZSBldmVudHMuIFRoaXMgdGlja3MgdW5kZXIgdGhlIGZvbGxvd2luZyBjaXJjdW1zdGFuY2VzOlxuICogMSkgV2hlbiBhIEpPSVNUL1NpbSBpcyBhY3RpdmUsIGR1cmluZyB0aGUgc3RlcCBldmVudFxuICogMikgSW4gdmFyaW91cyBhY2Nlc3NpYmlsaXR5IHRlc3RzIHRoYXQgcmVxdWlyZSB0aW1pbmdcbiAqIDMpIEluIFNDRU5FUlkvRGlzcGxheSdzIGFuaW1hdGlvbiBsb29wLCB3aGljaCBpcyBydW4gYnkgdmFyaW91cyB0ZXN0IGFuZCBleGFtcGxlIEhUTUwgZmlsZXNcbiAqXG4gKiBJbiBvcmRlciB0byBydW4gYW4gZXZlbnQgd2hlbiBhIHNpbXVsYXRpb24gaXMgaW5hY3RpdmUgYW5kIG5vdCBzdGVwcGluZywgc2VlIGFuaW1hdGlvbkZyYW1lVGltZXIuXG4gKlxuICogTGlzdGVuZXJzIGFkZGVkIHdpdGggYWRkTGlzdGVuZXIgYXJlIGNhbGxlZCB3aXRoIGEge251bWJlcn0gZHQgYXJndW1lbnQgKGluIHNlY29uZHMpIHZpYSB0aW1lci5lbWl0IGluXG4gKiBTaW0uc3RlcFNpbXVsYXRpb24uIExpc3RlbmVycyBhZGRlZCB3aXRoIHNldFRpbWVvdXQvc2V0SW50ZXJ2YWwgYXJlIGNhbGxlZCB3aXRoIG5vIGFyZ3VtZW50cy4gVGhpcyBpcyBub3Qgc3BlY2lmaWNcbiAqIHRvIHRoZSBydW5uaW5nIHNjcmVlbiwgaXQgaXMgZ2xvYmFsIGFjcm9zcyBhbGwgc2NyZWVucy5cbiAqL1xuY29uc3Qgc3RlcFRpbWVyID0gbmV3IFRpbWVyKCk7XG5cbmF4b24ucmVnaXN0ZXIoICdzdGVwVGltZXInLCBzdGVwVGltZXIgKTtcbmV4cG9ydCBkZWZhdWx0IHN0ZXBUaW1lcjsiXSwibmFtZXMiOlsiYXhvbiIsIlRpbWVyIiwic3RlcFRpbWVyIiwicmVnaXN0ZXIiXSwibWFwcGluZ3MiOiJBQUFBLHNEQUFzRDtBQUN0RCxrREFBa0Q7QUFFbEQsT0FBT0EsVUFBVSxZQUFZO0FBQzdCLE9BQU9DLFdBQVcsYUFBYTtBQUUvQjs7Ozs7Ozs7Ozs7Q0FXQyxHQUNELE1BQU1DLFlBQVksSUFBSUQ7QUFFdEJELEtBQUtHLFFBQVEsQ0FBRSxhQUFhRDtBQUM1QixlQUFlQSxVQUFVIn0=