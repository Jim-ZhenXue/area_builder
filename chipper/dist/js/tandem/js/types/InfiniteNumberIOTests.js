// Copyright 2021-2024, University of Colorado Boulder
/**
 * Unit tests for InfiniteNumberIO
 *
 * @author Michael Kauzmann (PhET Interactive Simulations)
 */ import InfiniteNumberIO from './InfiniteNumberIO.js';
QUnit.module('InfiniteNumberIO');
QUnit.test('serialization', (assert)=>{
    assert.ok(InfiniteNumberIO.toStateObject(5) === 5, 'simple case');
    assert.ok(InfiniteNumberIO.toStateObject(Number.POSITIVE_INFINITY) === 'POSITIVE_INFINITY', 'serialization positive infinity');
    assert.ok(InfiniteNumberIO.toStateObject(Number.NEGATIVE_INFINITY) === 'NEGATIVE_INFINITY', 'serialization negative infinity');
    assert.ok(InfiniteNumberIO.fromStateObject(InfiniteNumberIO.toStateObject(Number.POSITIVE_INFINITY)) === Number.POSITIVE_INFINITY, 'deserialization positive infinity');
    assert.ok(InfiniteNumberIO.fromStateObject(InfiniteNumberIO.toStateObject(Number.NEGATIVE_INFINITY)) === Number.NEGATIVE_INFINITY, 'deserialization negative infinity');
    window.assert && assert.throws(()=>{
        // @ts-expect-error INTENTIONAL for testing
        InfiniteNumberIO.toStateObject(4 * 'oh hello');
    });
    window.assert && assert.throws(()=>{
        // @ts-expect-error INTENTIONAL for testing
        InfiniteNumberIO.toStateObject('oh hello');
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RhbmRlbS9qcy90eXBlcy9JbmZpbml0ZU51bWJlcklPVGVzdHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXG5cbi8qKlxuICogVW5pdCB0ZXN0cyBmb3IgSW5maW5pdGVOdW1iZXJJT1xuICpcbiAqIEBhdXRob3IgTWljaGFlbCBLYXV6bWFubiAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcbiAqL1xuXG5pbXBvcnQgSW5maW5pdGVOdW1iZXJJTyBmcm9tICcuL0luZmluaXRlTnVtYmVySU8uanMnO1xuXG5RVW5pdC5tb2R1bGUoICdJbmZpbml0ZU51bWJlcklPJyApO1xuXG5RVW5pdC50ZXN0KCAnc2VyaWFsaXphdGlvbicsIGFzc2VydCA9PiB7XG5cbiAgYXNzZXJ0Lm9rKCBJbmZpbml0ZU51bWJlcklPLnRvU3RhdGVPYmplY3QoIDUgKSA9PT0gNSwgJ3NpbXBsZSBjYXNlJyApO1xuXG4gIGFzc2VydC5vayggSW5maW5pdGVOdW1iZXJJTy50b1N0YXRlT2JqZWN0KCBOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFkgKSA9PT0gJ1BPU0lUSVZFX0lORklOSVRZJywgJ3NlcmlhbGl6YXRpb24gcG9zaXRpdmUgaW5maW5pdHknICk7XG4gIGFzc2VydC5vayggSW5maW5pdGVOdW1iZXJJTy50b1N0YXRlT2JqZWN0KCBOdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFkgKSA9PT0gJ05FR0FUSVZFX0lORklOSVRZJywgJ3NlcmlhbGl6YXRpb24gbmVnYXRpdmUgaW5maW5pdHknICk7XG5cbiAgYXNzZXJ0Lm9rKCBJbmZpbml0ZU51bWJlcklPLmZyb21TdGF0ZU9iamVjdCggSW5maW5pdGVOdW1iZXJJTy50b1N0YXRlT2JqZWN0KCBOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFkgKSApID09PSBOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFksICdkZXNlcmlhbGl6YXRpb24gcG9zaXRpdmUgaW5maW5pdHknICk7XG4gIGFzc2VydC5vayggSW5maW5pdGVOdW1iZXJJTy5mcm9tU3RhdGVPYmplY3QoIEluZmluaXRlTnVtYmVySU8udG9TdGF0ZU9iamVjdCggTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZICkgKSA9PT0gTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZLCAnZGVzZXJpYWxpemF0aW9uIG5lZ2F0aXZlIGluZmluaXR5JyApO1xuXG4gIHdpbmRvdy5hc3NlcnQgJiYgYXNzZXJ0LnRocm93cyggKCkgPT4ge1xuXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciBJTlRFTlRJT05BTCBmb3IgdGVzdGluZ1xuICAgIEluZmluaXRlTnVtYmVySU8udG9TdGF0ZU9iamVjdCggNCAqICdvaCBoZWxsbycgKTtcbiAgfSApO1xuICB3aW5kb3cuYXNzZXJ0ICYmIGFzc2VydC50aHJvd3MoICgpID0+IHtcblxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgSU5URU5USU9OQUwgZm9yIHRlc3RpbmdcbiAgICBJbmZpbml0ZU51bWJlcklPLnRvU3RhdGVPYmplY3QoICdvaCBoZWxsbycgKTtcbiAgfSApO1xufSApOyJdLCJuYW1lcyI6WyJJbmZpbml0ZU51bWJlcklPIiwiUVVuaXQiLCJtb2R1bGUiLCJ0ZXN0IiwiYXNzZXJ0Iiwib2siLCJ0b1N0YXRlT2JqZWN0IiwiTnVtYmVyIiwiUE9TSVRJVkVfSU5GSU5JVFkiLCJORUdBVElWRV9JTkZJTklUWSIsImZyb21TdGF0ZU9iamVjdCIsIndpbmRvdyIsInRocm93cyJdLCJtYXBwaW5ncyI6IkFBQUEsc0RBQXNEO0FBRXREOzs7O0NBSUMsR0FFRCxPQUFPQSxzQkFBc0Isd0JBQXdCO0FBRXJEQyxNQUFNQyxNQUFNLENBQUU7QUFFZEQsTUFBTUUsSUFBSSxDQUFFLGlCQUFpQkMsQ0FBQUE7SUFFM0JBLE9BQU9DLEVBQUUsQ0FBRUwsaUJBQWlCTSxhQUFhLENBQUUsT0FBUSxHQUFHO0lBRXRERixPQUFPQyxFQUFFLENBQUVMLGlCQUFpQk0sYUFBYSxDQUFFQyxPQUFPQyxpQkFBaUIsTUFBTyxxQkFBcUI7SUFDL0ZKLE9BQU9DLEVBQUUsQ0FBRUwsaUJBQWlCTSxhQUFhLENBQUVDLE9BQU9FLGlCQUFpQixNQUFPLHFCQUFxQjtJQUUvRkwsT0FBT0MsRUFBRSxDQUFFTCxpQkFBaUJVLGVBQWUsQ0FBRVYsaUJBQWlCTSxhQUFhLENBQUVDLE9BQU9DLGlCQUFpQixPQUFTRCxPQUFPQyxpQkFBaUIsRUFBRTtJQUN4SUosT0FBT0MsRUFBRSxDQUFFTCxpQkFBaUJVLGVBQWUsQ0FBRVYsaUJBQWlCTSxhQUFhLENBQUVDLE9BQU9FLGlCQUFpQixPQUFTRixPQUFPRSxpQkFBaUIsRUFBRTtJQUV4SUUsT0FBT1AsTUFBTSxJQUFJQSxPQUFPUSxNQUFNLENBQUU7UUFFOUIsMkNBQTJDO1FBQzNDWixpQkFBaUJNLGFBQWEsQ0FBRSxJQUFJO0lBQ3RDO0lBQ0FLLE9BQU9QLE1BQU0sSUFBSUEsT0FBT1EsTUFBTSxDQUFFO1FBRTlCLDJDQUEyQztRQUMzQ1osaUJBQWlCTSxhQUFhLENBQUU7SUFDbEM7QUFDRiJ9