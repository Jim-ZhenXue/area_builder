// Copyright 2019-2024, University of Colorado Boulder
/**
 * A tandem for a dynamic element that stores the name of the archetype that defines its dynamic element's schema.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 * @author Chris Klusendorf (PhET Interactive Simulations)
 * @author Michael Kauzmann (PhET Interactive Simulations)
 */ import optionize from '../../phet-core/js/optionize.js';
import Tandem from './Tandem.js';
import TandemConstants from './TandemConstants.js';
import tandemNamespace from './tandemNamespace.js';
let DynamicTandem = class DynamicTandem extends Tandem {
    constructor(parentTandem, name, providedOptions){
        assert && assert(parentTandem, 'DynamicTandem must have a parentTandem');
        const options = optionize()({
            isValidTandemName: (name)=>Tandem.getRegexFromCharacterClass(TandemConstants.BASE_DYNAMIC_TANDEM_CHARACTER_CLASS).test(name)
        }, providedOptions);
        super(parentTandem, name, options);
    }
};
tandemNamespace.register('DynamicTandem', DynamicTandem);
export default DynamicTandem;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RhbmRlbS9qcy9EeW5hbWljVGFuZGVtLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE5LTIwMjQsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxuXG4vKipcbiAqIEEgdGFuZGVtIGZvciBhIGR5bmFtaWMgZWxlbWVudCB0aGF0IHN0b3JlcyB0aGUgbmFtZSBvZiB0aGUgYXJjaGV0eXBlIHRoYXQgZGVmaW5lcyBpdHMgZHluYW1pYyBlbGVtZW50J3Mgc2NoZW1hLlxuICpcbiAqIEBhdXRob3IgU2FtIFJlaWQgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXG4gKiBAYXV0aG9yIENocmlzIEtsdXNlbmRvcmYgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXG4gKiBAYXV0aG9yIE1pY2hhZWwgS2F1em1hbm4gKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXG4gKi9cblxuaW1wb3J0IG9wdGlvbml6ZSwgeyBFbXB0eVNlbGZPcHRpb25zIH0gZnJvbSAnLi4vLi4vcGhldC1jb3JlL2pzL29wdGlvbml6ZS5qcyc7XG5pbXBvcnQgU3RyaWN0T21pdCBmcm9tICcuLi8uLi9waGV0LWNvcmUvanMvdHlwZXMvU3RyaWN0T21pdC5qcyc7XG5pbXBvcnQgVGFuZGVtLCB7IFRhbmRlbU9wdGlvbnMgfSBmcm9tICcuL1RhbmRlbS5qcyc7XG5pbXBvcnQgVGFuZGVtQ29uc3RhbnRzIGZyb20gJy4vVGFuZGVtQ29uc3RhbnRzLmpzJztcbmltcG9ydCB0YW5kZW1OYW1lc3BhY2UgZnJvbSAnLi90YW5kZW1OYW1lc3BhY2UuanMnO1xuXG50eXBlIER5bmFtaWNUYW5kZW1PcHRpb25zID0gU3RyaWN0T21pdDxUYW5kZW1PcHRpb25zLCAnaXNWYWxpZFRhbmRlbU5hbWUnPjtcblxuY2xhc3MgRHluYW1pY1RhbmRlbSBleHRlbmRzIFRhbmRlbSB7XG5cbiAgcHVibGljIGNvbnN0cnVjdG9yKCBwYXJlbnRUYW5kZW06IFRhbmRlbSwgbmFtZTogc3RyaW5nLCBwcm92aWRlZE9wdGlvbnM/OiBEeW5hbWljVGFuZGVtT3B0aW9ucyApIHtcbiAgICBhc3NlcnQgJiYgYXNzZXJ0KCBwYXJlbnRUYW5kZW0sICdEeW5hbWljVGFuZGVtIG11c3QgaGF2ZSBhIHBhcmVudFRhbmRlbScgKTtcbiAgICBjb25zdCBvcHRpb25zID0gb3B0aW9uaXplPER5bmFtaWNUYW5kZW1PcHRpb25zLCBFbXB0eVNlbGZPcHRpb25zLCBUYW5kZW1PcHRpb25zPigpKCB7XG4gICAgICBpc1ZhbGlkVGFuZGVtTmFtZTogKCBuYW1lOiBzdHJpbmcgKSA9PiBUYW5kZW0uZ2V0UmVnZXhGcm9tQ2hhcmFjdGVyQ2xhc3MoIFRhbmRlbUNvbnN0YW50cy5CQVNFX0RZTkFNSUNfVEFOREVNX0NIQVJBQ1RFUl9DTEFTUyApLnRlc3QoIG5hbWUgKVxuICAgIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xuICAgIHN1cGVyKCBwYXJlbnRUYW5kZW0sIG5hbWUsIG9wdGlvbnMgKTtcbiAgfVxufVxuXG50YW5kZW1OYW1lc3BhY2UucmVnaXN0ZXIoICdEeW5hbWljVGFuZGVtJywgRHluYW1pY1RhbmRlbSApO1xuZXhwb3J0IGRlZmF1bHQgRHluYW1pY1RhbmRlbTsiXSwibmFtZXMiOlsib3B0aW9uaXplIiwiVGFuZGVtIiwiVGFuZGVtQ29uc3RhbnRzIiwidGFuZGVtTmFtZXNwYWNlIiwiRHluYW1pY1RhbmRlbSIsInBhcmVudFRhbmRlbSIsIm5hbWUiLCJwcm92aWRlZE9wdGlvbnMiLCJhc3NlcnQiLCJvcHRpb25zIiwiaXNWYWxpZFRhbmRlbU5hbWUiLCJnZXRSZWdleEZyb21DaGFyYWN0ZXJDbGFzcyIsIkJBU0VfRFlOQU1JQ19UQU5ERU1fQ0hBUkFDVEVSX0NMQVNTIiwidGVzdCIsInJlZ2lzdGVyIl0sIm1hcHBpbmdzIjoiQUFBQSxzREFBc0Q7QUFFdEQ7Ozs7OztDQU1DLEdBRUQsT0FBT0EsZUFBcUMsa0NBQWtDO0FBRTlFLE9BQU9DLFlBQStCLGNBQWM7QUFDcEQsT0FBT0MscUJBQXFCLHVCQUF1QjtBQUNuRCxPQUFPQyxxQkFBcUIsdUJBQXVCO0FBSW5ELElBQUEsQUFBTUMsZ0JBQU4sTUFBTUEsc0JBQXNCSDtJQUUxQixZQUFvQkksWUFBb0IsRUFBRUMsSUFBWSxFQUFFQyxlQUFzQyxDQUFHO1FBQy9GQyxVQUFVQSxPQUFRSCxjQUFjO1FBQ2hDLE1BQU1JLFVBQVVULFlBQW9FO1lBQ2xGVSxtQkFBbUIsQ0FBRUosT0FBa0JMLE9BQU9VLDBCQUEwQixDQUFFVCxnQkFBZ0JVLG1DQUFtQyxFQUFHQyxJQUFJLENBQUVQO1FBQ3hJLEdBQUdDO1FBQ0gsS0FBSyxDQUFFRixjQUFjQyxNQUFNRztJQUM3QjtBQUNGO0FBRUFOLGdCQUFnQlcsUUFBUSxDQUFFLGlCQUFpQlY7QUFDM0MsZUFBZUEsY0FBYyJ9