// Copyright 2022-2024, University of Colorado Boulder
/**
 * Ticks for a slider.
 *
 * @author Jonathan Olson (PhET Interactive Simulations)
 *
 */ import DerivedProperty from '../../axon/js/DerivedProperty.js';
import { Shape } from '../../kite/js/imports.js';
import Orientation from '../../phet-core/js/Orientation.js';
import { ManualConstraint, Node, Path } from '../../scenery/js/imports.js';
import sun from './sun.js';
import SunConstants from './SunConstants.js';
let SliderTick = class SliderTick {
    dispose() {
        this.parent.removeChild(this.tickNode);
        this.labelContainer && this.labelContainer.dispose();
        this.labelXProperty.dispose();
        this.labelManualConstraint && this.labelManualConstraint.dispose();
    }
    // NOTE: This could be cleaned up, so we could remove ticks or do other nice things
    constructor(parent, value, label, length, stroke, lineWidth, tickOptions, orientation, track){
        this.parent = parent;
        this.value = value;
        this.label = label;
        this.labelXProperty = new DerivedProperty([
            track.valueToPositionProperty
        ], (valueToPosition)=>valueToPosition.evaluate(value));
        // ticks
        this.tickNode = new Node();
        parent.addChild(this.tickNode);
        const tickInitialPoint = tickOptions.setTickInitialPoint(track.bounds, length);
        const tickPath = new Path(new Shape().moveTo(tickInitialPoint.x, tickInitialPoint.y).lineTo(0, tickInitialPoint.y - length), {
            stroke: stroke,
            lineWidth: lineWidth
        });
        this.labelXProperty.link((x)=>{
            tickPath.x = x;
        });
        this.tickNode.addChild(tickPath);
        // label
        if (label) {
            this.labelContainer = new Node({
                pickable: false
            });
            this.tickNode.addChild(this.labelContainer);
            this.labelContainer.addChild(label);
            // For a vertical slider, rotate labels opposite the rotation of the slider, so that they appear as expected.
            if (orientation === Orientation.VERTICAL) {
                this.labelContainer.rotation = -SunConstants.SLIDER_VERTICAL_ROTATION;
            }
            this.labelManualConstraint = ManualConstraint.create(this.tickNode, [
                tickPath,
                this.labelContainer
            ], (tickProxy, labelProxy)=>{
                tickOptions.positionLabel(labelProxy, tickProxy.bounds);
            });
        }
    }
};
export { SliderTick as default };
sun.register('SliderTick', SliderTick);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3N1bi9qcy9TbGlkZXJUaWNrLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIyLTIwMjQsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxuXG4vKipcbiAqIFRpY2tzIGZvciBhIHNsaWRlci5cbiAqXG4gKiBAYXV0aG9yIEpvbmF0aGFuIE9sc29uIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxuICpcbiAqL1xuXG5pbXBvcnQgRGVyaXZlZFByb3BlcnR5IGZyb20gJy4uLy4uL2F4b24vanMvRGVyaXZlZFByb3BlcnR5LmpzJztcbmltcG9ydCBUUmVhZE9ubHlQcm9wZXJ0eSBmcm9tICcuLi8uLi9heG9uL2pzL1RSZWFkT25seVByb3BlcnR5LmpzJztcbmltcG9ydCBCb3VuZHMyIGZyb20gJy4uLy4uL2RvdC9qcy9Cb3VuZHMyLmpzJztcbmltcG9ydCBWZWN0b3IyIGZyb20gJy4uLy4uL2RvdC9qcy9WZWN0b3IyLmpzJztcbmltcG9ydCB7IFNoYXBlIH0gZnJvbSAnLi4vLi4va2l0ZS9qcy9pbXBvcnRzLmpzJztcbmltcG9ydCBPcmllbnRhdGlvbiBmcm9tICcuLi8uLi9waGV0LWNvcmUvanMvT3JpZW50YXRpb24uanMnO1xuaW1wb3J0IHsgTGF5b3V0YWJsZSwgTWFudWFsQ29uc3RyYWludCwgTm9kZSwgUGF0aCwgVFBhaW50IH0gZnJvbSAnLi4vLi4vc2NlbmVyeS9qcy9pbXBvcnRzLmpzJztcbmltcG9ydCBTbGlkZXJUcmFjayBmcm9tICcuL1NsaWRlclRyYWNrLmpzJztcbmltcG9ydCBzdW4gZnJvbSAnLi9zdW4uanMnO1xuaW1wb3J0IFN1bkNvbnN0YW50cyBmcm9tICcuL1N1bkNvbnN0YW50cy5qcyc7XG5cbmV4cG9ydCB0eXBlIFNsaWRlclRpY2tPcHRpb25zID0ge1xuICB0aWNrTGFiZWxTcGFjaW5nPzogbnVtYmVyO1xuICBtYWpvclRpY2tMZW5ndGg/OiBudW1iZXI7XG4gIG1ham9yVGlja1N0cm9rZT86IFRQYWludDtcbiAgbWFqb3JUaWNrTGluZVdpZHRoPzogbnVtYmVyO1xuICBtaW5vclRpY2tMZW5ndGg/OiBudW1iZXI7XG4gIG1pbm9yVGlja1N0cm9rZT86IFRQYWludDtcbiAgbWlub3JUaWNrTGluZVdpZHRoPzogbnVtYmVyO1xuICBzZXRUaWNrSW5pdGlhbFBvaW50PzogKCB0cmFja0JvdW5kczogQm91bmRzMiwgdGlja0xlbmd0aDogbnVtYmVyICkgPT4gVmVjdG9yMjtcbiAgcG9zaXRpb25MYWJlbD86ICggbGFiZWw6IExheW91dGFibGUsIHRpY2tCb3VuZHM6IEJvdW5kczIgKSA9PiB2b2lkO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2xpZGVyVGljayB7XG5cbiAgcHJpdmF0ZSByZWFkb25seSBsYWJlbFhQcm9wZXJ0eTogVFJlYWRPbmx5UHJvcGVydHk8bnVtYmVyPjtcblxuICBwdWJsaWMgcmVhZG9ubHkgdGlja05vZGU6IE5vZGU7XG5cbiAgcHJpdmF0ZSByZWFkb25seSBsYWJlbE1hbnVhbENvbnN0cmFpbnQ/OiBNYW51YWxDb25zdHJhaW50PE5vZGVbXT47XG4gIHByaXZhdGUgcmVhZG9ubHkgbGFiZWxDb250YWluZXI/OiBOb2RlO1xuXG4gIC8vIE5PVEU6IFRoaXMgY291bGQgYmUgY2xlYW5lZCB1cCwgc28gd2UgY291bGQgcmVtb3ZlIHRpY2tzIG9yIGRvIG90aGVyIG5pY2UgdGhpbmdzXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJlYWRvbmx5IHBhcmVudDogTm9kZSxcbiAgICBwdWJsaWMgcmVhZG9ubHkgdmFsdWU6IG51bWJlcixcbiAgICBwcml2YXRlIHJlYWRvbmx5IGxhYmVsOiBOb2RlIHwgdW5kZWZpbmVkLFxuICAgIGxlbmd0aDogbnVtYmVyLFxuICAgIHN0cm9rZTogVFBhaW50LFxuICAgIGxpbmVXaWR0aDogbnVtYmVyLFxuICAgIHRpY2tPcHRpb25zOiBSZXF1aXJlZDxTbGlkZXJUaWNrT3B0aW9ucz4sXG4gICAgb3JpZW50YXRpb246IE9yaWVudGF0aW9uLFxuICAgIHRyYWNrOiBTbGlkZXJUcmFja1xuICApIHtcblxuICAgIHRoaXMubGFiZWxYUHJvcGVydHkgPSBuZXcgRGVyaXZlZFByb3BlcnR5KCBbIHRyYWNrLnZhbHVlVG9Qb3NpdGlvblByb3BlcnR5IF0sIHZhbHVlVG9Qb3NpdGlvbiA9PiB2YWx1ZVRvUG9zaXRpb24uZXZhbHVhdGUoIHZhbHVlICkgKTtcblxuICAgIC8vIHRpY2tzXG4gICAgdGhpcy50aWNrTm9kZSA9IG5ldyBOb2RlKCk7XG4gICAgcGFyZW50LmFkZENoaWxkKCB0aGlzLnRpY2tOb2RlICk7XG5cbiAgICBjb25zdCB0aWNrSW5pdGlhbFBvaW50ID0gdGlja09wdGlvbnMuc2V0VGlja0luaXRpYWxQb2ludCggdHJhY2suYm91bmRzLCBsZW5ndGggKTtcbiAgICBjb25zdCB0aWNrUGF0aCA9IG5ldyBQYXRoKCBuZXcgU2hhcGUoKVxuICAgICAgICAubW92ZVRvKCB0aWNrSW5pdGlhbFBvaW50LngsIHRpY2tJbml0aWFsUG9pbnQueSApXG4gICAgICAgIC5saW5lVG8oIDAsIHRpY2tJbml0aWFsUG9pbnQueSAtIGxlbmd0aCApLFxuICAgICAgeyBzdHJva2U6IHN0cm9rZSwgbGluZVdpZHRoOiBsaW5lV2lkdGggfSApO1xuXG4gICAgdGhpcy5sYWJlbFhQcm9wZXJ0eS5saW5rKCB4ID0+IHtcbiAgICAgIHRpY2tQYXRoLnggPSB4O1xuICAgIH0gKTtcblxuICAgIHRoaXMudGlja05vZGUuYWRkQ2hpbGQoIHRpY2tQYXRoICk7XG5cbiAgICAvLyBsYWJlbFxuICAgIGlmICggbGFiZWwgKSB7XG5cbiAgICAgIHRoaXMubGFiZWxDb250YWluZXIgPSBuZXcgTm9kZSgge1xuICAgICAgICBwaWNrYWJsZTogZmFsc2VcbiAgICAgIH0gKTtcbiAgICAgIHRoaXMudGlja05vZGUuYWRkQ2hpbGQoIHRoaXMubGFiZWxDb250YWluZXIgKTtcbiAgICAgIHRoaXMubGFiZWxDb250YWluZXIuYWRkQ2hpbGQoIGxhYmVsICk7XG5cbiAgICAgIC8vIEZvciBhIHZlcnRpY2FsIHNsaWRlciwgcm90YXRlIGxhYmVscyBvcHBvc2l0ZSB0aGUgcm90YXRpb24gb2YgdGhlIHNsaWRlciwgc28gdGhhdCB0aGV5IGFwcGVhciBhcyBleHBlY3RlZC5cbiAgICAgIGlmICggb3JpZW50YXRpb24gPT09IE9yaWVudGF0aW9uLlZFUlRJQ0FMICkge1xuICAgICAgICB0aGlzLmxhYmVsQ29udGFpbmVyLnJvdGF0aW9uID0gLVN1bkNvbnN0YW50cy5TTElERVJfVkVSVElDQUxfUk9UQVRJT047XG4gICAgICB9XG5cbiAgICAgIHRoaXMubGFiZWxNYW51YWxDb25zdHJhaW50ID0gTWFudWFsQ29uc3RyYWludC5jcmVhdGUoIHRoaXMudGlja05vZGUsIFsgdGlja1BhdGgsIHRoaXMubGFiZWxDb250YWluZXIgXSwgKCB0aWNrUHJveHksIGxhYmVsUHJveHkgKSA9PiB7XG4gICAgICAgIHRpY2tPcHRpb25zLnBvc2l0aW9uTGFiZWwoIGxhYmVsUHJveHksIHRpY2tQcm94eS5ib3VuZHMgKTtcbiAgICAgIH0gKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgZGlzcG9zZSgpOiB2b2lkIHtcbiAgICB0aGlzLnBhcmVudC5yZW1vdmVDaGlsZCggdGhpcy50aWNrTm9kZSApO1xuICAgIHRoaXMubGFiZWxDb250YWluZXIgJiYgdGhpcy5sYWJlbENvbnRhaW5lci5kaXNwb3NlKCk7XG5cbiAgICB0aGlzLmxhYmVsWFByb3BlcnR5LmRpc3Bvc2UoKTtcbiAgICB0aGlzLmxhYmVsTWFudWFsQ29uc3RyYWludCAmJiB0aGlzLmxhYmVsTWFudWFsQ29uc3RyYWludC5kaXNwb3NlKCk7XG4gIH1cbn1cblxuc3VuLnJlZ2lzdGVyKCAnU2xpZGVyVGljaycsIFNsaWRlclRpY2sgKTsiXSwibmFtZXMiOlsiRGVyaXZlZFByb3BlcnR5IiwiU2hhcGUiLCJPcmllbnRhdGlvbiIsIk1hbnVhbENvbnN0cmFpbnQiLCJOb2RlIiwiUGF0aCIsInN1biIsIlN1bkNvbnN0YW50cyIsIlNsaWRlclRpY2siLCJkaXNwb3NlIiwicGFyZW50IiwicmVtb3ZlQ2hpbGQiLCJ0aWNrTm9kZSIsImxhYmVsQ29udGFpbmVyIiwibGFiZWxYUHJvcGVydHkiLCJsYWJlbE1hbnVhbENvbnN0cmFpbnQiLCJ2YWx1ZSIsImxhYmVsIiwibGVuZ3RoIiwic3Ryb2tlIiwibGluZVdpZHRoIiwidGlja09wdGlvbnMiLCJvcmllbnRhdGlvbiIsInRyYWNrIiwidmFsdWVUb1Bvc2l0aW9uUHJvcGVydHkiLCJ2YWx1ZVRvUG9zaXRpb24iLCJldmFsdWF0ZSIsImFkZENoaWxkIiwidGlja0luaXRpYWxQb2ludCIsInNldFRpY2tJbml0aWFsUG9pbnQiLCJib3VuZHMiLCJ0aWNrUGF0aCIsIm1vdmVUbyIsIngiLCJ5IiwibGluZVRvIiwibGluayIsInBpY2thYmxlIiwiVkVSVElDQUwiLCJyb3RhdGlvbiIsIlNMSURFUl9WRVJUSUNBTF9ST1RBVElPTiIsImNyZWF0ZSIsInRpY2tQcm94eSIsImxhYmVsUHJveHkiLCJwb3NpdGlvbkxhYmVsIiwicmVnaXN0ZXIiXSwibWFwcGluZ3MiOiJBQUFBLHNEQUFzRDtBQUV0RDs7Ozs7Q0FLQyxHQUVELE9BQU9BLHFCQUFxQixtQ0FBbUM7QUFJL0QsU0FBU0MsS0FBSyxRQUFRLDJCQUEyQjtBQUNqRCxPQUFPQyxpQkFBaUIsb0NBQW9DO0FBQzVELFNBQXFCQyxnQkFBZ0IsRUFBRUMsSUFBSSxFQUFFQyxJQUFJLFFBQWdCLDhCQUE4QjtBQUUvRixPQUFPQyxTQUFTLFdBQVc7QUFDM0IsT0FBT0Msa0JBQWtCLG9CQUFvQjtBQWM5QixJQUFBLEFBQU1DLGFBQU4sTUFBTUE7SUE0RFpDLFVBQWdCO1FBQ3JCLElBQUksQ0FBQ0MsTUFBTSxDQUFDQyxXQUFXLENBQUUsSUFBSSxDQUFDQyxRQUFRO1FBQ3RDLElBQUksQ0FBQ0MsY0FBYyxJQUFJLElBQUksQ0FBQ0EsY0FBYyxDQUFDSixPQUFPO1FBRWxELElBQUksQ0FBQ0ssY0FBYyxDQUFDTCxPQUFPO1FBQzNCLElBQUksQ0FBQ00scUJBQXFCLElBQUksSUFBSSxDQUFDQSxxQkFBcUIsQ0FBQ04sT0FBTztJQUNsRTtJQXpEQSxtRkFBbUY7SUFDbkYsWUFDRSxBQUFpQkMsTUFBWSxFQUM3QixBQUFnQk0sS0FBYSxFQUM3QixBQUFpQkMsS0FBdUIsRUFDeENDLE1BQWMsRUFDZEMsTUFBYyxFQUNkQyxTQUFpQixFQUNqQkMsV0FBd0MsRUFDeENDLFdBQXdCLEVBQ3hCQyxLQUFrQixDQUNsQjthQVRpQmIsU0FBQUE7YUFDRE0sUUFBQUE7YUFDQ0MsUUFBQUE7UUFTakIsSUFBSSxDQUFDSCxjQUFjLEdBQUcsSUFBSWQsZ0JBQWlCO1lBQUV1QixNQUFNQyx1QkFBdUI7U0FBRSxFQUFFQyxDQUFBQSxrQkFBbUJBLGdCQUFnQkMsUUFBUSxDQUFFVjtRQUUzSCxRQUFRO1FBQ1IsSUFBSSxDQUFDSixRQUFRLEdBQUcsSUFBSVI7UUFDcEJNLE9BQU9pQixRQUFRLENBQUUsSUFBSSxDQUFDZixRQUFRO1FBRTlCLE1BQU1nQixtQkFBbUJQLFlBQVlRLG1CQUFtQixDQUFFTixNQUFNTyxNQUFNLEVBQUVaO1FBQ3hFLE1BQU1hLFdBQVcsSUFBSTFCLEtBQU0sSUFBSUosUUFDMUIrQixNQUFNLENBQUVKLGlCQUFpQkssQ0FBQyxFQUFFTCxpQkFBaUJNLENBQUMsRUFDOUNDLE1BQU0sQ0FBRSxHQUFHUCxpQkFBaUJNLENBQUMsR0FBR2hCLFNBQ25DO1lBQUVDLFFBQVFBO1lBQVFDLFdBQVdBO1FBQVU7UUFFekMsSUFBSSxDQUFDTixjQUFjLENBQUNzQixJQUFJLENBQUVILENBQUFBO1lBQ3hCRixTQUFTRSxDQUFDLEdBQUdBO1FBQ2Y7UUFFQSxJQUFJLENBQUNyQixRQUFRLENBQUNlLFFBQVEsQ0FBRUk7UUFFeEIsUUFBUTtRQUNSLElBQUtkLE9BQVE7WUFFWCxJQUFJLENBQUNKLGNBQWMsR0FBRyxJQUFJVCxLQUFNO2dCQUM5QmlDLFVBQVU7WUFDWjtZQUNBLElBQUksQ0FBQ3pCLFFBQVEsQ0FBQ2UsUUFBUSxDQUFFLElBQUksQ0FBQ2QsY0FBYztZQUMzQyxJQUFJLENBQUNBLGNBQWMsQ0FBQ2MsUUFBUSxDQUFFVjtZQUU5Qiw2R0FBNkc7WUFDN0csSUFBS0ssZ0JBQWdCcEIsWUFBWW9DLFFBQVEsRUFBRztnQkFDMUMsSUFBSSxDQUFDekIsY0FBYyxDQUFDMEIsUUFBUSxHQUFHLENBQUNoQyxhQUFhaUMsd0JBQXdCO1lBQ3ZFO1lBRUEsSUFBSSxDQUFDekIscUJBQXFCLEdBQUdaLGlCQUFpQnNDLE1BQU0sQ0FBRSxJQUFJLENBQUM3QixRQUFRLEVBQUU7Z0JBQUVtQjtnQkFBVSxJQUFJLENBQUNsQixjQUFjO2FBQUUsRUFBRSxDQUFFNkIsV0FBV0M7Z0JBQ25IdEIsWUFBWXVCLGFBQWEsQ0FBRUQsWUFBWUQsVUFBVVosTUFBTTtZQUN6RDtRQUNGO0lBQ0Y7QUFTRjtBQW5FQSxTQUFxQnRCLHdCQW1FcEI7QUFFREYsSUFBSXVDLFFBQVEsQ0FBRSxjQUFjckMifQ==