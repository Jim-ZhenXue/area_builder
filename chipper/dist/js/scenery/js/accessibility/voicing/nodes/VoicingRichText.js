// Copyright 2021-2024, University of Colorado Boulder
/**
 * RichText that composes ReadingBlock, adding support for Voicing and input listeners that speak content upon
 * user activation.
 *
 * @author Jesse Greenberg (PhET Interactive Simulations)
 */ import optionize from '../../../../../phet-core/js/optionize.js';
import { ReadingBlock, ReadingBlockHighlight, RichText, scenery } from '../../../imports.js';
let VoicingRichText = class VoicingRichText extends ReadingBlock(RichText) {
    constructor(text, providedOptions){
        const options = optionize()({
            // {string|null} - if provided, alternative text that will be read that is different from the
            // visually displayed text
            readingBlockNameResponse: text,
            // pdom
            innerContent: text,
            // voicing
            // default tag name for a ReadingBlock, but there are cases where you may want to override this (such as
            // RichText links)
            readingBlockTagName: 'button'
        }, providedOptions);
        super(text, options);
        this.focusHighlight = new ReadingBlockHighlight(this);
    }
};
scenery.register('VoicingRichText', VoicingRichText);
export default VoicingRichText;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvYWNjZXNzaWJpbGl0eS92b2ljaW5nL25vZGVzL1ZvaWNpbmdSaWNoVGV4dC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0LCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcblxuLyoqXG4gKiBSaWNoVGV4dCB0aGF0IGNvbXBvc2VzIFJlYWRpbmdCbG9jaywgYWRkaW5nIHN1cHBvcnQgZm9yIFZvaWNpbmcgYW5kIGlucHV0IGxpc3RlbmVycyB0aGF0IHNwZWFrIGNvbnRlbnQgdXBvblxuICogdXNlciBhY3RpdmF0aW9uLlxuICpcbiAqIEBhdXRob3IgSmVzc2UgR3JlZW5iZXJnIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxuICovXG5cbmltcG9ydCBUUmVhZE9ubHlQcm9wZXJ0eSBmcm9tICcuLi8uLi8uLi8uLi8uLi9heG9uL2pzL1RSZWFkT25seVByb3BlcnR5LmpzJztcbmltcG9ydCBvcHRpb25pemUsIHsgRW1wdHlTZWxmT3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3BoZXQtY29yZS9qcy9vcHRpb25pemUuanMnO1xuaW1wb3J0IFN0cmljdE9taXQgZnJvbSAnLi4vLi4vLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1N0cmljdE9taXQuanMnO1xuaW1wb3J0IHsgUmVhZGluZ0Jsb2NrLCBSZWFkaW5nQmxvY2tIaWdobGlnaHQsIFJlYWRpbmdCbG9ja09wdGlvbnMsIFJpY2hUZXh0LCBSaWNoVGV4dE9wdGlvbnMsIHNjZW5lcnkgfSBmcm9tICcuLi8uLi8uLi9pbXBvcnRzLmpzJztcblxudHlwZSBTZWxmT3B0aW9ucyA9IEVtcHR5U2VsZk9wdGlvbnM7XG5cbi8vIGZvY3VzSGlnaGxpZ2h0IHdpbGwgYWx3YXlzIGJlIHNldCBieSB0aGlzIGNsYXNzXG50eXBlIFBhcmVudE9wdGlvbnMgPSBSZWFkaW5nQmxvY2tPcHRpb25zICYgU3RyaWN0T21pdDxSaWNoVGV4dE9wdGlvbnMsICdmb2N1c0hpZ2hsaWdodCc+O1xuZXhwb3J0IHR5cGUgVm9pY2luZ1JpY2hUZXh0T3B0aW9ucyA9IFNlbGZPcHRpb25zICYgUGFyZW50T3B0aW9ucztcblxuY2xhc3MgVm9pY2luZ1JpY2hUZXh0IGV4dGVuZHMgUmVhZGluZ0Jsb2NrKCBSaWNoVGV4dCApIHtcblxuICBwdWJsaWMgY29uc3RydWN0b3IoIHRleHQ6IHN0cmluZyB8IFRSZWFkT25seVByb3BlcnR5PHN0cmluZz4sIHByb3ZpZGVkT3B0aW9ucz86IFZvaWNpbmdSaWNoVGV4dE9wdGlvbnMgKSB7XG5cbiAgICBjb25zdCBvcHRpb25zID0gb3B0aW9uaXplPFZvaWNpbmdSaWNoVGV4dE9wdGlvbnMsIFNlbGZPcHRpb25zLCBQYXJlbnRPcHRpb25zPigpKCB7XG5cbiAgICAgIC8vIHtzdHJpbmd8bnVsbH0gLSBpZiBwcm92aWRlZCwgYWx0ZXJuYXRpdmUgdGV4dCB0aGF0IHdpbGwgYmUgcmVhZCB0aGF0IGlzIGRpZmZlcmVudCBmcm9tIHRoZVxuICAgICAgLy8gdmlzdWFsbHkgZGlzcGxheWVkIHRleHRcbiAgICAgIHJlYWRpbmdCbG9ja05hbWVSZXNwb25zZTogdGV4dCxcblxuICAgICAgLy8gcGRvbVxuICAgICAgaW5uZXJDb250ZW50OiB0ZXh0LFxuXG4gICAgICAvLyB2b2ljaW5nXG4gICAgICAvLyBkZWZhdWx0IHRhZyBuYW1lIGZvciBhIFJlYWRpbmdCbG9jaywgYnV0IHRoZXJlIGFyZSBjYXNlcyB3aGVyZSB5b3UgbWF5IHdhbnQgdG8gb3ZlcnJpZGUgdGhpcyAoc3VjaCBhc1xuICAgICAgLy8gUmljaFRleHQgbGlua3MpXG4gICAgICByZWFkaW5nQmxvY2tUYWdOYW1lOiAnYnV0dG9uJ1xuICAgIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xuXG4gICAgc3VwZXIoIHRleHQsIG9wdGlvbnMgKTtcblxuICAgIHRoaXMuZm9jdXNIaWdobGlnaHQgPSBuZXcgUmVhZGluZ0Jsb2NrSGlnaGxpZ2h0KCB0aGlzICk7XG4gIH1cbn1cblxuc2NlbmVyeS5yZWdpc3RlciggJ1ZvaWNpbmdSaWNoVGV4dCcsIFZvaWNpbmdSaWNoVGV4dCApO1xuZXhwb3J0IGRlZmF1bHQgVm9pY2luZ1JpY2hUZXh0OyJdLCJuYW1lcyI6WyJvcHRpb25pemUiLCJSZWFkaW5nQmxvY2siLCJSZWFkaW5nQmxvY2tIaWdobGlnaHQiLCJSaWNoVGV4dCIsInNjZW5lcnkiLCJWb2ljaW5nUmljaFRleHQiLCJ0ZXh0IiwicHJvdmlkZWRPcHRpb25zIiwib3B0aW9ucyIsInJlYWRpbmdCbG9ja05hbWVSZXNwb25zZSIsImlubmVyQ29udGVudCIsInJlYWRpbmdCbG9ja1RhZ05hbWUiLCJmb2N1c0hpZ2hsaWdodCIsInJlZ2lzdGVyIl0sIm1hcHBpbmdzIjoiQUFBQSxzREFBc0Q7QUFFdEQ7Ozs7O0NBS0MsR0FHRCxPQUFPQSxlQUFxQywyQ0FBMkM7QUFFdkYsU0FBU0MsWUFBWSxFQUFFQyxxQkFBcUIsRUFBdUJDLFFBQVEsRUFBbUJDLE9BQU8sUUFBUSxzQkFBc0I7QUFRbkksSUFBQSxBQUFNQyxrQkFBTixNQUFNQSx3QkFBd0JKLGFBQWNFO0lBRTFDLFlBQW9CRyxJQUF3QyxFQUFFQyxlQUF3QyxDQUFHO1FBRXZHLE1BQU1DLFVBQVVSLFlBQWlFO1lBRS9FLDZGQUE2RjtZQUM3RiwwQkFBMEI7WUFDMUJTLDBCQUEwQkg7WUFFMUIsT0FBTztZQUNQSSxjQUFjSjtZQUVkLFVBQVU7WUFDVix3R0FBd0c7WUFDeEcsa0JBQWtCO1lBQ2xCSyxxQkFBcUI7UUFDdkIsR0FBR0o7UUFFSCxLQUFLLENBQUVELE1BQU1FO1FBRWIsSUFBSSxDQUFDSSxjQUFjLEdBQUcsSUFBSVYsc0JBQXVCLElBQUk7SUFDdkQ7QUFDRjtBQUVBRSxRQUFRUyxRQUFRLENBQUUsbUJBQW1CUjtBQUNyQyxlQUFlQSxnQkFBZ0IifQ==