// Copyright 2017-2024, University of Colorado Boulder
/**
 * Unit tests for scenery. Please run once in phet brand and once in brand=phet-io to cover all functionality.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 */ import qunitStart from '../../chipper/js/browser/sim-tests/qunitStart.js';
import './accessibility/FocusTests.js';
import './accessibility/KeyStateTrackerTests.js';
import './accessibility/pdom/ParallelDOMTests.js';
import './accessibility/pdom/PDOMInputTests.js';
import './accessibility/pdom/PDOMSiblingTests.js';
import './accessibility/pdom/PDOMUtilsTests.js';
import './display/DisplayTests.js';
import './display/FuzzTests.js';
import './layout/constraints/ManualConstraintTests.js';
import './layout/nodes/AlignBoxTests.js';
import './layout/nodes/FlowBoxTests.js';
import './layout/constraints/FlowConstraintTests.js';
import './layout/nodes/GridBoxTests.js';
import './layout/constraints/GridConstraintTests.js';
import './listeners/DragListenerTests.js';
import './listeners/FireListenerTests.js';
import './listeners/PressListenerTests.js';
import './listeners/KeyboardListenerTests.js';
import './input/KeyDescriptorTests.js';
import './nodes/NodeTests.js';
import './nodes/RichTextTests.js';
import './nodes/ShapeTests.js';
import './nodes/TextTests.js';
import scenery from './scenery.js';
import './tests/MiscellaneousTests.js';
import './tests/PixelComparisonTests.js';
import './util/AncestorNodesPropertyTests.js';
import './util/ColorTests.js';
import './util/DisplayedPropertyTests.js';
import './util/FontTests.js';
import './util/MatrixBetweenPropertyTests.js';
import './util/TrailTests.js';
// add elements to the QUnit fixture for our Scenery-specific tests
// TODO: is this necessary? https://github.com/phetsims/scenery/issues/1581
const $fixture = $('#qunit-fixture');
$fixture.append($('<div>').attr('id', 'main').attr('style', 'position: absolute; left: 0; top: 0; background-color: white; z-index: 1; width: 640px; height: 480px;'));
$fixture.append($('<div>').attr('id', 'secondary').attr('style', 'position: absolute; left: 0; top: 0; background-color: white; z-index: 0; width: 640px; height: 480px;'));
// schema should be the same as in initializeGlobals
const sceneryLogQueryParameter = QueryStringMachine.get('sceneryLog', {
    type: 'array',
    elementSchema: {
        type: 'string'
    },
    defaultValue: null
});
sceneryLogQueryParameter && scenery.enableLogging(sceneryLogQueryParameter);
// Since our tests are loaded asynchronously, we must direct QUnit to begin the tests
qunitStart();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvc2NlbmVyeS10ZXN0cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxNy0yMDI0LCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcblxuLyoqXG4gKiBVbml0IHRlc3RzIGZvciBzY2VuZXJ5LiBQbGVhc2UgcnVuIG9uY2UgaW4gcGhldCBicmFuZCBhbmQgb25jZSBpbiBicmFuZD1waGV0LWlvIHRvIGNvdmVyIGFsbCBmdW5jdGlvbmFsaXR5LlxuICpcbiAqIEBhdXRob3IgU2FtIFJlaWQgKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXG4gKi9cblxuaW1wb3J0IHF1bml0U3RhcnQgZnJvbSAnLi4vLi4vY2hpcHBlci9qcy9icm93c2VyL3NpbS10ZXN0cy9xdW5pdFN0YXJ0LmpzJztcbmltcG9ydCAnLi9hY2Nlc3NpYmlsaXR5L0ZvY3VzVGVzdHMuanMnO1xuaW1wb3J0ICcuL2FjY2Vzc2liaWxpdHkvS2V5U3RhdGVUcmFja2VyVGVzdHMuanMnO1xuaW1wb3J0ICcuL2FjY2Vzc2liaWxpdHkvcGRvbS9QYXJhbGxlbERPTVRlc3RzLmpzJztcbmltcG9ydCAnLi9hY2Nlc3NpYmlsaXR5L3Bkb20vUERPTUlucHV0VGVzdHMuanMnO1xuaW1wb3J0ICcuL2FjY2Vzc2liaWxpdHkvcGRvbS9QRE9NU2libGluZ1Rlc3RzLmpzJztcbmltcG9ydCAnLi9hY2Nlc3NpYmlsaXR5L3Bkb20vUERPTVV0aWxzVGVzdHMuanMnO1xuaW1wb3J0ICcuL2Rpc3BsYXkvRGlzcGxheVRlc3RzLmpzJztcbmltcG9ydCAnLi9kaXNwbGF5L0Z1enpUZXN0cy5qcyc7XG5pbXBvcnQgJy4vbGF5b3V0L2NvbnN0cmFpbnRzL01hbnVhbENvbnN0cmFpbnRUZXN0cy5qcyc7XG5pbXBvcnQgJy4vbGF5b3V0L25vZGVzL0FsaWduQm94VGVzdHMuanMnO1xuaW1wb3J0ICcuL2xheW91dC9ub2Rlcy9GbG93Qm94VGVzdHMuanMnO1xuaW1wb3J0ICcuL2xheW91dC9jb25zdHJhaW50cy9GbG93Q29uc3RyYWludFRlc3RzLmpzJztcbmltcG9ydCAnLi9sYXlvdXQvbm9kZXMvR3JpZEJveFRlc3RzLmpzJztcbmltcG9ydCAnLi9sYXlvdXQvY29uc3RyYWludHMvR3JpZENvbnN0cmFpbnRUZXN0cy5qcyc7XG5pbXBvcnQgJy4vbGlzdGVuZXJzL0RyYWdMaXN0ZW5lclRlc3RzLmpzJztcbmltcG9ydCAnLi9saXN0ZW5lcnMvRmlyZUxpc3RlbmVyVGVzdHMuanMnO1xuaW1wb3J0ICcuL2xpc3RlbmVycy9QcmVzc0xpc3RlbmVyVGVzdHMuanMnO1xuaW1wb3J0ICcuL2xpc3RlbmVycy9LZXlib2FyZExpc3RlbmVyVGVzdHMuanMnO1xuaW1wb3J0ICcuL2lucHV0L0tleURlc2NyaXB0b3JUZXN0cy5qcyc7XG5pbXBvcnQgJy4vbm9kZXMvTm9kZVRlc3RzLmpzJztcbmltcG9ydCAnLi9ub2Rlcy9SaWNoVGV4dFRlc3RzLmpzJztcbmltcG9ydCAnLi9ub2Rlcy9TaGFwZVRlc3RzLmpzJztcbmltcG9ydCAnLi9ub2Rlcy9UZXh0VGVzdHMuanMnO1xuaW1wb3J0IHNjZW5lcnkgZnJvbSAnLi9zY2VuZXJ5LmpzJztcbmltcG9ydCAnLi90ZXN0cy9NaXNjZWxsYW5lb3VzVGVzdHMuanMnO1xuaW1wb3J0ICcuL3Rlc3RzL1BpeGVsQ29tcGFyaXNvblRlc3RzLmpzJztcbmltcG9ydCAnLi91dGlsL0FuY2VzdG9yTm9kZXNQcm9wZXJ0eVRlc3RzLmpzJztcbmltcG9ydCAnLi91dGlsL0NvbG9yVGVzdHMuanMnO1xuaW1wb3J0ICcuL3V0aWwvRGlzcGxheWVkUHJvcGVydHlUZXN0cy5qcyc7XG5pbXBvcnQgJy4vdXRpbC9Gb250VGVzdHMuanMnO1xuaW1wb3J0ICcuL3V0aWwvTWF0cml4QmV0d2VlblByb3BlcnR5VGVzdHMuanMnO1xuaW1wb3J0ICcuL3V0aWwvVHJhaWxUZXN0cy5qcyc7XG5cbi8vIGFkZCBlbGVtZW50cyB0byB0aGUgUVVuaXQgZml4dHVyZSBmb3Igb3VyIFNjZW5lcnktc3BlY2lmaWMgdGVzdHNcbi8vIFRPRE86IGlzIHRoaXMgbmVjZXNzYXJ5PyBodHRwczovL2dpdGh1Yi5jb20vcGhldHNpbXMvc2NlbmVyeS9pc3N1ZXMvMTU4MVxuY29uc3QgJGZpeHR1cmUgPSAkKCAnI3F1bml0LWZpeHR1cmUnICk7XG4kZml4dHVyZS5hcHBlbmQoICQoICc8ZGl2PicgKS5hdHRyKCAnaWQnLCAnbWFpbicgKS5hdHRyKCAnc3R5bGUnLCAncG9zaXRpb246IGFic29sdXRlOyBsZWZ0OiAwOyB0b3A6IDA7IGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyB6LWluZGV4OiAxOyB3aWR0aDogNjQwcHg7IGhlaWdodDogNDgwcHg7JyApICk7XG4kZml4dHVyZS5hcHBlbmQoICQoICc8ZGl2PicgKS5hdHRyKCAnaWQnLCAnc2Vjb25kYXJ5JyApLmF0dHIoICdzdHlsZScsICdwb3NpdGlvbjogYWJzb2x1dGU7IGxlZnQ6IDA7IHRvcDogMDsgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IHotaW5kZXg6IDA7IHdpZHRoOiA2NDBweDsgaGVpZ2h0OiA0ODBweDsnICkgKTtcblxuLy8gc2NoZW1hIHNob3VsZCBiZSB0aGUgc2FtZSBhcyBpbiBpbml0aWFsaXplR2xvYmFsc1xuY29uc3Qgc2NlbmVyeUxvZ1F1ZXJ5UGFyYW1ldGVyID0gUXVlcnlTdHJpbmdNYWNoaW5lLmdldCggJ3NjZW5lcnlMb2cnLCB7XG4gIHR5cGU6ICdhcnJheScsXG4gIGVsZW1lbnRTY2hlbWE6IHtcbiAgICB0eXBlOiAnc3RyaW5nJ1xuICB9LFxuICBkZWZhdWx0VmFsdWU6IG51bGxcbn0gKTtcbnNjZW5lcnlMb2dRdWVyeVBhcmFtZXRlciAmJiBzY2VuZXJ5LmVuYWJsZUxvZ2dpbmcoIHNjZW5lcnlMb2dRdWVyeVBhcmFtZXRlciApO1xuXG4vLyBTaW5jZSBvdXIgdGVzdHMgYXJlIGxvYWRlZCBhc3luY2hyb25vdXNseSwgd2UgbXVzdCBkaXJlY3QgUVVuaXQgdG8gYmVnaW4gdGhlIHRlc3RzXG5xdW5pdFN0YXJ0KCk7Il0sIm5hbWVzIjpbInF1bml0U3RhcnQiLCJzY2VuZXJ5IiwiJGZpeHR1cmUiLCIkIiwiYXBwZW5kIiwiYXR0ciIsInNjZW5lcnlMb2dRdWVyeVBhcmFtZXRlciIsIlF1ZXJ5U3RyaW5nTWFjaGluZSIsImdldCIsInR5cGUiLCJlbGVtZW50U2NoZW1hIiwiZGVmYXVsdFZhbHVlIiwiZW5hYmxlTG9nZ2luZyJdLCJtYXBwaW5ncyI6IkFBQUEsc0RBQXNEO0FBRXREOzs7O0NBSUMsR0FFRCxPQUFPQSxnQkFBZ0IsbURBQW1EO0FBQzFFLE9BQU8sZ0NBQWdDO0FBQ3ZDLE9BQU8sMENBQTBDO0FBQ2pELE9BQU8sMkNBQTJDO0FBQ2xELE9BQU8seUNBQXlDO0FBQ2hELE9BQU8sMkNBQTJDO0FBQ2xELE9BQU8seUNBQXlDO0FBQ2hELE9BQU8sNEJBQTRCO0FBQ25DLE9BQU8seUJBQXlCO0FBQ2hDLE9BQU8sZ0RBQWdEO0FBQ3ZELE9BQU8sa0NBQWtDO0FBQ3pDLE9BQU8saUNBQWlDO0FBQ3hDLE9BQU8sOENBQThDO0FBQ3JELE9BQU8saUNBQWlDO0FBQ3hDLE9BQU8sOENBQThDO0FBQ3JELE9BQU8sbUNBQW1DO0FBQzFDLE9BQU8sbUNBQW1DO0FBQzFDLE9BQU8sb0NBQW9DO0FBQzNDLE9BQU8sdUNBQXVDO0FBQzlDLE9BQU8sZ0NBQWdDO0FBQ3ZDLE9BQU8sdUJBQXVCO0FBQzlCLE9BQU8sMkJBQTJCO0FBQ2xDLE9BQU8sd0JBQXdCO0FBQy9CLE9BQU8sdUJBQXVCO0FBQzlCLE9BQU9DLGFBQWEsZUFBZTtBQUNuQyxPQUFPLGdDQUFnQztBQUN2QyxPQUFPLGtDQUFrQztBQUN6QyxPQUFPLHVDQUF1QztBQUM5QyxPQUFPLHVCQUF1QjtBQUM5QixPQUFPLG1DQUFtQztBQUMxQyxPQUFPLHNCQUFzQjtBQUM3QixPQUFPLHVDQUF1QztBQUM5QyxPQUFPLHVCQUF1QjtBQUU5QixtRUFBbUU7QUFDbkUsMkVBQTJFO0FBQzNFLE1BQU1DLFdBQVdDLEVBQUc7QUFDcEJELFNBQVNFLE1BQU0sQ0FBRUQsRUFBRyxTQUFVRSxJQUFJLENBQUUsTUFBTSxRQUFTQSxJQUFJLENBQUUsU0FBUztBQUNsRUgsU0FBU0UsTUFBTSxDQUFFRCxFQUFHLFNBQVVFLElBQUksQ0FBRSxNQUFNLGFBQWNBLElBQUksQ0FBRSxTQUFTO0FBRXZFLG9EQUFvRDtBQUNwRCxNQUFNQywyQkFBMkJDLG1CQUFtQkMsR0FBRyxDQUFFLGNBQWM7SUFDckVDLE1BQU07SUFDTkMsZUFBZTtRQUNiRCxNQUFNO0lBQ1I7SUFDQUUsY0FBYztBQUNoQjtBQUNBTCw0QkFBNEJMLFFBQVFXLGFBQWEsQ0FBRU47QUFFbkQscUZBQXFGO0FBQ3JGTiJ9