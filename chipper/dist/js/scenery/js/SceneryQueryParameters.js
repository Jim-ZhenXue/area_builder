// Copyright 2024, University of Colorado Boulder
/**
 * Query parameters for the scenery library.
 *
 * @author Michael Kauzmann (PhET Interactive Simulations)
 */ /* global QSMParsedParameters QueryStringMachineSchema */ import scenery from './scenery.js';
// All scenery query parameters MUST have a default value, since we do not always support QSM as a global.
const schema = {
    /**
   * If this is a finite number AND assertions are enabled, it will track maximum Node parent counts, and
   * will assert that the count is not greater than the limit.
   */ parentLimit: {
        type: 'number',
        defaultValue: Number.POSITIVE_INFINITY,
        public: false
    },
    /**
   * If this is a finite number AND assertions are enabled, it will track maximum Node child counts, and
   * will assert that the number of children on a single Node is not greater than the limit.
   */ childLimit: {
        type: 'number',
        defaultValue: Number.POSITIVE_INFINITY,
        public: false
    }
};
// Scenery doesn't depend on QSM, so be graceful here, and take default values.
const sceneryQueryParameters = window.hasOwnProperty('QueryStringMachine') ? QueryStringMachine.getAll(schema) : Object.keys(schema).map((key)=>{
    return {
        [key]: schema[key].defaultValue
    };
});
scenery.register('sceneryQueryParameters', sceneryQueryParameters);
export default sceneryQueryParameters;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NjZW5lcnkvanMvU2NlbmVyeVF1ZXJ5UGFyYW1ldGVycy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyNCwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXG5cbi8qKlxuICogUXVlcnkgcGFyYW1ldGVycyBmb3IgdGhlIHNjZW5lcnkgbGlicmFyeS5cbiAqXG4gKiBAYXV0aG9yIE1pY2hhZWwgS2F1em1hbm4gKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXG4gKi9cblxuLyogZ2xvYmFsIFFTTVBhcnNlZFBhcmFtZXRlcnMgUXVlcnlTdHJpbmdNYWNoaW5lU2NoZW1hICovXG5cbmltcG9ydCBzY2VuZXJ5IGZyb20gJy4vc2NlbmVyeS5qcyc7XG5cbi8vIEFsbCBzY2VuZXJ5IHF1ZXJ5IHBhcmFtZXRlcnMgTVVTVCBoYXZlIGEgZGVmYXVsdCB2YWx1ZSwgc2luY2Ugd2UgZG8gbm90IGFsd2F5cyBzdXBwb3J0IFFTTSBhcyBhIGdsb2JhbC5cbmNvbnN0IHNjaGVtYSA9IHtcblxuICAvKipcbiAgICogSWYgdGhpcyBpcyBhIGZpbml0ZSBudW1iZXIgQU5EIGFzc2VydGlvbnMgYXJlIGVuYWJsZWQsIGl0IHdpbGwgdHJhY2sgbWF4aW11bSBOb2RlIHBhcmVudCBjb3VudHMsIGFuZFxuICAgKiB3aWxsIGFzc2VydCB0aGF0IHRoZSBjb3VudCBpcyBub3QgZ3JlYXRlciB0aGFuIHRoZSBsaW1pdC5cbiAgICovXG4gIHBhcmVudExpbWl0OiB7XG4gICAgdHlwZTogJ251bWJlcicsXG4gICAgZGVmYXVsdFZhbHVlOiBOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFksXG4gICAgcHVibGljOiBmYWxzZVxuICB9LFxuXG4gIC8qKlxuICAgKiBJZiB0aGlzIGlzIGEgZmluaXRlIG51bWJlciBBTkQgYXNzZXJ0aW9ucyBhcmUgZW5hYmxlZCwgaXQgd2lsbCB0cmFjayBtYXhpbXVtIE5vZGUgY2hpbGQgY291bnRzLCBhbmRcbiAgICogd2lsbCBhc3NlcnQgdGhhdCB0aGUgbnVtYmVyIG9mIGNoaWxkcmVuIG9uIGEgc2luZ2xlIE5vZGUgaXMgbm90IGdyZWF0ZXIgdGhhbiB0aGUgbGltaXQuXG4gICAqL1xuICBjaGlsZExpbWl0OiB7XG4gICAgdHlwZTogJ251bWJlcicsXG4gICAgZGVmYXVsdFZhbHVlOiBOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFksXG4gICAgcHVibGljOiBmYWxzZVxuICB9XG59IHNhdGlzZmllcyBSZWNvcmQ8c3RyaW5nLCBRdWVyeVN0cmluZ01hY2hpbmVTY2hlbWE+O1xuXG4vLyBTY2VuZXJ5IGRvZXNuJ3QgZGVwZW5kIG9uIFFTTSwgc28gYmUgZ3JhY2VmdWwgaGVyZSwgYW5kIHRha2UgZGVmYXVsdCB2YWx1ZXMuXG5jb25zdCBzY2VuZXJ5UXVlcnlQYXJhbWV0ZXJzID0gd2luZG93Lmhhc093blByb3BlcnR5KCAnUXVlcnlTdHJpbmdNYWNoaW5lJyApID9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBRdWVyeVN0cmluZ01hY2hpbmUuZ2V0QWxsKCBzY2hlbWEgKSA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKCBPYmplY3Qua2V5cyggc2NoZW1hICkgYXMgKCBrZXlvZiB0eXBlb2Ygc2NoZW1hIClbXSApLm1hcCgga2V5ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7IFsga2V5IF06IHNjaGVtYVsga2V5IF0uZGVmYXVsdFZhbHVlIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSApO1xuXG5zY2VuZXJ5LnJlZ2lzdGVyKCAnc2NlbmVyeVF1ZXJ5UGFyYW1ldGVycycsIHNjZW5lcnlRdWVyeVBhcmFtZXRlcnMgKTtcblxuZXhwb3J0IGRlZmF1bHQgc2NlbmVyeVF1ZXJ5UGFyYW1ldGVycyBhcyBRU01QYXJzZWRQYXJhbWV0ZXJzPHR5cGVvZiBzY2hlbWE+OyJdLCJuYW1lcyI6WyJzY2VuZXJ5Iiwic2NoZW1hIiwicGFyZW50TGltaXQiLCJ0eXBlIiwiZGVmYXVsdFZhbHVlIiwiTnVtYmVyIiwiUE9TSVRJVkVfSU5GSU5JVFkiLCJwdWJsaWMiLCJjaGlsZExpbWl0Iiwic2NlbmVyeVF1ZXJ5UGFyYW1ldGVycyIsIndpbmRvdyIsImhhc093blByb3BlcnR5IiwiUXVlcnlTdHJpbmdNYWNoaW5lIiwiZ2V0QWxsIiwiT2JqZWN0Iiwia2V5cyIsIm1hcCIsImtleSIsInJlZ2lzdGVyIl0sIm1hcHBpbmdzIjoiQUFBQSxpREFBaUQ7QUFFakQ7Ozs7Q0FJQyxHQUVELHVEQUF1RCxHQUV2RCxPQUFPQSxhQUFhLGVBQWU7QUFFbkMsMEdBQTBHO0FBQzFHLE1BQU1DLFNBQVM7SUFFYjs7O0dBR0MsR0FDREMsYUFBYTtRQUNYQyxNQUFNO1FBQ05DLGNBQWNDLE9BQU9DLGlCQUFpQjtRQUN0Q0MsUUFBUTtJQUNWO0lBRUE7OztHQUdDLEdBQ0RDLFlBQVk7UUFDVkwsTUFBTTtRQUNOQyxjQUFjQyxPQUFPQyxpQkFBaUI7UUFDdENDLFFBQVE7SUFDVjtBQUNGO0FBRUEsK0VBQStFO0FBQy9FLE1BQU1FLHlCQUF5QkMsT0FBT0MsY0FBYyxDQUFFLHdCQUN2QkMsbUJBQW1CQyxNQUFNLENBQUVaLFVBQzNCLEFBQUVhLE9BQU9DLElBQUksQ0FBRWQsUUFBd0NlLEdBQUcsQ0FBRUMsQ0FBQUE7SUFDMUQsT0FBTztRQUFFLENBQUVBLElBQUssRUFBRWhCLE1BQU0sQ0FBRWdCLElBQUssQ0FBQ2IsWUFBWTtJQUFDO0FBQy9DO0FBRS9CSixRQUFRa0IsUUFBUSxDQUFFLDBCQUEwQlQ7QUFFNUMsZUFBZUEsdUJBQTZEIn0=