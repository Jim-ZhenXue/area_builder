// Copyright 2022-2024, University of Colorado Boulder
/**
 * Helper function to show a progress bar on the command line.
 * @author Sam Reid (PhET Interactive Simulations)
 * @author Michael Kauzmann (PhET Interactive Simulations)
 */ import _ from 'lodash';
/**
 * See https://jagascript.com/how-to-build-a-textual-progress-bar-for-cli-and-terminal-apps/
 * @param progress - decimal between 0 and 1
 * @param newline - if each new progress should give a new line, should be false during progress, and true when finally completed
 * @param providedOptions
 */ export default function showCommandLineProgress(progress, newline, providedOptions) {
    const options = _.assignIn({
        progressBarLength: 40 // in characters
    }, providedOptions);
    const dots = '.'.repeat(Math.round(progress * options.progressBarLength));
    const empty = ' '.repeat(Math.round((1 - progress) * options.progressBarLength));
    const newlineString = newline ? '\n' : '';
    process.stdout.write(`\r[${dots}${empty}] ${(progress * 100).toFixed(2)}%${newlineString}`);
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2pzL2NvbW1vbi9zaG93Q29tbWFuZExpbmVQcm9ncmVzcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMi0yMDI0LCBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIEJvdWxkZXJcblxuLyoqXG4gKiBIZWxwZXIgZnVuY3Rpb24gdG8gc2hvdyBhIHByb2dyZXNzIGJhciBvbiB0aGUgY29tbWFuZCBsaW5lLlxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcbiAqIEBhdXRob3IgTWljaGFlbCBLYXV6bWFubiAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcbiAqL1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcblxudHlwZSBTaG93Q29tbWFuZExpbmVQcm9ncmVzc09wdGlvbnMgPSB7IHByb2Nlc3NCYXJMZW5ndGg6IG51bWJlciB9O1xuXG4vKipcbiAqIFNlZSBodHRwczovL2phZ2FzY3JpcHQuY29tL2hvdy10by1idWlsZC1hLXRleHR1YWwtcHJvZ3Jlc3MtYmFyLWZvci1jbGktYW5kLXRlcm1pbmFsLWFwcHMvXG4gKiBAcGFyYW0gcHJvZ3Jlc3MgLSBkZWNpbWFsIGJldHdlZW4gMCBhbmQgMVxuICogQHBhcmFtIG5ld2xpbmUgLSBpZiBlYWNoIG5ldyBwcm9ncmVzcyBzaG91bGQgZ2l2ZSBhIG5ldyBsaW5lLCBzaG91bGQgYmUgZmFsc2UgZHVyaW5nIHByb2dyZXNzLCBhbmQgdHJ1ZSB3aGVuIGZpbmFsbHkgY29tcGxldGVkXG4gKiBAcGFyYW0gcHJvdmlkZWRPcHRpb25zXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNob3dDb21tYW5kTGluZVByb2dyZXNzKCBwcm9ncmVzczogbnVtYmVyLCBuZXdsaW5lOiBib29sZWFuLCBwcm92aWRlZE9wdGlvbnM/OiBQYXJ0aWFsPFNob3dDb21tYW5kTGluZVByb2dyZXNzT3B0aW9ucz4gKTogdm9pZCB7XG4gIGNvbnN0IG9wdGlvbnMgPSBfLmFzc2lnbkluKCB7XG4gICAgcHJvZ3Jlc3NCYXJMZW5ndGg6IDQwIC8vIGluIGNoYXJhY3RlcnNcbiAgfSwgcHJvdmlkZWRPcHRpb25zICk7XG5cbiAgY29uc3QgZG90cyA9ICcuJy5yZXBlYXQoIE1hdGgucm91bmQoIHByb2dyZXNzICogb3B0aW9ucy5wcm9ncmVzc0Jhckxlbmd0aCApICk7XG4gIGNvbnN0IGVtcHR5ID0gJyAnLnJlcGVhdCggTWF0aC5yb3VuZCggKCAxIC0gcHJvZ3Jlc3MgKSAqIG9wdGlvbnMucHJvZ3Jlc3NCYXJMZW5ndGggKSApO1xuICBjb25zdCBuZXdsaW5lU3RyaW5nID0gbmV3bGluZSA/ICdcXG4nIDogJyc7XG4gIHByb2Nlc3Muc3Rkb3V0LndyaXRlKCBgXFxyWyR7ZG90c30ke2VtcHR5fV0gJHsoIHByb2dyZXNzICogMTAwICkudG9GaXhlZCggMiApfSUke25ld2xpbmVTdHJpbmd9YCApO1xufSJdLCJuYW1lcyI6WyJfIiwic2hvd0NvbW1hbmRMaW5lUHJvZ3Jlc3MiLCJwcm9ncmVzcyIsIm5ld2xpbmUiLCJwcm92aWRlZE9wdGlvbnMiLCJvcHRpb25zIiwiYXNzaWduSW4iLCJwcm9ncmVzc0Jhckxlbmd0aCIsImRvdHMiLCJyZXBlYXQiLCJNYXRoIiwicm91bmQiLCJlbXB0eSIsIm5ld2xpbmVTdHJpbmciLCJwcm9jZXNzIiwic3Rkb3V0Iiwid3JpdGUiLCJ0b0ZpeGVkIl0sIm1hcHBpbmdzIjoiQUFBQSxzREFBc0Q7QUFFdEQ7Ozs7Q0FJQyxHQUNELE9BQU9BLE9BQU8sU0FBUztBQUl2Qjs7Ozs7Q0FLQyxHQUNELGVBQWUsU0FBU0Msd0JBQXlCQyxRQUFnQixFQUFFQyxPQUFnQixFQUFFQyxlQUF5RDtJQUM1SSxNQUFNQyxVQUFVTCxFQUFFTSxRQUFRLENBQUU7UUFDMUJDLG1CQUFtQixHQUFHLGdCQUFnQjtJQUN4QyxHQUFHSDtJQUVILE1BQU1JLE9BQU8sSUFBSUMsTUFBTSxDQUFFQyxLQUFLQyxLQUFLLENBQUVULFdBQVdHLFFBQVFFLGlCQUFpQjtJQUN6RSxNQUFNSyxRQUFRLElBQUlILE1BQU0sQ0FBRUMsS0FBS0MsS0FBSyxDQUFFLEFBQUUsQ0FBQSxJQUFJVCxRQUFPLElBQU1HLFFBQVFFLGlCQUFpQjtJQUNsRixNQUFNTSxnQkFBZ0JWLFVBQVUsT0FBTztJQUN2Q1csUUFBUUMsTUFBTSxDQUFDQyxLQUFLLENBQUUsQ0FBQyxHQUFHLEVBQUVSLE9BQU9JLE1BQU0sRUFBRSxFQUFFLEFBQUVWLENBQUFBLFdBQVcsR0FBRSxFQUFJZSxPQUFPLENBQUUsR0FBSSxDQUFDLEVBQUVKLGVBQWU7QUFDakcifQ==