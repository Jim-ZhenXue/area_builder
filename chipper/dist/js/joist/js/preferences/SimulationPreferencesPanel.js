// Copyright 2021-2024, University of Colorado Boulder
/**
 * The content for the "Simulation" tab in the PreferencesDialog. Contains controls for any simulation-specific
 * preferences.
 *
 * @author Jesse Greenberg (PhET Interactive Simulations)
 */ import optionize from '../../../phet-core/js/optionize.js';
import { VBox } from '../../../scenery/js/imports.js';
import joist from '../joist.js';
import PreferencesDialog from './PreferencesDialog.js';
import PreferencesPanel from './PreferencesPanel.js';
import PreferencesPanelSection from './PreferencesPanelSection.js';
import PreferencesType from './PreferencesType.js';
let SimulationPreferencesPanel = class SimulationPreferencesPanel extends PreferencesPanel {
    /**
   * @param simulationModel - configuration for the Tab, see PreferencesModel for entries
   * @param selectedTabProperty
   * @param tabVisibleProperty
   * @param [providedOptions]
   */ constructor(simulationModel, selectedTabProperty, tabVisibleProperty, providedOptions){
        const options = optionize()({
            labelContent: 'Simulation',
            // phet-io
            phetioVisiblePropertyInstrumented: false
        }, providedOptions);
        super(PreferencesType.SIMULATION, selectedTabProperty, tabVisibleProperty, options);
        const panelContent = new VBox({
            align: 'left',
            spacing: PreferencesDialog.CONTENT_SPACING
        });
        this.addChild(panelContent);
        // Just the provided panel content with its own spacing
        const providedChildren = [];
        simulationModel.customPreferences.forEach((customPreference)=>{
            const contentNode = customPreference.createContent(options.tandem);
            const preferencesPanelSection = new PreferencesPanelSection({
                contentNode: contentNode
            });
            providedChildren.push(preferencesPanelSection);
        });
        panelContent.children = providedChildren;
    }
};
joist.register('SimulationPreferencesPanel', SimulationPreferencesPanel);
export default SimulationPreferencesPanel;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2pvaXN0L2pzL3ByZWZlcmVuY2VzL1NpbXVsYXRpb25QcmVmZXJlbmNlc1BhbmVsLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxuXG4vKipcbiAqIFRoZSBjb250ZW50IGZvciB0aGUgXCJTaW11bGF0aW9uXCIgdGFiIGluIHRoZSBQcmVmZXJlbmNlc0RpYWxvZy4gQ29udGFpbnMgY29udHJvbHMgZm9yIGFueSBzaW11bGF0aW9uLXNwZWNpZmljXG4gKiBwcmVmZXJlbmNlcy5cbiAqXG4gKiBAYXV0aG9yIEplc3NlIEdyZWVuYmVyZyAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcbiAqL1xuXG5pbXBvcnQgVFJlYWRPbmx5UHJvcGVydHkgZnJvbSAnLi4vLi4vLi4vYXhvbi9qcy9UUmVhZE9ubHlQcm9wZXJ0eS5qcyc7XG5pbXBvcnQgb3B0aW9uaXplLCB7IEVtcHR5U2VsZk9wdGlvbnMgfSBmcm9tICcuLi8uLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcbmltcG9ydCBQaWNrUmVxdWlyZWQgZnJvbSAnLi4vLi4vLi4vcGhldC1jb3JlL2pzL3R5cGVzL1BpY2tSZXF1aXJlZC5qcyc7XG5pbXBvcnQgeyBOb2RlLCBWQm94LCBWQm94T3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uL3NjZW5lcnkvanMvaW1wb3J0cy5qcyc7XG5pbXBvcnQgam9pc3QgZnJvbSAnLi4vam9pc3QuanMnO1xuaW1wb3J0IFByZWZlcmVuY2VzRGlhbG9nIGZyb20gJy4vUHJlZmVyZW5jZXNEaWFsb2cuanMnO1xuaW1wb3J0IHsgU2ltdWxhdGlvbk1vZGVsIH0gZnJvbSAnLi9QcmVmZXJlbmNlc01vZGVsLmpzJztcbmltcG9ydCBQcmVmZXJlbmNlc1BhbmVsLCB7IFByZWZlcmVuY2VzUGFuZWxPcHRpb25zIH0gZnJvbSAnLi9QcmVmZXJlbmNlc1BhbmVsLmpzJztcbmltcG9ydCBQcmVmZXJlbmNlc1BhbmVsU2VjdGlvbiBmcm9tICcuL1ByZWZlcmVuY2VzUGFuZWxTZWN0aW9uLmpzJztcbmltcG9ydCBQcmVmZXJlbmNlc1R5cGUgZnJvbSAnLi9QcmVmZXJlbmNlc1R5cGUuanMnO1xuXG50eXBlIFNlbGZPcHRpb25zID0gRW1wdHlTZWxmT3B0aW9ucztcbnR5cGUgU2ltdWxhdGlvblByZWZlcmVuY2VzUGFuZWxPcHRpb25zID0gU2VsZk9wdGlvbnMgJlxuICBQcmVmZXJlbmNlc1BhbmVsT3B0aW9ucyAmXG5cbiAgLy8gU3RpbGwgcmVxdWlyZWQsIGV2ZW4gdGhvdWdoIGl0IGlzIHByZWZlcmVuY2VzIGJlY2F1c2UgdGhlIFNpbXVsYXRpb24gdGFiIGhvdXNlcyBzaW0tc3BlY2lmaWMgZWxlbWVudHMgdGhhdFxuICAvLyBzaG91bGQgc3VwcG9ydCBjdXN0b21pemF0aW9uLiBodHRwczovL2dpdGh1Yi5jb20vcGhldHNpbXMvam9pc3QvaXNzdWVzLzc0NCNpc3N1ZWNvbW1lbnQtMTE5NjAyODM2MlxuICBQaWNrUmVxdWlyZWQ8UHJlZmVyZW5jZXNQYW5lbE9wdGlvbnMsICd0YW5kZW0nPjtcblxuY2xhc3MgU2ltdWxhdGlvblByZWZlcmVuY2VzUGFuZWwgZXh0ZW5kcyBQcmVmZXJlbmNlc1BhbmVsIHtcblxuICAvKipcbiAgICogQHBhcmFtIHNpbXVsYXRpb25Nb2RlbCAtIGNvbmZpZ3VyYXRpb24gZm9yIHRoZSBUYWIsIHNlZSBQcmVmZXJlbmNlc01vZGVsIGZvciBlbnRyaWVzXG4gICAqIEBwYXJhbSBzZWxlY3RlZFRhYlByb3BlcnR5XG4gICAqIEBwYXJhbSB0YWJWaXNpYmxlUHJvcGVydHlcbiAgICogQHBhcmFtIFtwcm92aWRlZE9wdGlvbnNdXG4gICAqL1xuICBwdWJsaWMgY29uc3RydWN0b3IoIHNpbXVsYXRpb25Nb2RlbDogU2ltdWxhdGlvbk1vZGVsLCBzZWxlY3RlZFRhYlByb3BlcnR5OiBUUmVhZE9ubHlQcm9wZXJ0eTxQcmVmZXJlbmNlc1R5cGU+LCB0YWJWaXNpYmxlUHJvcGVydHk6IFRSZWFkT25seVByb3BlcnR5PGJvb2xlYW4+LCBwcm92aWRlZE9wdGlvbnM/OiBTaW11bGF0aW9uUHJlZmVyZW5jZXNQYW5lbE9wdGlvbnMgKSB7XG4gICAgY29uc3Qgb3B0aW9ucyA9IG9wdGlvbml6ZTxTaW11bGF0aW9uUHJlZmVyZW5jZXNQYW5lbE9wdGlvbnMsIFNlbGZPcHRpb25zLCBWQm94T3B0aW9ucz4oKSgge1xuICAgICAgbGFiZWxDb250ZW50OiAnU2ltdWxhdGlvbicsXG5cbiAgICAgIC8vIHBoZXQtaW9cbiAgICAgIHBoZXRpb1Zpc2libGVQcm9wZXJ0eUluc3RydW1lbnRlZDogZmFsc2VcbiAgICB9LCBwcm92aWRlZE9wdGlvbnMgKTtcblxuICAgIHN1cGVyKCBQcmVmZXJlbmNlc1R5cGUuU0lNVUxBVElPTiwgc2VsZWN0ZWRUYWJQcm9wZXJ0eSwgdGFiVmlzaWJsZVByb3BlcnR5LCBvcHRpb25zICk7XG5cbiAgICBjb25zdCBwYW5lbENvbnRlbnQgPSBuZXcgVkJveCgge1xuICAgICAgYWxpZ246ICdsZWZ0JyxcbiAgICAgIHNwYWNpbmc6IFByZWZlcmVuY2VzRGlhbG9nLkNPTlRFTlRfU1BBQ0lOR1xuICAgIH0gKTtcbiAgICB0aGlzLmFkZENoaWxkKCBwYW5lbENvbnRlbnQgKTtcblxuICAgIC8vIEp1c3QgdGhlIHByb3ZpZGVkIHBhbmVsIGNvbnRlbnQgd2l0aCBpdHMgb3duIHNwYWNpbmdcbiAgICBjb25zdCBwcm92aWRlZENoaWxkcmVuOiBOb2RlW10gPSBbXTtcblxuICAgIHNpbXVsYXRpb25Nb2RlbC5jdXN0b21QcmVmZXJlbmNlcy5mb3JFYWNoKCBjdXN0b21QcmVmZXJlbmNlID0+IHtcbiAgICAgIGNvbnN0IGNvbnRlbnROb2RlID0gY3VzdG9tUHJlZmVyZW5jZS5jcmVhdGVDb250ZW50KCBvcHRpb25zLnRhbmRlbSApO1xuICAgICAgY29uc3QgcHJlZmVyZW5jZXNQYW5lbFNlY3Rpb24gPSBuZXcgUHJlZmVyZW5jZXNQYW5lbFNlY3Rpb24oIHsgY29udGVudE5vZGU6IGNvbnRlbnROb2RlIH0gKTtcbiAgICAgIHByb3ZpZGVkQ2hpbGRyZW4ucHVzaCggcHJlZmVyZW5jZXNQYW5lbFNlY3Rpb24gKTtcbiAgICB9ICk7XG5cbiAgICBwYW5lbENvbnRlbnQuY2hpbGRyZW4gPSBwcm92aWRlZENoaWxkcmVuO1xuICB9XG59XG5cbmpvaXN0LnJlZ2lzdGVyKCAnU2ltdWxhdGlvblByZWZlcmVuY2VzUGFuZWwnLCBTaW11bGF0aW9uUHJlZmVyZW5jZXNQYW5lbCApO1xuZXhwb3J0IGRlZmF1bHQgU2ltdWxhdGlvblByZWZlcmVuY2VzUGFuZWw7Il0sIm5hbWVzIjpbIm9wdGlvbml6ZSIsIlZCb3giLCJqb2lzdCIsIlByZWZlcmVuY2VzRGlhbG9nIiwiUHJlZmVyZW5jZXNQYW5lbCIsIlByZWZlcmVuY2VzUGFuZWxTZWN0aW9uIiwiUHJlZmVyZW5jZXNUeXBlIiwiU2ltdWxhdGlvblByZWZlcmVuY2VzUGFuZWwiLCJzaW11bGF0aW9uTW9kZWwiLCJzZWxlY3RlZFRhYlByb3BlcnR5IiwidGFiVmlzaWJsZVByb3BlcnR5IiwicHJvdmlkZWRPcHRpb25zIiwib3B0aW9ucyIsImxhYmVsQ29udGVudCIsInBoZXRpb1Zpc2libGVQcm9wZXJ0eUluc3RydW1lbnRlZCIsIlNJTVVMQVRJT04iLCJwYW5lbENvbnRlbnQiLCJhbGlnbiIsInNwYWNpbmciLCJDT05URU5UX1NQQUNJTkciLCJhZGRDaGlsZCIsInByb3ZpZGVkQ2hpbGRyZW4iLCJjdXN0b21QcmVmZXJlbmNlcyIsImZvckVhY2giLCJjdXN0b21QcmVmZXJlbmNlIiwiY29udGVudE5vZGUiLCJjcmVhdGVDb250ZW50IiwidGFuZGVtIiwicHJlZmVyZW5jZXNQYW5lbFNlY3Rpb24iLCJwdXNoIiwiY2hpbGRyZW4iLCJyZWdpc3RlciJdLCJtYXBwaW5ncyI6IkFBQUEsc0RBQXNEO0FBRXREOzs7OztDQUtDLEdBR0QsT0FBT0EsZUFBcUMscUNBQXFDO0FBRWpGLFNBQWVDLElBQUksUUFBcUIsaUNBQWlDO0FBQ3pFLE9BQU9DLFdBQVcsY0FBYztBQUNoQyxPQUFPQyx1QkFBdUIseUJBQXlCO0FBRXZELE9BQU9DLHNCQUFtRCx3QkFBd0I7QUFDbEYsT0FBT0MsNkJBQTZCLCtCQUErQjtBQUNuRSxPQUFPQyxxQkFBcUIsdUJBQXVCO0FBVW5ELElBQUEsQUFBTUMsNkJBQU4sTUFBTUEsbUNBQW1DSDtJQUV2Qzs7Ozs7R0FLQyxHQUNELFlBQW9CSSxlQUFnQyxFQUFFQyxtQkFBdUQsRUFBRUMsa0JBQThDLEVBQUVDLGVBQW1ELENBQUc7UUFDbk4sTUFBTUMsVUFBVVosWUFBMEU7WUFDeEZhLGNBQWM7WUFFZCxVQUFVO1lBQ1ZDLG1DQUFtQztRQUNyQyxHQUFHSDtRQUVILEtBQUssQ0FBRUwsZ0JBQWdCUyxVQUFVLEVBQUVOLHFCQUFxQkMsb0JBQW9CRTtRQUU1RSxNQUFNSSxlQUFlLElBQUlmLEtBQU07WUFDN0JnQixPQUFPO1lBQ1BDLFNBQVNmLGtCQUFrQmdCLGVBQWU7UUFDNUM7UUFDQSxJQUFJLENBQUNDLFFBQVEsQ0FBRUo7UUFFZix1REFBdUQ7UUFDdkQsTUFBTUssbUJBQTJCLEVBQUU7UUFFbkNiLGdCQUFnQmMsaUJBQWlCLENBQUNDLE9BQU8sQ0FBRUMsQ0FBQUE7WUFDekMsTUFBTUMsY0FBY0QsaUJBQWlCRSxhQUFhLENBQUVkLFFBQVFlLE1BQU07WUFDbEUsTUFBTUMsMEJBQTBCLElBQUl2Qix3QkFBeUI7Z0JBQUVvQixhQUFhQTtZQUFZO1lBQ3hGSixpQkFBaUJRLElBQUksQ0FBRUQ7UUFDekI7UUFFQVosYUFBYWMsUUFBUSxHQUFHVDtJQUMxQjtBQUNGO0FBRUFuQixNQUFNNkIsUUFBUSxDQUFFLDhCQUE4QnhCO0FBQzlDLGVBQWVBLDJCQUEyQiJ9