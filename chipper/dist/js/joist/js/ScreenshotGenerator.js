// Copyright 2015-2022, University of Colorado Boulder
/**
 * Generate a rasterized screenshot for a simulation using scenery's built-in machinery.
 * Used in phet-io as well as PhetMenu (optionally)
 *
 * @author Sam Reid (PhET Interactive Simulations)
 */ import Matrix3 from '../../dot/js/Matrix3.js';
import { CanvasContextWrapper, Utils } from '../../scenery/js/imports.js';
import joist from './joist.js';
let ScreenshotGenerator = class ScreenshotGenerator {
    static generateScreenshotAtIncreasedResolution(sim, scale) {
        // set up our Canvas with the correct background color
        const canvas = document.createElement('canvas');
        const context = canvas.getContext('2d');
        assert && assert(context);
        const backingScale = Utils.backingScale(context) * scale;
        canvas.width = sim.display.width * backingScale;
        canvas.height = sim.display.height * backingScale;
        context.scale(backingScale, backingScale);
        context.fillStyle = sim.display.domElement.style.backgroundColor;
        context.fillRect(0, 0, canvas.width, canvas.height);
        const wrapper = new CanvasContextWrapper(canvas, context);
        sim.rootNode.renderToCanvasSubtree(wrapper, Matrix3.scaling(backingScale));
        return canvas;
    }
    static renderAtScale(raster, scale) {
        const canvas = document.createElement('canvas');
        const context = canvas.getContext('2d');
        canvas.width = raster.width * scale;
        canvas.height = raster.height * scale;
        context.scale(scale, scale);
        context.drawImage(raster, 0, 0);
        return canvas;
    }
    // Default to PNG
    static generateScreenshot(sim, mimeType = 'image/png') {
        const res2x = ScreenshotGenerator.generateScreenshotAtIncreasedResolution(sim, 2);
        const res1x = ScreenshotGenerator.renderAtScale(res2x, 1 / 2);
        // get the data URL in PNG format
        return res1x.toDataURL(mimeType);
    }
};
joist.register('ScreenshotGenerator', ScreenshotGenerator);
export default ScreenshotGenerator;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2pvaXN0L2pzL1NjcmVlbnNob3RHZW5lcmF0b3IudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTUtMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXG5cbi8qKlxuICogR2VuZXJhdGUgYSByYXN0ZXJpemVkIHNjcmVlbnNob3QgZm9yIGEgc2ltdWxhdGlvbiB1c2luZyBzY2VuZXJ5J3MgYnVpbHQtaW4gbWFjaGluZXJ5LlxuICogVXNlZCBpbiBwaGV0LWlvIGFzIHdlbGwgYXMgUGhldE1lbnUgKG9wdGlvbmFsbHkpXG4gKlxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcbiAqL1xuXG5pbXBvcnQgTWF0cml4MyBmcm9tICcuLi8uLi9kb3QvanMvTWF0cml4My5qcyc7XG5pbXBvcnQgeyBDYW52YXNDb250ZXh0V3JhcHBlciwgVXRpbHMgfSBmcm9tICcuLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xuaW1wb3J0IGpvaXN0IGZyb20gJy4vam9pc3QuanMnO1xuaW1wb3J0IFNpbSBmcm9tICcuL1NpbS5qcyc7XG5cbmNsYXNzIFNjcmVlbnNob3RHZW5lcmF0b3Ige1xuXG4gIHByaXZhdGUgc3RhdGljIGdlbmVyYXRlU2NyZWVuc2hvdEF0SW5jcmVhc2VkUmVzb2x1dGlvbiggc2ltOiBTaW0sIHNjYWxlOiBudW1iZXIgKTogSFRNTENhbnZhc0VsZW1lbnQge1xuICAgIC8vIHNldCB1cCBvdXIgQ2FudmFzIHdpdGggdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBjb2xvclxuICAgIGNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICdjYW52YXMnICk7XG4gICAgY29uc3QgY29udGV4dCA9IGNhbnZhcy5nZXRDb250ZXh0KCAnMmQnICkhO1xuXG4gICAgYXNzZXJ0ICYmIGFzc2VydCggY29udGV4dCApO1xuICAgIGNvbnN0IGJhY2tpbmdTY2FsZSA9IFV0aWxzLmJhY2tpbmdTY2FsZSggY29udGV4dCApICogc2NhbGU7XG4gICAgY2FudmFzLndpZHRoID0gc2ltLmRpc3BsYXkud2lkdGggKiBiYWNraW5nU2NhbGU7XG4gICAgY2FudmFzLmhlaWdodCA9IHNpbS5kaXNwbGF5LmhlaWdodCAqIGJhY2tpbmdTY2FsZTtcblxuICAgIGNvbnRleHQuc2NhbGUoIGJhY2tpbmdTY2FsZSwgYmFja2luZ1NjYWxlICk7XG4gICAgY29udGV4dC5maWxsU3R5bGUgPSBzaW0uZGlzcGxheS5kb21FbGVtZW50LnN0eWxlLmJhY2tncm91bmRDb2xvcjtcbiAgICBjb250ZXh0LmZpbGxSZWN0KCAwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQgKTtcbiAgICBjb25zdCB3cmFwcGVyID0gbmV3IENhbnZhc0NvbnRleHRXcmFwcGVyKCBjYW52YXMsIGNvbnRleHQgKTtcblxuICAgIHNpbS5yb290Tm9kZS5yZW5kZXJUb0NhbnZhc1N1YnRyZWUoIHdyYXBwZXIsIE1hdHJpeDMuc2NhbGluZyggYmFja2luZ1NjYWxlICkgKTtcblxuICAgIHJldHVybiBjYW52YXM7XG4gIH1cblxuICBwcml2YXRlIHN0YXRpYyByZW5kZXJBdFNjYWxlKCByYXN0ZXI6IEhUTUxDYW52YXNFbGVtZW50LCBzY2FsZTogbnVtYmVyICk6IEhUTUxDYW52YXNFbGVtZW50IHtcbiAgICBjb25zdCBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCAnY2FudmFzJyApO1xuICAgIGNvbnN0IGNvbnRleHQgPSBjYW52YXMuZ2V0Q29udGV4dCggJzJkJyApITtcblxuICAgIGNhbnZhcy53aWR0aCA9IHJhc3Rlci53aWR0aCAqIHNjYWxlO1xuICAgIGNhbnZhcy5oZWlnaHQgPSByYXN0ZXIuaGVpZ2h0ICogc2NhbGU7XG5cbiAgICBjb250ZXh0LnNjYWxlKCBzY2FsZSwgc2NhbGUgKTtcbiAgICBjb250ZXh0LmRyYXdJbWFnZSggcmFzdGVyLCAwLCAwICk7XG4gICAgcmV0dXJuIGNhbnZhcztcbiAgfVxuXG4gIC8vIERlZmF1bHQgdG8gUE5HXG4gIHB1YmxpYyBzdGF0aWMgZ2VuZXJhdGVTY3JlZW5zaG90KCBzaW06IFNpbSwgbWltZVR5cGUgPSAnaW1hZ2UvcG5nJyApOiBzdHJpbmcge1xuICAgIGNvbnN0IHJlczJ4ID0gU2NyZWVuc2hvdEdlbmVyYXRvci5nZW5lcmF0ZVNjcmVlbnNob3RBdEluY3JlYXNlZFJlc29sdXRpb24oIHNpbSwgMiApO1xuICAgIGNvbnN0IHJlczF4ID0gU2NyZWVuc2hvdEdlbmVyYXRvci5yZW5kZXJBdFNjYWxlKCByZXMyeCwgMSAvIDIgKTtcblxuICAgIC8vIGdldCB0aGUgZGF0YSBVUkwgaW4gUE5HIGZvcm1hdFxuICAgIHJldHVybiByZXMxeC50b0RhdGFVUkwoIG1pbWVUeXBlICk7XG4gIH1cbn1cblxuam9pc3QucmVnaXN0ZXIoICdTY3JlZW5zaG90R2VuZXJhdG9yJywgU2NyZWVuc2hvdEdlbmVyYXRvciApO1xuZXhwb3J0IGRlZmF1bHQgU2NyZWVuc2hvdEdlbmVyYXRvcjsiXSwibmFtZXMiOlsiTWF0cml4MyIsIkNhbnZhc0NvbnRleHRXcmFwcGVyIiwiVXRpbHMiLCJqb2lzdCIsIlNjcmVlbnNob3RHZW5lcmF0b3IiLCJnZW5lcmF0ZVNjcmVlbnNob3RBdEluY3JlYXNlZFJlc29sdXRpb24iLCJzaW0iLCJzY2FsZSIsImNhbnZhcyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImNvbnRleHQiLCJnZXRDb250ZXh0IiwiYXNzZXJ0IiwiYmFja2luZ1NjYWxlIiwid2lkdGgiLCJkaXNwbGF5IiwiaGVpZ2h0IiwiZmlsbFN0eWxlIiwiZG9tRWxlbWVudCIsInN0eWxlIiwiYmFja2dyb3VuZENvbG9yIiwiZmlsbFJlY3QiLCJ3cmFwcGVyIiwicm9vdE5vZGUiLCJyZW5kZXJUb0NhbnZhc1N1YnRyZWUiLCJzY2FsaW5nIiwicmVuZGVyQXRTY2FsZSIsInJhc3RlciIsImRyYXdJbWFnZSIsImdlbmVyYXRlU2NyZWVuc2hvdCIsIm1pbWVUeXBlIiwicmVzMngiLCJyZXMxeCIsInRvRGF0YVVSTCIsInJlZ2lzdGVyIl0sIm1hcHBpbmdzIjoiQUFBQSxzREFBc0Q7QUFFdEQ7Ozs7O0NBS0MsR0FFRCxPQUFPQSxhQUFhLDBCQUEwQjtBQUM5QyxTQUFTQyxvQkFBb0IsRUFBRUMsS0FBSyxRQUFRLDhCQUE4QjtBQUMxRSxPQUFPQyxXQUFXLGFBQWE7QUFHL0IsSUFBQSxBQUFNQyxzQkFBTixNQUFNQTtJQUVKLE9BQWVDLHdDQUF5Q0MsR0FBUSxFQUFFQyxLQUFhLEVBQXNCO1FBQ25HLHNEQUFzRDtRQUN0RCxNQUFNQyxTQUFTQyxTQUFTQyxhQUFhLENBQUU7UUFDdkMsTUFBTUMsVUFBVUgsT0FBT0ksVUFBVSxDQUFFO1FBRW5DQyxVQUFVQSxPQUFRRjtRQUNsQixNQUFNRyxlQUFlWixNQUFNWSxZQUFZLENBQUVILFdBQVlKO1FBQ3JEQyxPQUFPTyxLQUFLLEdBQUdULElBQUlVLE9BQU8sQ0FBQ0QsS0FBSyxHQUFHRDtRQUNuQ04sT0FBT1MsTUFBTSxHQUFHWCxJQUFJVSxPQUFPLENBQUNDLE1BQU0sR0FBR0g7UUFFckNILFFBQVFKLEtBQUssQ0FBRU8sY0FBY0E7UUFDN0JILFFBQVFPLFNBQVMsR0FBR1osSUFBSVUsT0FBTyxDQUFDRyxVQUFVLENBQUNDLEtBQUssQ0FBQ0MsZUFBZTtRQUNoRVYsUUFBUVcsUUFBUSxDQUFFLEdBQUcsR0FBR2QsT0FBT08sS0FBSyxFQUFFUCxPQUFPUyxNQUFNO1FBQ25ELE1BQU1NLFVBQVUsSUFBSXRCLHFCQUFzQk8sUUFBUUc7UUFFbERMLElBQUlrQixRQUFRLENBQUNDLHFCQUFxQixDQUFFRixTQUFTdkIsUUFBUTBCLE9BQU8sQ0FBRVo7UUFFOUQsT0FBT047SUFDVDtJQUVBLE9BQWVtQixjQUFlQyxNQUF5QixFQUFFckIsS0FBYSxFQUFzQjtRQUMxRixNQUFNQyxTQUFTQyxTQUFTQyxhQUFhLENBQUU7UUFDdkMsTUFBTUMsVUFBVUgsT0FBT0ksVUFBVSxDQUFFO1FBRW5DSixPQUFPTyxLQUFLLEdBQUdhLE9BQU9iLEtBQUssR0FBR1I7UUFDOUJDLE9BQU9TLE1BQU0sR0FBR1csT0FBT1gsTUFBTSxHQUFHVjtRQUVoQ0ksUUFBUUosS0FBSyxDQUFFQSxPQUFPQTtRQUN0QkksUUFBUWtCLFNBQVMsQ0FBRUQsUUFBUSxHQUFHO1FBQzlCLE9BQU9wQjtJQUNUO0lBRUEsaUJBQWlCO0lBQ2pCLE9BQWNzQixtQkFBb0J4QixHQUFRLEVBQUV5QixXQUFXLFdBQVcsRUFBVztRQUMzRSxNQUFNQyxRQUFRNUIsb0JBQW9CQyx1Q0FBdUMsQ0FBRUMsS0FBSztRQUNoRixNQUFNMkIsUUFBUTdCLG9CQUFvQnVCLGFBQWEsQ0FBRUssT0FBTyxJQUFJO1FBRTVELGlDQUFpQztRQUNqQyxPQUFPQyxNQUFNQyxTQUFTLENBQUVIO0lBQzFCO0FBQ0Y7QUFFQTVCLE1BQU1nQyxRQUFRLENBQUUsdUJBQXVCL0I7QUFDdkMsZUFBZUEsb0JBQW9CIn0=