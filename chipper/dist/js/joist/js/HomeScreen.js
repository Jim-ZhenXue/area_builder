// Copyright 2015-2024, University of Colorado Boulder
/**
 * Screen for the home screen, which shows icons for selecting the sim content screens.
 *
 * @author Sam Reid (PhET Interactive Simulations)
 */ import Property from '../../axon/js/Property.js';
import optionize from '../../phet-core/js/optionize.js';
import { Color } from '../../scenery/js/imports.js';
import HomeScreenKeyboardHelpContent from './HomeScreenKeyboardHelpContent.js';
import HomeScreenModel from './HomeScreenModel.js';
import HomeScreenView from './HomeScreenView.js';
import joist from './joist.js';
import JoistStrings from './JoistStrings.js';
import Screen from './Screen.js';
// constants
const homeStringProperty = JoistStrings.a11y.homeStringProperty;
const BACKGROUND_COLOR = Color.BLACK;
let HomeScreen = class HomeScreen extends Screen {
    constructor(simNameProperty, getScreenProperty, simScreens, activeSimScreensProperty, providedOptions){
        const options = optionize()({
            // TODO get this color from LookAndFeel, see https://github.com/phetsims/joist/issues/222
            backgroundColorProperty: new Property(BACKGROUND_COLOR),
            name: homeStringProperty,
            createKeyboardHelpNode: ()=>new HomeScreenKeyboardHelpContent(),
            // phet-io
            instrumentNameProperty: false // requested by designers, see https://github.com/phetsims/joist/issues/627
        }, providedOptions);
        super(// at the time of construction, the Sim.screenProperty is not yet assigned (because it may itself include the
        // HomeScreen), so we must use a function to lazily get it after it is assigned
        ()=>new HomeScreenModel(getScreenProperty(), simScreens, activeSimScreensProperty, options.tandem.createTandem('model')), (model)=>new HomeScreenView(simNameProperty, model, {
                warningNode: options.warningNode,
                tandem: options.tandem.createTandem('view')
            }), options);
    }
};
HomeScreen.BACKGROUND_COLOR = BACKGROUND_COLOR;
joist.register('HomeScreen', HomeScreen);
export default HomeScreen;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2pvaXN0L2pzL0hvbWVTY3JlZW4udHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTUtMjAyNCwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXG5cbi8qKlxuICogU2NyZWVuIGZvciB0aGUgaG9tZSBzY3JlZW4sIHdoaWNoIHNob3dzIGljb25zIGZvciBzZWxlY3RpbmcgdGhlIHNpbSBjb250ZW50IHNjcmVlbnMuXG4gKlxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcbiAqL1xuXG5pbXBvcnQgUHJvcGVydHkgZnJvbSAnLi4vLi4vYXhvbi9qcy9Qcm9wZXJ0eS5qcyc7XG5pbXBvcnQgUmVhZE9ubHlQcm9wZXJ0eSBmcm9tICcuLi8uLi9heG9uL2pzL1JlYWRPbmx5UHJvcGVydHkuanMnO1xuaW1wb3J0IFRSZWFkT25seVByb3BlcnR5IGZyb20gJy4uLy4uL2F4b24vanMvVFJlYWRPbmx5UHJvcGVydHkuanMnO1xuaW1wb3J0IG9wdGlvbml6ZSBmcm9tICcuLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcbmltcG9ydCBJbnRlbnRpb25hbEFueSBmcm9tICcuLi8uLi9waGV0LWNvcmUvanMvdHlwZXMvSW50ZW50aW9uYWxBbnkuanMnO1xuaW1wb3J0IHsgQ29sb3IsIE5vZGUgfSBmcm9tICcuLi8uLi9zY2VuZXJ5L2pzL2ltcG9ydHMuanMnO1xuaW1wb3J0IEhvbWVTY3JlZW5LZXlib2FyZEhlbHBDb250ZW50IGZyb20gJy4vSG9tZVNjcmVlbktleWJvYXJkSGVscENvbnRlbnQuanMnO1xuaW1wb3J0IEhvbWVTY3JlZW5Nb2RlbCBmcm9tICcuL0hvbWVTY3JlZW5Nb2RlbC5qcyc7XG5pbXBvcnQgSG9tZVNjcmVlblZpZXcgZnJvbSAnLi9Ib21lU2NyZWVuVmlldy5qcyc7XG5pbXBvcnQgam9pc3QgZnJvbSAnLi9qb2lzdC5qcyc7XG5pbXBvcnQgSm9pc3RTdHJpbmdzIGZyb20gJy4vSm9pc3RTdHJpbmdzLmpzJztcbmltcG9ydCBTY3JlZW4sIHsgU2NyZWVuT3B0aW9ucyB9IGZyb20gJy4vU2NyZWVuLmpzJztcblxuLy8gY29uc3RhbnRzXG5jb25zdCBob21lU3RyaW5nUHJvcGVydHkgPSBKb2lzdFN0cmluZ3MuYTExeS5ob21lU3RyaW5nUHJvcGVydHk7XG5jb25zdCBCQUNLR1JPVU5EX0NPTE9SID0gQ29sb3IuQkxBQ0s7XG5cbnR5cGUgU2VsZk9wdGlvbnMgPSB7XG4gIHdhcm5pbmdOb2RlOiBOb2RlIHwgbnVsbDtcbn07XG50eXBlIEhvbWVTY3JlZW5PcHRpb25zID0gU2VsZk9wdGlvbnMgJiBTY3JlZW5PcHRpb25zO1xuXG5jbGFzcyBIb21lU2NyZWVuIGV4dGVuZHMgU2NyZWVuPEhvbWVTY3JlZW5Nb2RlbCwgSG9tZVNjcmVlblZpZXc+IHtcbiAgcHVibGljIHN0YXRpYyByZWFkb25seSBCQUNLR1JPVU5EX0NPTE9SID0gQkFDS0dST1VORF9DT0xPUjtcblxuICBwdWJsaWMgY29uc3RydWN0b3IoXG4gICAgc2ltTmFtZVByb3BlcnR5OiBUUmVhZE9ubHlQcm9wZXJ0eTxzdHJpbmc+LFxuICAgIGdldFNjcmVlblByb3BlcnR5OiAoKSA9PiBQcm9wZXJ0eTxTY3JlZW48SW50ZW50aW9uYWxBbnksIEludGVudGlvbmFsQW55Pj4sXG4gICAgc2ltU2NyZWVuczogU2NyZWVuPEludGVudGlvbmFsQW55LCBJbnRlbnRpb25hbEFueT5bXSxcbiAgICBhY3RpdmVTaW1TY3JlZW5zUHJvcGVydHk6IFJlYWRPbmx5UHJvcGVydHk8U2NyZWVuPEludGVudGlvbmFsQW55LCBJbnRlbnRpb25hbEFueT5bXT4sXG4gICAgcHJvdmlkZWRPcHRpb25zOiBIb21lU2NyZWVuT3B0aW9uc1xuICApIHtcblxuICAgIGNvbnN0IG9wdGlvbnMgPSBvcHRpb25pemU8SG9tZVNjcmVlbk9wdGlvbnMsIFNlbGZPcHRpb25zLCBTY3JlZW5PcHRpb25zPigpKCB7XG5cbiAgICAgIC8vIFRPRE8gZ2V0IHRoaXMgY29sb3IgZnJvbSBMb29rQW5kRmVlbCwgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9waGV0c2ltcy9qb2lzdC9pc3N1ZXMvMjIyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3JQcm9wZXJ0eTogbmV3IFByb3BlcnR5KCBCQUNLR1JPVU5EX0NPTE9SICksXG5cbiAgICAgIG5hbWU6IGhvbWVTdHJpbmdQcm9wZXJ0eSxcblxuICAgICAgY3JlYXRlS2V5Ym9hcmRIZWxwTm9kZTogKCkgPT4gbmV3IEhvbWVTY3JlZW5LZXlib2FyZEhlbHBDb250ZW50KCksXG5cbiAgICAgIC8vIHBoZXQtaW9cbiAgICAgIGluc3RydW1lbnROYW1lUHJvcGVydHk6IGZhbHNlIC8vIHJlcXVlc3RlZCBieSBkZXNpZ25lcnMsIHNlZSBodHRwczovL2dpdGh1Yi5jb20vcGhldHNpbXMvam9pc3QvaXNzdWVzLzYyN1xuICAgIH0sIHByb3ZpZGVkT3B0aW9ucyApO1xuXG4gICAgc3VwZXIoXG4gICAgICAvLyBhdCB0aGUgdGltZSBvZiBjb25zdHJ1Y3Rpb24sIHRoZSBTaW0uc2NyZWVuUHJvcGVydHkgaXMgbm90IHlldCBhc3NpZ25lZCAoYmVjYXVzZSBpdCBtYXkgaXRzZWxmIGluY2x1ZGUgdGhlXG4gICAgICAvLyBIb21lU2NyZWVuKSwgc28gd2UgbXVzdCB1c2UgYSBmdW5jdGlvbiB0byBsYXppbHkgZ2V0IGl0IGFmdGVyIGl0IGlzIGFzc2lnbmVkXG4gICAgICAoKSA9PiBuZXcgSG9tZVNjcmVlbk1vZGVsKCBnZXRTY3JlZW5Qcm9wZXJ0eSgpLCBzaW1TY3JlZW5zLCBhY3RpdmVTaW1TY3JlZW5zUHJvcGVydHksIG9wdGlvbnMudGFuZGVtLmNyZWF0ZVRhbmRlbSggJ21vZGVsJyApICksXG4gICAgICBtb2RlbCA9PiBuZXcgSG9tZVNjcmVlblZpZXcoIHNpbU5hbWVQcm9wZXJ0eSwgbW9kZWwsIHtcbiAgICAgICAgd2FybmluZ05vZGU6IG9wdGlvbnMud2FybmluZ05vZGUsXG4gICAgICAgIHRhbmRlbTogb3B0aW9ucy50YW5kZW0uY3JlYXRlVGFuZGVtKCAndmlldycgKVxuICAgICAgfSApLFxuICAgICAgb3B0aW9uc1xuICAgICk7XG4gIH1cbn1cblxuam9pc3QucmVnaXN0ZXIoICdIb21lU2NyZWVuJywgSG9tZVNjcmVlbiApO1xuXG5leHBvcnQgZGVmYXVsdCBIb21lU2NyZWVuOyJdLCJuYW1lcyI6WyJQcm9wZXJ0eSIsIm9wdGlvbml6ZSIsIkNvbG9yIiwiSG9tZVNjcmVlbktleWJvYXJkSGVscENvbnRlbnQiLCJIb21lU2NyZWVuTW9kZWwiLCJIb21lU2NyZWVuVmlldyIsImpvaXN0IiwiSm9pc3RTdHJpbmdzIiwiU2NyZWVuIiwiaG9tZVN0cmluZ1Byb3BlcnR5IiwiYTExeSIsIkJBQ0tHUk9VTkRfQ09MT1IiLCJCTEFDSyIsIkhvbWVTY3JlZW4iLCJzaW1OYW1lUHJvcGVydHkiLCJnZXRTY3JlZW5Qcm9wZXJ0eSIsInNpbVNjcmVlbnMiLCJhY3RpdmVTaW1TY3JlZW5zUHJvcGVydHkiLCJwcm92aWRlZE9wdGlvbnMiLCJvcHRpb25zIiwiYmFja2dyb3VuZENvbG9yUHJvcGVydHkiLCJuYW1lIiwiY3JlYXRlS2V5Ym9hcmRIZWxwTm9kZSIsImluc3RydW1lbnROYW1lUHJvcGVydHkiLCJ0YW5kZW0iLCJjcmVhdGVUYW5kZW0iLCJtb2RlbCIsIndhcm5pbmdOb2RlIiwicmVnaXN0ZXIiXSwibWFwcGluZ3MiOiJBQUFBLHNEQUFzRDtBQUV0RDs7OztDQUlDLEdBRUQsT0FBT0EsY0FBYyw0QkFBNEI7QUFHakQsT0FBT0MsZUFBZSxrQ0FBa0M7QUFFeEQsU0FBU0MsS0FBSyxRQUFjLDhCQUE4QjtBQUMxRCxPQUFPQyxtQ0FBbUMscUNBQXFDO0FBQy9FLE9BQU9DLHFCQUFxQix1QkFBdUI7QUFDbkQsT0FBT0Msb0JBQW9CLHNCQUFzQjtBQUNqRCxPQUFPQyxXQUFXLGFBQWE7QUFDL0IsT0FBT0Msa0JBQWtCLG9CQUFvQjtBQUM3QyxPQUFPQyxZQUErQixjQUFjO0FBRXBELFlBQVk7QUFDWixNQUFNQyxxQkFBcUJGLGFBQWFHLElBQUksQ0FBQ0Qsa0JBQWtCO0FBQy9ELE1BQU1FLG1CQUFtQlQsTUFBTVUsS0FBSztBQU9wQyxJQUFBLEFBQU1DLGFBQU4sTUFBTUEsbUJBQW1CTDtJQUd2QixZQUNFTSxlQUEwQyxFQUMxQ0MsaUJBQXlFLEVBQ3pFQyxVQUFvRCxFQUNwREMsd0JBQW9GLEVBQ3BGQyxlQUFrQyxDQUNsQztRQUVBLE1BQU1DLFVBQVVsQixZQUE0RDtZQUUxRSx5RkFBeUY7WUFDekZtQix5QkFBeUIsSUFBSXBCLFNBQVVXO1lBRXZDVSxNQUFNWjtZQUVOYSx3QkFBd0IsSUFBTSxJQUFJbkI7WUFFbEMsVUFBVTtZQUNWb0Isd0JBQXdCLE1BQU0sMkVBQTJFO1FBQzNHLEdBQUdMO1FBRUgsS0FBSyxDQUNILDZHQUE2RztRQUM3RywrRUFBK0U7UUFDL0UsSUFBTSxJQUFJZCxnQkFBaUJXLHFCQUFxQkMsWUFBWUMsMEJBQTBCRSxRQUFRSyxNQUFNLENBQUNDLFlBQVksQ0FBRSxXQUNuSEMsQ0FBQUEsUUFBUyxJQUFJckIsZUFBZ0JTLGlCQUFpQlksT0FBTztnQkFDbkRDLGFBQWFSLFFBQVFRLFdBQVc7Z0JBQ2hDSCxRQUFRTCxRQUFRSyxNQUFNLENBQUNDLFlBQVksQ0FBRTtZQUN2QyxJQUNBTjtJQUVKO0FBQ0Y7QUFuQ01OLFdBQ21CRixtQkFBbUJBO0FBb0M1Q0wsTUFBTXNCLFFBQVEsQ0FBRSxjQUFjZjtBQUU5QixlQUFlQSxXQUFXIn0=