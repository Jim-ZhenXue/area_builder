// Copyright 2019-2024, University of Colorado Boulder
/**
 * SoundClipPlayer is a limited and automatically registered sound clip.  It is intended to be used for sounds that
 * can be shared in multiple places within a simulation so that separate instances of sound clips don't need to be
 * created and registered in as many places.  See resetAllSoundPlayer for an example.
 *
 * This type wraps the sound clip and only supports the play and stop methods so that attributes such as output level
 * and playback rate can't be easily altered.  A method is supported for retrieving the sound clip itself in case
 * additional information about or manipulation of the sound clip is necessary.
 *
 * If you're familiar with PhET graphics rendering library "scenery", this class is intended to support a feature that
 * is similar to the DAG (directed acyclic graph) feature in that library.  As with that feature, SoundClipPlayer can
 * get a little weird if not used as intended.
 *
 * @author John Blanco (PhET Interactive Simulations)
 */ import optionize from '../../../phet-core/js/optionize.js';
import soundManager from '../soundManager.js';
import tambo from '../tambo.js';
import SoundClip from './SoundClip.js';
let SoundClipPlayer = class SoundClipPlayer {
    /**
   * Play the sound clip.
   */ play() {
        this._soundClip.play();
    }
    /**
   * Stop the sound clip.  Does nothing if the sound clip is not playing.
   */ stop() {
        this._soundClip.stop();
    }
    /**
   * @param wrappedAudioBuffer - a Web Audio audio buffer containing decoded audio samples
   * @param [providedOptions]
   */ constructor(wrappedAudioBuffer, providedOptions){
        const options = optionize()({
            soundClipOptions: {},
            soundManagerOptions: {}
        }, providedOptions);
        this._soundClip = new SoundClip(wrappedAudioBuffer, options.soundClipOptions);
        // automatically register this sound clip with the sound manager
        soundManager.addSoundGenerator(this._soundClip, options.soundManagerOptions);
    }
};
tambo.register('SoundClipPlayer', SoundClipPlayer);
export default SoundClipPlayer;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RhbWJvL2pzL3NvdW5kLWdlbmVyYXRvcnMvU291bmRDbGlwUGxheWVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE5LTIwMjQsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxuXG4vKipcbiAqIFNvdW5kQ2xpcFBsYXllciBpcyBhIGxpbWl0ZWQgYW5kIGF1dG9tYXRpY2FsbHkgcmVnaXN0ZXJlZCBzb3VuZCBjbGlwLiAgSXQgaXMgaW50ZW5kZWQgdG8gYmUgdXNlZCBmb3Igc291bmRzIHRoYXRcbiAqIGNhbiBiZSBzaGFyZWQgaW4gbXVsdGlwbGUgcGxhY2VzIHdpdGhpbiBhIHNpbXVsYXRpb24gc28gdGhhdCBzZXBhcmF0ZSBpbnN0YW5jZXMgb2Ygc291bmQgY2xpcHMgZG9uJ3QgbmVlZCB0byBiZVxuICogY3JlYXRlZCBhbmQgcmVnaXN0ZXJlZCBpbiBhcyBtYW55IHBsYWNlcy4gIFNlZSByZXNldEFsbFNvdW5kUGxheWVyIGZvciBhbiBleGFtcGxlLlxuICpcbiAqIFRoaXMgdHlwZSB3cmFwcyB0aGUgc291bmQgY2xpcCBhbmQgb25seSBzdXBwb3J0cyB0aGUgcGxheSBhbmQgc3RvcCBtZXRob2RzIHNvIHRoYXQgYXR0cmlidXRlcyBzdWNoIGFzIG91dHB1dCBsZXZlbFxuICogYW5kIHBsYXliYWNrIHJhdGUgY2FuJ3QgYmUgZWFzaWx5IGFsdGVyZWQuICBBIG1ldGhvZCBpcyBzdXBwb3J0ZWQgZm9yIHJldHJpZXZpbmcgdGhlIHNvdW5kIGNsaXAgaXRzZWxmIGluIGNhc2VcbiAqIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gYWJvdXQgb3IgbWFuaXB1bGF0aW9uIG9mIHRoZSBzb3VuZCBjbGlwIGlzIG5lY2Vzc2FyeS5cbiAqXG4gKiBJZiB5b3UncmUgZmFtaWxpYXIgd2l0aCBQaEVUIGdyYXBoaWNzIHJlbmRlcmluZyBsaWJyYXJ5IFwic2NlbmVyeVwiLCB0aGlzIGNsYXNzIGlzIGludGVuZGVkIHRvIHN1cHBvcnQgYSBmZWF0dXJlIHRoYXRcbiAqIGlzIHNpbWlsYXIgdG8gdGhlIERBRyAoZGlyZWN0ZWQgYWN5Y2xpYyBncmFwaCkgZmVhdHVyZSBpbiB0aGF0IGxpYnJhcnkuICBBcyB3aXRoIHRoYXQgZmVhdHVyZSwgU291bmRDbGlwUGxheWVyIGNhblxuICogZ2V0IGEgbGl0dGxlIHdlaXJkIGlmIG5vdCB1c2VkIGFzIGludGVuZGVkLlxuICpcbiAqIEBhdXRob3IgSm9obiBCbGFuY28gKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXG4gKi9cblxuaW1wb3J0IG9wdGlvbml6ZSBmcm9tICcuLi8uLi8uLi9waGV0LWNvcmUvanMvb3B0aW9uaXplLmpzJztcbmltcG9ydCBzb3VuZE1hbmFnZXIsIHsgU291bmRHZW5lcmF0b3JBZGRPcHRpb25zIH0gZnJvbSAnLi4vc291bmRNYW5hZ2VyLmpzJztcbmltcG9ydCB0YW1ibyBmcm9tICcuLi90YW1iby5qcyc7XG5pbXBvcnQgVFNvdW5kUGxheWVyIGZyb20gJy4uL1RTb3VuZFBsYXllci5qcyc7XG5pbXBvcnQgV3JhcHBlZEF1ZGlvQnVmZmVyIGZyb20gJy4uL1dyYXBwZWRBdWRpb0J1ZmZlci5qcyc7XG5pbXBvcnQgU291bmRDbGlwLCB7IFNvdW5kQ2xpcE9wdGlvbnMgfSBmcm9tICcuL1NvdW5kQ2xpcC5qcyc7XG5cbmV4cG9ydCB0eXBlIFNvdW5kQ2xpcFBsYXllck9wdGlvbnMgPSB7XG4gIHNvdW5kQ2xpcE9wdGlvbnM/OiBTb3VuZENsaXBPcHRpb25zO1xuICBzb3VuZE1hbmFnZXJPcHRpb25zPzogU291bmRHZW5lcmF0b3JBZGRPcHRpb25zO1xufTtcblxuY2xhc3MgU291bmRDbGlwUGxheWVyIGltcGxlbWVudHMgVFNvdW5kUGxheWVyIHtcblxuICBwcml2YXRlIHJlYWRvbmx5IF9zb3VuZENsaXA6IFNvdW5kQ2xpcDtcblxuICAvKipcbiAgICogQHBhcmFtIHdyYXBwZWRBdWRpb0J1ZmZlciAtIGEgV2ViIEF1ZGlvIGF1ZGlvIGJ1ZmZlciBjb250YWluaW5nIGRlY29kZWQgYXVkaW8gc2FtcGxlc1xuICAgKiBAcGFyYW0gW3Byb3ZpZGVkT3B0aW9uc11cbiAgICovXG4gIHB1YmxpYyBjb25zdHJ1Y3Rvciggd3JhcHBlZEF1ZGlvQnVmZmVyOiBXcmFwcGVkQXVkaW9CdWZmZXIsIHByb3ZpZGVkT3B0aW9ucz86IFNvdW5kQ2xpcFBsYXllck9wdGlvbnMgKSB7XG5cbiAgICBjb25zdCBvcHRpb25zID0gb3B0aW9uaXplPFNvdW5kQ2xpcFBsYXllck9wdGlvbnMsIFNvdW5kQ2xpcFBsYXllck9wdGlvbnM+KCkoIHtcbiAgICAgIHNvdW5kQ2xpcE9wdGlvbnM6IHt9LFxuICAgICAgc291bmRNYW5hZ2VyT3B0aW9uczoge31cbiAgICB9LCBwcm92aWRlZE9wdGlvbnMgKTtcblxuICAgIHRoaXMuX3NvdW5kQ2xpcCA9IG5ldyBTb3VuZENsaXAoIHdyYXBwZWRBdWRpb0J1ZmZlciwgb3B0aW9ucy5zb3VuZENsaXBPcHRpb25zICk7XG5cbiAgICAvLyBhdXRvbWF0aWNhbGx5IHJlZ2lzdGVyIHRoaXMgc291bmQgY2xpcCB3aXRoIHRoZSBzb3VuZCBtYW5hZ2VyXG4gICAgc291bmRNYW5hZ2VyLmFkZFNvdW5kR2VuZXJhdG9yKCB0aGlzLl9zb3VuZENsaXAsIG9wdGlvbnMuc291bmRNYW5hZ2VyT3B0aW9ucyApO1xuICB9XG5cbiAgLyoqXG4gICAqIFBsYXkgdGhlIHNvdW5kIGNsaXAuXG4gICAqL1xuICBwdWJsaWMgcGxheSgpOiB2b2lkIHtcbiAgICB0aGlzLl9zb3VuZENsaXAucGxheSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIFN0b3AgdGhlIHNvdW5kIGNsaXAuICBEb2VzIG5vdGhpbmcgaWYgdGhlIHNvdW5kIGNsaXAgaXMgbm90IHBsYXlpbmcuXG4gICAqL1xuICBwdWJsaWMgc3RvcCgpOiB2b2lkIHtcbiAgICB0aGlzLl9zb3VuZENsaXAuc3RvcCgpO1xuICB9XG59XG5cbnRhbWJvLnJlZ2lzdGVyKCAnU291bmRDbGlwUGxheWVyJywgU291bmRDbGlwUGxheWVyICk7XG5cbmV4cG9ydCBkZWZhdWx0IFNvdW5kQ2xpcFBsYXllcjsiXSwibmFtZXMiOlsib3B0aW9uaXplIiwic291bmRNYW5hZ2VyIiwidGFtYm8iLCJTb3VuZENsaXAiLCJTb3VuZENsaXBQbGF5ZXIiLCJwbGF5IiwiX3NvdW5kQ2xpcCIsInN0b3AiLCJ3cmFwcGVkQXVkaW9CdWZmZXIiLCJwcm92aWRlZE9wdGlvbnMiLCJvcHRpb25zIiwic291bmRDbGlwT3B0aW9ucyIsInNvdW5kTWFuYWdlck9wdGlvbnMiLCJhZGRTb3VuZEdlbmVyYXRvciIsInJlZ2lzdGVyIl0sIm1hcHBpbmdzIjoiQUFBQSxzREFBc0Q7QUFFdEQ7Ozs7Ozs7Ozs7Ozs7O0NBY0MsR0FFRCxPQUFPQSxlQUFlLHFDQUFxQztBQUMzRCxPQUFPQyxrQkFBZ0QscUJBQXFCO0FBQzVFLE9BQU9DLFdBQVcsY0FBYztBQUdoQyxPQUFPQyxlQUFxQyxpQkFBaUI7QUFPN0QsSUFBQSxBQUFNQyxrQkFBTixNQUFNQTtJQXFCSjs7R0FFQyxHQUNELEFBQU9DLE9BQWE7UUFDbEIsSUFBSSxDQUFDQyxVQUFVLENBQUNELElBQUk7SUFDdEI7SUFFQTs7R0FFQyxHQUNELEFBQU9FLE9BQWE7UUFDbEIsSUFBSSxDQUFDRCxVQUFVLENBQUNDLElBQUk7SUFDdEI7SUE3QkE7OztHQUdDLEdBQ0QsWUFBb0JDLGtCQUFzQyxFQUFFQyxlQUF3QyxDQUFHO1FBRXJHLE1BQU1DLFVBQVVWLFlBQTZEO1lBQzNFVyxrQkFBa0IsQ0FBQztZQUNuQkMscUJBQXFCLENBQUM7UUFDeEIsR0FBR0g7UUFFSCxJQUFJLENBQUNILFVBQVUsR0FBRyxJQUFJSCxVQUFXSyxvQkFBb0JFLFFBQVFDLGdCQUFnQjtRQUU3RSxnRUFBZ0U7UUFDaEVWLGFBQWFZLGlCQUFpQixDQUFFLElBQUksQ0FBQ1AsVUFBVSxFQUFFSSxRQUFRRSxtQkFBbUI7SUFDOUU7QUFlRjtBQUVBVixNQUFNWSxRQUFRLENBQUUsbUJBQW1CVjtBQUVuQyxlQUFlQSxnQkFBZ0IifQ==