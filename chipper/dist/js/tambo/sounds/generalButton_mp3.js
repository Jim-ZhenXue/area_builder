/* eslint-disable */ /* @formatter:off */ import asyncLoader from '../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';
const soundURI = 'data:audio/mpeg;base64,//swxAAABlAhPLTAgDE1De+/HoACAH4CwkCAJDo5gDgPRksn2WLHOB8EHShd5cHwfBBwgBBOJw/UCAY/lAxWD/4DB9+CH/6XQjMTIIcYUIQPQIRAIBAACUIawkYq7IQ/BawVqEc7mTjD+OFygBAnHbHq7UkLJ8aCnnrZlPpg3IkRJBgPH/MCQCI985/yAnHAAhmv3lHuAgAgAxJF//syxAOACHQpa7zBAAD8EunxpI3HUCEZHQlA2EYuDsSjE5EkSQGhUDYDxOARLoiBmIgalVgq4qWeWBqsNYKywNO+p/sxFyKwVOlXRFDtZ0S86oQ0C2W+wBOmlaWuS6+BIqZMz+AYy3FuwBkKXM2idVoKlYwUd/oIGgsbLpEbaCsmIyZRtbw6TPwj+mYmGr8QqnGHBLo3LKAAxKabZ//7MsQGAAhsl1OsPMcxAo3mpbCaAvIuuQRmW4WNHhDBJnoBORIlh+I9dvGCTCKP0kzo7rHHTi87diQ2XqnRN77y8lnKUl8zf+X0Fu0iCDV/9AP7el8Cw8raZKqiYShe+6bzYk0zXmEuGnBDcQhyRzPeI4Jbsmj5OxzZVhSX9adVU4Kk9r9esE3etv+/6wUIg3Wm62nA3Ab0EIcLUQ7/+zLECABGICs9oemDMLwEZrQcvFYyDBCUCgUAwQCUSvgROof5poGn9O7o70P/X9P/T+360+lAhIJVtyuNDljXzM7Ek0fGUB/ltZQF8iD7dBcVTs00f31POqR0/V/q/pjEe1z3jyAAQRBHGmSBEEVK6QIYH2miQZKNfgCVtiH9vVLp+w7an/d0jdUx9VnqZIJSvFtsaUFKKFBVCzoe//swxBwABSAhLaDl4nCsA+a0fDyG3vbgKx5OhNXyuPYt7kJJSg9B6heqxP93q/9P6IwSQ8LbYIFBVUF85RwseJPX6+Q7qIq7f/8ayokh7P//V8oyAABbhbGEIBBhOJgEGTBx6KjUiosS54l6y0i3jOz/6f///RVMQU1FMy45OS41VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//syxDWABEQTMaCF4HCNAmL0EJgGVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==';
const soundByteArray = base64SoundToByteArray(phetAudioContext, soundURI);
const unlock = asyncLoader.createLock(soundURI);
const wrappedAudioBuffer = new WrappedAudioBuffer();
// safe way to unlock
let unlocked = false;
const safeUnlock = ()=>{
    if (!unlocked) {
        unlock();
        unlocked = true;
    }
};
const onDecodeSuccess = (decodedAudio)=>{
    if (wrappedAudioBuffer.audioBufferProperty.value === null) {
        wrappedAudioBuffer.audioBufferProperty.set(decodedAudio);
        safeUnlock();
    }
};
const onDecodeError = (decodeError)=>{
    console.warn('decode of audio data failed, using stubbed sound, error: ' + decodeError);
    wrappedAudioBuffer.audioBufferProperty.set(phetAudioContext.createBuffer(1, 1, phetAudioContext.sampleRate));
    safeUnlock();
};
const decodePromise = phetAudioContext.decodeAudioData(soundByteArray.buffer, onDecodeSuccess, onDecodeError);
if (decodePromise) {
    decodePromise.then((decodedAudio)=>{
        if (wrappedAudioBuffer.audioBufferProperty.value === null) {
            wrappedAudioBuffer.audioBufferProperty.set(decodedAudio);
            safeUnlock();
        }
    }).catch((e)=>{
        console.warn('promise rejection caught for audio decode, error = ' + e);
        safeUnlock();
    });
}
export default wrappedAudioBuffer;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RhbWJvL3NvdW5kcy9nZW5lcmFsQnV0dG9uX21wMy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyogQGZvcm1hdHRlcjpvZmYgKi9cblxuaW1wb3J0IGFzeW5jTG9hZGVyIGZyb20gJy4uLy4uL3BoZXQtY29yZS9qcy9hc3luY0xvYWRlci5qcyc7XG5pbXBvcnQgYmFzZTY0U291bmRUb0J5dGVBcnJheSBmcm9tICcuLi8uLi90YW1iby9qcy9iYXNlNjRTb3VuZFRvQnl0ZUFycmF5LmpzJztcbmltcG9ydCBXcmFwcGVkQXVkaW9CdWZmZXIgZnJvbSAnLi4vLi4vdGFtYm8vanMvV3JhcHBlZEF1ZGlvQnVmZmVyLmpzJztcbmltcG9ydCBwaGV0QXVkaW9Db250ZXh0IGZyb20gJy4uLy4uL3RhbWJvL2pzL3BoZXRBdWRpb0NvbnRleHQuanMnO1xuXG5jb25zdCBzb3VuZFVSSSA9ICdkYXRhOmF1ZGlvL21wZWc7YmFzZTY0LC8vc3d4QUFBQmxBaFBMVEFnREUxRGUrL0hvQUNBSDRDd2tDQUpEbzVnRGdQUmtzbjJXTEhPQjhFSFNoZDVjSHdmQkJ3Z0JCT0p3L1VDQVkvbEF4V0QvNERCOStDSC82WFFqTVRJSWNZVUlRUFFJUkFJQkFBQ1VJYXdrWXE3SVEvQmF3VnFFYzdtVGpEK09GeWdCQW5IYkhxN1VrTEo4YUNubnJabFBwZzNJa1JKQmdQSC9NQ1FDSTk4NS95QW5IQUFobXYzbEh1QWdBZ0F4SkYvL3N5eEFPQUNIUXBhN3pCQUFEOEV1bnhwSTNIVUNFWkhRbEEyRVl1RHNTakU1RWtTUUdoVURZRHhPQVJMb2lCbUlnYWxWZ3E0cVdlV0Jxc05ZS3l3Tk8rcC9zeEZ5S3dWT2xYUkZEdFowUzg2b1EwQzJXK3dCT21sYVd1UzYrQklxWk16K0FZeTNGdXdCa0tYTTJpZFZvS2xZd1VkL29JR2dzYkxwRWJhQ3NtSXlaUnRidzZUUHdqK21ZbUdyOFFxbkdIQkxvM0xLQUF4S2FiWi8vN01zUUdBQWhzbDFPc1BNY3hBbzNtcGJDYUF2SXV1UVJtVzRXTkhoREJKbm9CT1JJbGgrSTlkdkdDVENLUDBrem83ckhIVGk4N2RpUTJYcW5STjc3eThsbktVbDh6ZitYMEZ1MGlDRFYvOUFQN2VsOEN3OHJhWktxaVlTaGUrNmJ6WWswelhtRXVHbkJEY1FoeVJ6UGVJNEpic21qNU94elpWaFNYOWFkVlU0S2s5cjllc0UzZXR2Ky82d1VJZzNXbTYybkEzQWIwRUljTFVRNy8rekxFQ0FCR0lDczlvZW1ETUx3RVpyUWN2Rll5REJDVUNnVUF3UUNVU3ZnUk9vZjVwb0duOU83bzcwUC9YOVAvVCszNjArbEFoSUpWdHl1TkRsalh6TTdFazBmR1VCL2x0WlFGOGlEN2RCY1ZUczAwZjMxUE9xUjAvVi9xL3BqRWUxejNqeUFBUVJCSEdtU0JFRVZLNlFJWUgybWlRWktOZmdDVnRpSDl2VkxwK3c3YW4vZDBqZFV4OVZucVpJSlN2RnRzYVVGS0tGQlZDem9lLy9zd3hCd0FCU0FoTGFEbDRuQ3NBK2EwZkR5RzN2YmdLeDVPaE5YeXVQWXQ3a0pKU2c5QjZoZXF4UDkzcS85UDZJd1NROExiWUlGQlZVRjg1UndzZUpQWDYrUTdxSXE3Zi84YXlva2g3UC8vVjhveUFBQmJoYkdFSUJCaE9KZ0VHVEJ4NktqVWlvc1M1NGw2eTBpM2pPei82Zi8vL1JWTVFVMUZNeTQ1T1M0MVZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVi8vc3l4RFdBQkVRVE1hQ0Y0SENOQW1MMEVKZ0dWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWUT09JztcbmNvbnN0IHNvdW5kQnl0ZUFycmF5ID0gYmFzZTY0U291bmRUb0J5dGVBcnJheSggcGhldEF1ZGlvQ29udGV4dCwgc291bmRVUkkgKTtcbmNvbnN0IHVubG9jayA9IGFzeW5jTG9hZGVyLmNyZWF0ZUxvY2soIHNvdW5kVVJJICk7XG5jb25zdCB3cmFwcGVkQXVkaW9CdWZmZXIgPSBuZXcgV3JhcHBlZEF1ZGlvQnVmZmVyKCk7XG5cbi8vIHNhZmUgd2F5IHRvIHVubG9ja1xubGV0IHVubG9ja2VkID0gZmFsc2U7XG5jb25zdCBzYWZlVW5sb2NrID0gKCkgPT4ge1xuICBpZiAoICF1bmxvY2tlZCApIHtcbiAgICB1bmxvY2soKTtcbiAgICB1bmxvY2tlZCA9IHRydWU7XG4gIH1cbn07XG5cbmNvbnN0IG9uRGVjb2RlU3VjY2VzcyA9IGRlY29kZWRBdWRpbyA9PiB7XG4gIGlmICggd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkudmFsdWUgPT09IG51bGwgKSB7XG4gICAgd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkuc2V0KCBkZWNvZGVkQXVkaW8gKTtcbiAgICBzYWZlVW5sb2NrKCk7XG4gIH1cbn07XG5jb25zdCBvbkRlY29kZUVycm9yID0gZGVjb2RlRXJyb3IgPT4ge1xuICBjb25zb2xlLndhcm4oICdkZWNvZGUgb2YgYXVkaW8gZGF0YSBmYWlsZWQsIHVzaW5nIHN0dWJiZWQgc291bmQsIGVycm9yOiAnICsgZGVjb2RlRXJyb3IgKTtcbiAgd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkuc2V0KCBwaGV0QXVkaW9Db250ZXh0LmNyZWF0ZUJ1ZmZlciggMSwgMSwgcGhldEF1ZGlvQ29udGV4dC5zYW1wbGVSYXRlICkgKTtcbiAgc2FmZVVubG9jaygpO1xufTtcbmNvbnN0IGRlY29kZVByb21pc2UgPSBwaGV0QXVkaW9Db250ZXh0LmRlY29kZUF1ZGlvRGF0YSggc291bmRCeXRlQXJyYXkuYnVmZmVyLCBvbkRlY29kZVN1Y2Nlc3MsIG9uRGVjb2RlRXJyb3IgKTtcbmlmICggZGVjb2RlUHJvbWlzZSApIHtcbiAgZGVjb2RlUHJvbWlzZVxuICAgIC50aGVuKCBkZWNvZGVkQXVkaW8gPT4ge1xuICAgICAgaWYgKCB3cmFwcGVkQXVkaW9CdWZmZXIuYXVkaW9CdWZmZXJQcm9wZXJ0eS52YWx1ZSA9PT0gbnVsbCApIHtcbiAgICAgICAgd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkuc2V0KCBkZWNvZGVkQXVkaW8gKTtcbiAgICAgICAgc2FmZVVubG9jaygpO1xuICAgICAgfVxuICAgIH0gKVxuICAgIC5jYXRjaCggZSA9PiB7XG4gICAgICBjb25zb2xlLndhcm4oICdwcm9taXNlIHJlamVjdGlvbiBjYXVnaHQgZm9yIGF1ZGlvIGRlY29kZSwgZXJyb3IgPSAnICsgZSApO1xuICAgICAgc2FmZVVubG9jaygpO1xuICAgIH0gKTtcbn1cbmV4cG9ydCBkZWZhdWx0IHdyYXBwZWRBdWRpb0J1ZmZlcjsiXSwibmFtZXMiOlsiYXN5bmNMb2FkZXIiLCJiYXNlNjRTb3VuZFRvQnl0ZUFycmF5IiwiV3JhcHBlZEF1ZGlvQnVmZmVyIiwicGhldEF1ZGlvQ29udGV4dCIsInNvdW5kVVJJIiwic291bmRCeXRlQXJyYXkiLCJ1bmxvY2siLCJjcmVhdGVMb2NrIiwid3JhcHBlZEF1ZGlvQnVmZmVyIiwidW5sb2NrZWQiLCJzYWZlVW5sb2NrIiwib25EZWNvZGVTdWNjZXNzIiwiZGVjb2RlZEF1ZGlvIiwiYXVkaW9CdWZmZXJQcm9wZXJ0eSIsInZhbHVlIiwic2V0Iiwib25EZWNvZGVFcnJvciIsImRlY29kZUVycm9yIiwiY29uc29sZSIsIndhcm4iLCJjcmVhdGVCdWZmZXIiLCJzYW1wbGVSYXRlIiwiZGVjb2RlUHJvbWlzZSIsImRlY29kZUF1ZGlvRGF0YSIsImJ1ZmZlciIsInRoZW4iLCJjYXRjaCIsImUiXSwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQixHQUNsQixrQkFBa0IsR0FFbEIsT0FBT0EsaUJBQWlCLG9DQUFvQztBQUM1RCxPQUFPQyw0QkFBNEIsMkNBQTJDO0FBQzlFLE9BQU9DLHdCQUF3Qix1Q0FBdUM7QUFDdEUsT0FBT0Msc0JBQXNCLHFDQUFxQztBQUVsRSxNQUFNQyxXQUFXO0FBQ2pCLE1BQU1DLGlCQUFpQkosdUJBQXdCRSxrQkFBa0JDO0FBQ2pFLE1BQU1FLFNBQVNOLFlBQVlPLFVBQVUsQ0FBRUg7QUFDdkMsTUFBTUkscUJBQXFCLElBQUlOO0FBRS9CLHFCQUFxQjtBQUNyQixJQUFJTyxXQUFXO0FBQ2YsTUFBTUMsYUFBYTtJQUNqQixJQUFLLENBQUNELFVBQVc7UUFDZkg7UUFDQUcsV0FBVztJQUNiO0FBQ0Y7QUFFQSxNQUFNRSxrQkFBa0JDLENBQUFBO0lBQ3RCLElBQUtKLG1CQUFtQkssbUJBQW1CLENBQUNDLEtBQUssS0FBSyxNQUFPO1FBQzNETixtQkFBbUJLLG1CQUFtQixDQUFDRSxHQUFHLENBQUVIO1FBQzVDRjtJQUNGO0FBQ0Y7QUFDQSxNQUFNTSxnQkFBZ0JDLENBQUFBO0lBQ3BCQyxRQUFRQyxJQUFJLENBQUUsOERBQThERjtJQUM1RVQsbUJBQW1CSyxtQkFBbUIsQ0FBQ0UsR0FBRyxDQUFFWixpQkFBaUJpQixZQUFZLENBQUUsR0FBRyxHQUFHakIsaUJBQWlCa0IsVUFBVTtJQUM1R1g7QUFDRjtBQUNBLE1BQU1ZLGdCQUFnQm5CLGlCQUFpQm9CLGVBQWUsQ0FBRWxCLGVBQWVtQixNQUFNLEVBQUViLGlCQUFpQks7QUFDaEcsSUFBS00sZUFBZ0I7SUFDbkJBLGNBQ0dHLElBQUksQ0FBRWIsQ0FBQUE7UUFDTCxJQUFLSixtQkFBbUJLLG1CQUFtQixDQUFDQyxLQUFLLEtBQUssTUFBTztZQUMzRE4sbUJBQW1CSyxtQkFBbUIsQ0FBQ0UsR0FBRyxDQUFFSDtZQUM1Q0Y7UUFDRjtJQUNGLEdBQ0NnQixLQUFLLENBQUVDLENBQUFBO1FBQ05ULFFBQVFDLElBQUksQ0FBRSx3REFBd0RRO1FBQ3RFakI7SUFDRjtBQUNKO0FBQ0EsZUFBZUYsbUJBQW1CIn0=