/* eslint-disable */ /* @formatter:off */ import asyncLoader from '../../phet-core/js/asyncLoader.js';
import base64SoundToByteArray from '../../tambo/js/base64SoundToByteArray.js';
import WrappedAudioBuffer from '../../tambo/js/WrappedAudioBuffer.js';
import phetAudioContext from '../../tambo/js/phetAudioContext.js';
const soundURI = 'data:audio/mpeg;base64,//swxAAAB3BPLHWkgAEQCy03MPADAYAEAMYCIAZnV5vYJv2ZoxqgRhBhkBBkRJhwZa9g7/tbYe1+jC4beogQMZ4Z5zn7mgQQdxOH//////6SQAIzbNJJdtgAAAAAAHjcV2B1EBJLBB4wV9rCWp5eq0EHE43FpgLhkjdNEqGhFqhSQlQ4TwqZdZ7fN/Hm6YKiu/33NoUAACApAAAI//syxAOCSGxzQ123gDkDjCZJvLDmDQ0HhMRgBVEjBws2OIM9Cky1VU0REAhgK47nqWwHAkIYcB7ePHvXeo2cV1nG4uL6rjXjzXt951bbjQs/hQuyxEeFQaEGUgRohuYvQkhIfrBnlFyQoUla/qMye4qGxUqjhxTJIFPCOfamTewcOH2SkYCFVa21OLZrySygx+bV4B1xgBhA1DB0Bf/7MsQFAAfISyw1x4AxL4ssNzGAAigYRigH0YoI18mGQKOgZ+FY0UWnyRsLJgZYCShStOpdQYKdeV5/q9jbIDYPkLAYtiTETvrZLIYEb2u2uogAAAAAAhkChusjjbfkXleOGpiySKjhjUIlMla3JEsHQqgBs2ns50DIPtDIgjJE46JnUPRPPPOG5G8/yKxQADAZFTP1KgAAIX0AGkv/+zLEA4IIRJ9DPaUAMQuN5o2tmYqinck4ucZbhxEBHFls3WFfhr6dyvz3zgxEmEABChAREwQIwJRfc1jx6QHFWNNqQkrG5wvNNbdf1b//kxUACACHIGAlgmUgpccbebl+BkKCZXQyCAwpKkwRUzEk7AIAwgTBahUNNHisAuFoYmM12rXbbUJ2v5Cwa++fDf///+mgDERUoJgUemjg//swxAUDSExLJi3phxEQCmQBrbx0BkCOdSyG/xxiJyFwYUOAZiABRh0Zh64k8Pj7NAJTjWFStFgyvxBK5IhTLDstCt9Y/SAqpLqiYU1gRqYoIfCMbtwYtoG77YMaQdBGoPhoQOPIxjIsCrswBnOHTzqNAI9TIQEiAQc0oSX9JssKWBt5O9HJA8fEWBHxeXEQzXUAKsQAXwMjEM3O//syxAUCSDxVLM1lJzEbCWPFrmxBNqHM4RC+k5ZUzwUcEaSmKZZCdwJRBNZkJiwDdFN36YdSqdqUT6pYDZ5ScxSDVfZPSpL8M//b6NxDNtjDhTpxDmMDKQMMw1k08tNDTxrGMKLQxRDCMevDKlACBZi1WYsoiEOBwEwdI9e0vdBptNKZfgzJsVH29qtOpUET8k9v4mAAAExTEHgUKP/7MsQEggfQUyJNc0QA2AklmY2YpukjMG6N4KPFG4xmOjdBnIQqBgcbgGQGmcNGdaHtBQplqcsNdnbkroa0zXiUXxyr9wz/WF9usagQAkSHDHulGU3DjA44xIgQwADplHVAGUl7G/MbPAcXSMAgRGUSoN9OUp+zGuLf///V3//+ugKcCSTofFaj5oNcoyUgyJfAIDMwsQBGeEBQiGf/+zLEDgJHUD8UDOksQN6F39wxsAA60sBDGHr5bR5oZBEMkscKhnEIJPCh6j//////+n6AmBgKjhFZNEIgmCyGD2UQjAVEweC2peqxVyOIpL/WDXZ7cNcFTtQdJCEFQVGLPFgaUHJ6dhojDlVttOCJU4BB0qsXplV/tncqptv/p//+n//6abf////9QTTTTRVV9UEJK0kIixWmqoc///swxBiDxvgCi4CEYAgAADSAAAAE/1TTVEWK6UxBTUUzLjk5LjNVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV';
const soundByteArray = base64SoundToByteArray(phetAudioContext, soundURI);
const unlock = asyncLoader.createLock(soundURI);
const wrappedAudioBuffer = new WrappedAudioBuffer();
// safe way to unlock
let unlocked = false;
const safeUnlock = ()=>{
    if (!unlocked) {
        unlock();
        unlocked = true;
    }
};
const onDecodeSuccess = (decodedAudio)=>{
    if (wrappedAudioBuffer.audioBufferProperty.value === null) {
        wrappedAudioBuffer.audioBufferProperty.set(decodedAudio);
        safeUnlock();
    }
};
const onDecodeError = (decodeError)=>{
    console.warn('decode of audio data failed, using stubbed sound, error: ' + decodeError);
    wrappedAudioBuffer.audioBufferProperty.set(phetAudioContext.createBuffer(1, 1, phetAudioContext.sampleRate));
    safeUnlock();
};
const decodePromise = phetAudioContext.decodeAudioData(soundByteArray.buffer, onDecodeSuccess, onDecodeError);
if (decodePromise) {
    decodePromise.then((decodedAudio)=>{
        if (wrappedAudioBuffer.audioBufferProperty.value === null) {
            wrappedAudioBuffer.audioBufferProperty.set(decodedAudio);
            safeUnlock();
        }
    }).catch((e)=>{
        console.warn('promise rejection caught for audio decode, error = ' + e);
        safeUnlock();
    });
}
export default wrappedAudioBuffer;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3RhbWJvL3NvdW5kcy9jaGVja2JveFVuY2hlY2tlZF9tcDMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cbi8qIEBmb3JtYXR0ZXI6b2ZmICovXG5cbmltcG9ydCBhc3luY0xvYWRlciBmcm9tICcuLi8uLi9waGV0LWNvcmUvanMvYXN5bmNMb2FkZXIuanMnO1xuaW1wb3J0IGJhc2U2NFNvdW5kVG9CeXRlQXJyYXkgZnJvbSAnLi4vLi4vdGFtYm8vanMvYmFzZTY0U291bmRUb0J5dGVBcnJheS5qcyc7XG5pbXBvcnQgV3JhcHBlZEF1ZGlvQnVmZmVyIGZyb20gJy4uLy4uL3RhbWJvL2pzL1dyYXBwZWRBdWRpb0J1ZmZlci5qcyc7XG5pbXBvcnQgcGhldEF1ZGlvQ29udGV4dCBmcm9tICcuLi8uLi90YW1iby9qcy9waGV0QXVkaW9Db250ZXh0LmpzJztcblxuY29uc3Qgc291bmRVUkkgPSAnZGF0YTphdWRpby9tcGVnO2Jhc2U2NCwvL3N3eEFBQUIzQlBMSFdrZ0FFUUN5MDNNUEFEQVlBRUFNWUNJQVpuVjV2WUp2MlpveHFnUmhCaGtCQmtSSmh3WmE5ZzcvdGJZZTErakM0YmVvZ1FNWjRaNXpuN21nUVFkeE9ILy8vLy8vNlNRQUl6Yk5KSmR0Z0FBQUFBQUhqY1YyQjFFQkpMQkI0d1Y5ckNXcDVlcTBFSEU0M0ZwZ0xoa2pkTkVxR2hGcWhTUWxRNFR3cVpkWjdmTi9IbTZZS2l1LzMzTm9VQUFDQXBBQUFJLy9zeXhBT0NTR3h6UTEyM2dEa0RqQ1pKdkxEbURRMEhoTVJnQlZFakJ3czJPSU05Q2t5MVZVMFJFQWhnSzQ3bnFXd0hBa0lZY0I3ZVBIdlhlbzJjVjFuRzR1TDZyalhqelh0OTUxYmJqUXMvaFF1eXhFZUZRYUVHVWdSb2h1WXZRa2hJZnJCbmxGeVFvVWxhL3FNeWU0cUd4VXFqaHhUSklGUENPZmFtVGV3Y09IMlNrWUNGVmEyMU9MWnJ5U3lneCtiVjRCMXhnQmhBMURCMEJmLzdNc1FGQUFmSVN5dzF4NEF4TDRzc056R0FBaWdZUmlnSDBZb0kxOG1HUUtPZ1orRlkwVVdueVJzTEpnWllDU2hTdE9wZFFZS2RlVjUvcTlqYklEWVBrTEFZdGlURVR2clpMSVlFYjJ1MnVvZ0FBQUFBQWhrQ2h1c2pqYmZrWGxlT0dwaXlTS2poalVJbE1sYTNKRXNIUXFnQnMybnM1MERJUHRESWdqSkU0NkpuVVBSUFBQT0c1RzgveUt4UUFEQVpGVFAxS2dBQUlYMEFHa3YvK3pMRUE0SUlSSjlEUGFVQU1RdU41bzJ0bVlxaW5jazR1Y1piaHhFQkhGbHMzV0ZmaHI2ZHl2ejN6Z3hFbUVBQkNoQVJFd1FJd0pSZmMxang2UUhGV05OcVFrckc1d3ZOTmJkZjFiLy9reFVBQ0FDSElHQWxnbVVncGNjYmVibCtCa0tDWlhReUNBd3BLa3dSVXpFazdBSUF3Z1RCYWhVTk5IaXNBdUZvWW1NMTJyWGJiVUoydjVDd2ErK2ZEZi8vLyttZ0RFUlVvSmdVZW1qZy8vc3d4QVVEU0V4TEppM3BoeEVRQ21RQnJieDBCa0NPZFN5Ry94eGlKeUZ3WVVPQVppQUJSaDBaaDY0azhQajdOQUpUaldGU3RGZ3l2eEJLNUloVExEc3RDdDlZL1NBcXBMcWlZVTFnUnFZb0lmQ01idHdZdG9HNzdZTWFRZEJHb1Bob1FPUEl4aklzQ3Jzd0JuT0hUenFOQUk5VElRRWlBUWMwb1NYOUpzc0tXQnQ1TzlISkE4ZkVXQkh4ZVhFUXpYVUFLc1FBWHdNakVNM08vL3N5eEFVQ1NEeFZMTTFsSnpFYkNXUEZybXhCTnFITTRSQytrNVpVendVY0VhU21LWlpDZHdKUkJOWmtKaXdEZEZOMzZZZFNxZHFVVDZwWURaNVNjeFNEVmZaUFNwTDhNLy9iNk54RE50akRoVHB4RG1NREtRTU13MWswOHRORFR4ckdNS0xReFJEQ01ldkRLbEFDQlppMVdZc29pRU9Cd0V3ZEk5ZTB2ZEJwdE5LWmZnekpzVkgyOXF0T3BVRVQ4azl2NG1BQUFFeFRFSGdVS1AvN01zUUVnZ2ZRVXlKTmMwUUEyQWtsbVkyWXB1a2pNRzZONEtQRkc0eG1PamRCbklRcUJnY2JnR1FHbWNOR2RhSHRCUXBscWNzTmRuYmtyb2EwelhpVVh4eXI5d3ovV0Y5dXNhZ1FBa1NIREh1bEdVM0RqQTQ0eElnUXdBRHBsSFZBR1VsN0cvTWJQQWNYU01BZ1JHVVNvTjlPVXArekd1TGYvLy9WMy8vK3VnS2NDU1RvZkZhajVvTmNveVVneUpmQUlETXdzUUJHZUVCUWlHZi8rekxFRGdKSFVEOFVET2tzUU42RjM5d3hzQUE2MHNCREdIcjViUjVvWkJFTWtzY0tobkVJSlBDaDZqLy8vLy8vK242QW1CZ0tqaEZaTkVJZ21DeUdEMlVRakFWRXdlQzJwZXF4VnlPSXBML1dEWFo3Y05jRlR0UWRKQ0VGUVZHTFBGZ2FVSEo2ZGhvakRsVnR0T0NKVTRCQjBxc1hwbFYvdG5jcXB0di9wLy8rbi8vNmFiZi8vLy85UVRUVFRSVlY5VUVKSzBrSWl4V21xb2MvLy9zd3hCaUR4dmdDaTRDRVlBZ0FBRFNBQUFBRS8xVFRWRVdLNlV4QlRVVXpMams1TGpOVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVic7XG5jb25zdCBzb3VuZEJ5dGVBcnJheSA9IGJhc2U2NFNvdW5kVG9CeXRlQXJyYXkoIHBoZXRBdWRpb0NvbnRleHQsIHNvdW5kVVJJICk7XG5jb25zdCB1bmxvY2sgPSBhc3luY0xvYWRlci5jcmVhdGVMb2NrKCBzb3VuZFVSSSApO1xuY29uc3Qgd3JhcHBlZEF1ZGlvQnVmZmVyID0gbmV3IFdyYXBwZWRBdWRpb0J1ZmZlcigpO1xuXG4vLyBzYWZlIHdheSB0byB1bmxvY2tcbmxldCB1bmxvY2tlZCA9IGZhbHNlO1xuY29uc3Qgc2FmZVVubG9jayA9ICgpID0+IHtcbiAgaWYgKCAhdW5sb2NrZWQgKSB7XG4gICAgdW5sb2NrKCk7XG4gICAgdW5sb2NrZWQgPSB0cnVlO1xuICB9XG59O1xuXG5jb25zdCBvbkRlY29kZVN1Y2Nlc3MgPSBkZWNvZGVkQXVkaW8gPT4ge1xuICBpZiAoIHdyYXBwZWRBdWRpb0J1ZmZlci5hdWRpb0J1ZmZlclByb3BlcnR5LnZhbHVlID09PSBudWxsICkge1xuICAgIHdyYXBwZWRBdWRpb0J1ZmZlci5hdWRpb0J1ZmZlclByb3BlcnR5LnNldCggZGVjb2RlZEF1ZGlvICk7XG4gICAgc2FmZVVubG9jaygpO1xuICB9XG59O1xuY29uc3Qgb25EZWNvZGVFcnJvciA9IGRlY29kZUVycm9yID0+IHtcbiAgY29uc29sZS53YXJuKCAnZGVjb2RlIG9mIGF1ZGlvIGRhdGEgZmFpbGVkLCB1c2luZyBzdHViYmVkIHNvdW5kLCBlcnJvcjogJyArIGRlY29kZUVycm9yICk7XG4gIHdyYXBwZWRBdWRpb0J1ZmZlci5hdWRpb0J1ZmZlclByb3BlcnR5LnNldCggcGhldEF1ZGlvQ29udGV4dC5jcmVhdGVCdWZmZXIoIDEsIDEsIHBoZXRBdWRpb0NvbnRleHQuc2FtcGxlUmF0ZSApICk7XG4gIHNhZmVVbmxvY2soKTtcbn07XG5jb25zdCBkZWNvZGVQcm9taXNlID0gcGhldEF1ZGlvQ29udGV4dC5kZWNvZGVBdWRpb0RhdGEoIHNvdW5kQnl0ZUFycmF5LmJ1ZmZlciwgb25EZWNvZGVTdWNjZXNzLCBvbkRlY29kZUVycm9yICk7XG5pZiAoIGRlY29kZVByb21pc2UgKSB7XG4gIGRlY29kZVByb21pc2VcbiAgICAudGhlbiggZGVjb2RlZEF1ZGlvID0+IHtcbiAgICAgIGlmICggd3JhcHBlZEF1ZGlvQnVmZmVyLmF1ZGlvQnVmZmVyUHJvcGVydHkudmFsdWUgPT09IG51bGwgKSB7XG4gICAgICAgIHdyYXBwZWRBdWRpb0J1ZmZlci5hdWRpb0J1ZmZlclByb3BlcnR5LnNldCggZGVjb2RlZEF1ZGlvICk7XG4gICAgICAgIHNhZmVVbmxvY2soKTtcbiAgICAgIH1cbiAgICB9IClcbiAgICAuY2F0Y2goIGUgPT4ge1xuICAgICAgY29uc29sZS53YXJuKCAncHJvbWlzZSByZWplY3Rpb24gY2F1Z2h0IGZvciBhdWRpbyBkZWNvZGUsIGVycm9yID0gJyArIGUgKTtcbiAgICAgIHNhZmVVbmxvY2soKTtcbiAgICB9ICk7XG59XG5leHBvcnQgZGVmYXVsdCB3cmFwcGVkQXVkaW9CdWZmZXI7Il0sIm5hbWVzIjpbImFzeW5jTG9hZGVyIiwiYmFzZTY0U291bmRUb0J5dGVBcnJheSIsIldyYXBwZWRBdWRpb0J1ZmZlciIsInBoZXRBdWRpb0NvbnRleHQiLCJzb3VuZFVSSSIsInNvdW5kQnl0ZUFycmF5IiwidW5sb2NrIiwiY3JlYXRlTG9jayIsIndyYXBwZWRBdWRpb0J1ZmZlciIsInVubG9ja2VkIiwic2FmZVVubG9jayIsIm9uRGVjb2RlU3VjY2VzcyIsImRlY29kZWRBdWRpbyIsImF1ZGlvQnVmZmVyUHJvcGVydHkiLCJ2YWx1ZSIsInNldCIsIm9uRGVjb2RlRXJyb3IiLCJkZWNvZGVFcnJvciIsImNvbnNvbGUiLCJ3YXJuIiwiY3JlYXRlQnVmZmVyIiwic2FtcGxlUmF0ZSIsImRlY29kZVByb21pc2UiLCJkZWNvZGVBdWRpb0RhdGEiLCJidWZmZXIiLCJ0aGVuIiwiY2F0Y2giLCJlIl0sIm1hcHBpbmdzIjoiQUFBQSxrQkFBa0IsR0FDbEIsa0JBQWtCLEdBRWxCLE9BQU9BLGlCQUFpQixvQ0FBb0M7QUFDNUQsT0FBT0MsNEJBQTRCLDJDQUEyQztBQUM5RSxPQUFPQyx3QkFBd0IsdUNBQXVDO0FBQ3RFLE9BQU9DLHNCQUFzQixxQ0FBcUM7QUFFbEUsTUFBTUMsV0FBVztBQUNqQixNQUFNQyxpQkFBaUJKLHVCQUF3QkUsa0JBQWtCQztBQUNqRSxNQUFNRSxTQUFTTixZQUFZTyxVQUFVLENBQUVIO0FBQ3ZDLE1BQU1JLHFCQUFxQixJQUFJTjtBQUUvQixxQkFBcUI7QUFDckIsSUFBSU8sV0FBVztBQUNmLE1BQU1DLGFBQWE7SUFDakIsSUFBSyxDQUFDRCxVQUFXO1FBQ2ZIO1FBQ0FHLFdBQVc7SUFDYjtBQUNGO0FBRUEsTUFBTUUsa0JBQWtCQyxDQUFBQTtJQUN0QixJQUFLSixtQkFBbUJLLG1CQUFtQixDQUFDQyxLQUFLLEtBQUssTUFBTztRQUMzRE4sbUJBQW1CSyxtQkFBbUIsQ0FBQ0UsR0FBRyxDQUFFSDtRQUM1Q0Y7SUFDRjtBQUNGO0FBQ0EsTUFBTU0sZ0JBQWdCQyxDQUFBQTtJQUNwQkMsUUFBUUMsSUFBSSxDQUFFLDhEQUE4REY7SUFDNUVULG1CQUFtQkssbUJBQW1CLENBQUNFLEdBQUcsQ0FBRVosaUJBQWlCaUIsWUFBWSxDQUFFLEdBQUcsR0FBR2pCLGlCQUFpQmtCLFVBQVU7SUFDNUdYO0FBQ0Y7QUFDQSxNQUFNWSxnQkFBZ0JuQixpQkFBaUJvQixlQUFlLENBQUVsQixlQUFlbUIsTUFBTSxFQUFFYixpQkFBaUJLO0FBQ2hHLElBQUtNLGVBQWdCO0lBQ25CQSxjQUNHRyxJQUFJLENBQUViLENBQUFBO1FBQ0wsSUFBS0osbUJBQW1CSyxtQkFBbUIsQ0FBQ0MsS0FBSyxLQUFLLE1BQU87WUFDM0ROLG1CQUFtQkssbUJBQW1CLENBQUNFLEdBQUcsQ0FBRUg7WUFDNUNGO1FBQ0Y7SUFDRixHQUNDZ0IsS0FBSyxDQUFFQyxDQUFBQTtRQUNOVCxRQUFRQyxJQUFJLENBQUUsd0RBQXdEUTtRQUN0RWpCO0lBQ0Y7QUFDSjtBQUNBLGVBQWVGLG1CQUFtQiJ9