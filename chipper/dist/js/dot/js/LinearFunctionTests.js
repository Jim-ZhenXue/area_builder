// Copyright 2017-2021, University of Colorado Boulder
/**
 * Bounds2 tests
 *
 * @author Jonathan Olson (PhET Interactive Simulations)
 * @author Sam Reid (PhET Interactive Simulations)
 */ import LinearFunction from './LinearFunction.js';
QUnit.module('LinearFunction');
function approximateEquals(assert, a, b, msg) {
    assert.ok(Math.abs(a - b) < 0.00000001, `${msg} expected: ${b}, result: ${a}`);
}
QUnit.test('LinearFunction', (assert)=>{
    const f = new LinearFunction(4, 8, 8, 0); // not clamped
    approximateEquals(assert, f.evaluate(0), 16);
    approximateEquals(assert, f.evaluate(4), 8);
    approximateEquals(assert, f.evaluate(8), 0);
    approximateEquals(assert, f.evaluate(6), 4);
    approximateEquals(assert, f.inverse(16), 0);
    approximateEquals(assert, f.inverse(8), 4);
    approximateEquals(assert, f.inverse(0), 8);
    approximateEquals(assert, f.inverse(4), 6);
    const g = new LinearFunction(4, 8, 8, 0, true); // clamped
    approximateEquals(assert, g.evaluate(0), 8);
    approximateEquals(assert, g.evaluate(4), 8);
    approximateEquals(assert, g.evaluate(8), 0);
    approximateEquals(assert, g.evaluate(6), 4);
    approximateEquals(assert, g.inverse(16), 4);
    approximateEquals(assert, g.inverse(8), 4);
    approximateEquals(assert, g.inverse(0), 8);
    approximateEquals(assert, g.inverse(4), 6);
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2RvdC9qcy9MaW5lYXJGdW5jdGlvblRlc3RzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDE3LTIwMjEsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxuXG4vKipcbiAqIEJvdW5kczIgdGVzdHNcbiAqXG4gKiBAYXV0aG9yIEpvbmF0aGFuIE9sc29uIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxuICogQGF1dGhvciBTYW0gUmVpZCAoUGhFVCBJbnRlcmFjdGl2ZSBTaW11bGF0aW9ucylcbiAqL1xuXG5pbXBvcnQgTGluZWFyRnVuY3Rpb24gZnJvbSAnLi9MaW5lYXJGdW5jdGlvbi5qcyc7XG5cblFVbml0Lm1vZHVsZSggJ0xpbmVhckZ1bmN0aW9uJyApO1xuXG5mdW5jdGlvbiBhcHByb3hpbWF0ZUVxdWFscyggYXNzZXJ0LCBhLCBiLCBtc2cgKSB7XG4gIGFzc2VydC5vayggTWF0aC5hYnMoIGEgLSBiICkgPCAwLjAwMDAwMDAxLCBgJHttc2d9IGV4cGVjdGVkOiAke2J9LCByZXN1bHQ6ICR7YX1gICk7XG59XG5cblFVbml0LnRlc3QoICdMaW5lYXJGdW5jdGlvbicsIGFzc2VydCA9PiB7XG4gIGNvbnN0IGYgPSBuZXcgTGluZWFyRnVuY3Rpb24oIDQsIDgsIDgsIDAgKTsgLy8gbm90IGNsYW1wZWRcblxuICBhcHByb3hpbWF0ZUVxdWFscyggYXNzZXJ0LCBmLmV2YWx1YXRlKCAwICksIDE2ICk7XG4gIGFwcHJveGltYXRlRXF1YWxzKCBhc3NlcnQsIGYuZXZhbHVhdGUoIDQgKSwgOCApO1xuICBhcHByb3hpbWF0ZUVxdWFscyggYXNzZXJ0LCBmLmV2YWx1YXRlKCA4ICksIDAgKTtcbiAgYXBwcm94aW1hdGVFcXVhbHMoIGFzc2VydCwgZi5ldmFsdWF0ZSggNiApLCA0ICk7XG4gIGFwcHJveGltYXRlRXF1YWxzKCBhc3NlcnQsIGYuaW52ZXJzZSggMTYgKSwgMCApO1xuICBhcHByb3hpbWF0ZUVxdWFscyggYXNzZXJ0LCBmLmludmVyc2UoIDggKSwgNCApO1xuICBhcHByb3hpbWF0ZUVxdWFscyggYXNzZXJ0LCBmLmludmVyc2UoIDAgKSwgOCApO1xuICBhcHByb3hpbWF0ZUVxdWFscyggYXNzZXJ0LCBmLmludmVyc2UoIDQgKSwgNiApO1xuXG4gIGNvbnN0IGcgPSBuZXcgTGluZWFyRnVuY3Rpb24oIDQsIDgsIDgsIDAsIHRydWUgKTsgLy8gY2xhbXBlZFxuXG4gIGFwcHJveGltYXRlRXF1YWxzKCBhc3NlcnQsIGcuZXZhbHVhdGUoIDAgKSwgOCApO1xuICBhcHByb3hpbWF0ZUVxdWFscyggYXNzZXJ0LCBnLmV2YWx1YXRlKCA0ICksIDggKTtcbiAgYXBwcm94aW1hdGVFcXVhbHMoIGFzc2VydCwgZy5ldmFsdWF0ZSggOCApLCAwICk7XG4gIGFwcHJveGltYXRlRXF1YWxzKCBhc3NlcnQsIGcuZXZhbHVhdGUoIDYgKSwgNCApO1xuICBhcHByb3hpbWF0ZUVxdWFscyggYXNzZXJ0LCBnLmludmVyc2UoIDE2ICksIDQgKTtcbiAgYXBwcm94aW1hdGVFcXVhbHMoIGFzc2VydCwgZy5pbnZlcnNlKCA4ICksIDQgKTtcbiAgYXBwcm94aW1hdGVFcXVhbHMoIGFzc2VydCwgZy5pbnZlcnNlKCAwICksIDggKTtcbiAgYXBwcm94aW1hdGVFcXVhbHMoIGFzc2VydCwgZy5pbnZlcnNlKCA0ICksIDYgKTtcbn0gKTsiXSwibmFtZXMiOlsiTGluZWFyRnVuY3Rpb24iLCJRVW5pdCIsIm1vZHVsZSIsImFwcHJveGltYXRlRXF1YWxzIiwiYXNzZXJ0IiwiYSIsImIiLCJtc2ciLCJvayIsIk1hdGgiLCJhYnMiLCJ0ZXN0IiwiZiIsImV2YWx1YXRlIiwiaW52ZXJzZSIsImciXSwibWFwcGluZ3MiOiJBQUFBLHNEQUFzRDtBQUV0RDs7Ozs7Q0FLQyxHQUVELE9BQU9BLG9CQUFvQixzQkFBc0I7QUFFakRDLE1BQU1DLE1BQU0sQ0FBRTtBQUVkLFNBQVNDLGtCQUFtQkMsTUFBTSxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsR0FBRztJQUMzQ0gsT0FBT0ksRUFBRSxDQUFFQyxLQUFLQyxHQUFHLENBQUVMLElBQUlDLEtBQU0sWUFBWSxHQUFHQyxJQUFJLFdBQVcsRUFBRUQsRUFBRSxVQUFVLEVBQUVELEdBQUc7QUFDbEY7QUFFQUosTUFBTVUsSUFBSSxDQUFFLGtCQUFrQlAsQ0FBQUE7SUFDNUIsTUFBTVEsSUFBSSxJQUFJWixlQUFnQixHQUFHLEdBQUcsR0FBRyxJQUFLLGNBQWM7SUFFMURHLGtCQUFtQkMsUUFBUVEsRUFBRUMsUUFBUSxDQUFFLElBQUs7SUFDNUNWLGtCQUFtQkMsUUFBUVEsRUFBRUMsUUFBUSxDQUFFLElBQUs7SUFDNUNWLGtCQUFtQkMsUUFBUVEsRUFBRUMsUUFBUSxDQUFFLElBQUs7SUFDNUNWLGtCQUFtQkMsUUFBUVEsRUFBRUMsUUFBUSxDQUFFLElBQUs7SUFDNUNWLGtCQUFtQkMsUUFBUVEsRUFBRUUsT0FBTyxDQUFFLEtBQU07SUFDNUNYLGtCQUFtQkMsUUFBUVEsRUFBRUUsT0FBTyxDQUFFLElBQUs7SUFDM0NYLGtCQUFtQkMsUUFBUVEsRUFBRUUsT0FBTyxDQUFFLElBQUs7SUFDM0NYLGtCQUFtQkMsUUFBUVEsRUFBRUUsT0FBTyxDQUFFLElBQUs7SUFFM0MsTUFBTUMsSUFBSSxJQUFJZixlQUFnQixHQUFHLEdBQUcsR0FBRyxHQUFHLE9BQVEsVUFBVTtJQUU1REcsa0JBQW1CQyxRQUFRVyxFQUFFRixRQUFRLENBQUUsSUFBSztJQUM1Q1Ysa0JBQW1CQyxRQUFRVyxFQUFFRixRQUFRLENBQUUsSUFBSztJQUM1Q1Ysa0JBQW1CQyxRQUFRVyxFQUFFRixRQUFRLENBQUUsSUFBSztJQUM1Q1Ysa0JBQW1CQyxRQUFRVyxFQUFFRixRQUFRLENBQUUsSUFBSztJQUM1Q1Ysa0JBQW1CQyxRQUFRVyxFQUFFRCxPQUFPLENBQUUsS0FBTTtJQUM1Q1gsa0JBQW1CQyxRQUFRVyxFQUFFRCxPQUFPLENBQUUsSUFBSztJQUMzQ1gsa0JBQW1CQyxRQUFRVyxFQUFFRCxPQUFPLENBQUUsSUFBSztJQUMzQ1gsa0JBQW1CQyxRQUFRVyxFQUFFRCxPQUFPLENBQUUsSUFBSztBQUM3QyJ9