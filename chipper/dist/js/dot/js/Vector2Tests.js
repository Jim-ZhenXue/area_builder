// Copyright 2017-2022, University of Colorado Boulder
/**
 * Vector2 tests
 *
 * @author Jonathan Olson (PhET Interactive Simulations)
 * @author Sam Reid (PhET Interactive Simulations)
 */ import Vector2 from './Vector2.js';
QUnit.module('Vector2');
function approximateEquals(assert, a, b, msg) {
    assert.ok(Math.abs(a - b) < 0.00000001, `${msg} expected: ${b}, result: ${a}`);
}
QUnit.test('distance', (assert)=>{
    approximateEquals(assert, new Vector2(2, 0).distance(Vector2.ZERO), 2);
    approximateEquals(assert, new Vector2(2, 0).distanceSquared(Vector2.ZERO), 4);
    approximateEquals(assert, new Vector2(4, 7).distance(new Vector2(6, 9)), 2 * Math.sqrt(2));
    approximateEquals(assert, new Vector2(4, 7).distanceSquared(new Vector2(6, 9)), 8);
});
QUnit.test('component average', (assert)=>{
    const vector1 = new Vector2(2, 2);
    const vector2 = new Vector2(3, 3);
    const vectors = [
        vector1,
        vector2
    ];
    let average = Vector2.average(vectors);
    assert.ok(average.x === 2.5, 'x average');
    assert.ok(average.y === 2.5, 'y average');
    vectors.push(new Vector2(7, 1));
    average = Vector2.average(vectors);
    assert.ok(average.x === 4, 'x average again');
    assert.ok(average.y === 2, 'y average again');
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2RvdC9qcy9WZWN0b3IyVGVzdHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTctMjAyMiwgVW5pdmVyc2l0eSBvZiBDb2xvcmFkbyBCb3VsZGVyXG5cbi8qKlxuICogVmVjdG9yMiB0ZXN0c1xuICpcbiAqIEBhdXRob3IgSm9uYXRoYW4gT2xzb24gKFBoRVQgSW50ZXJhY3RpdmUgU2ltdWxhdGlvbnMpXG4gKiBAYXV0aG9yIFNhbSBSZWlkIChQaEVUIEludGVyYWN0aXZlIFNpbXVsYXRpb25zKVxuICovXG5cbmltcG9ydCBWZWN0b3IyIGZyb20gJy4vVmVjdG9yMi5qcyc7XG5cblFVbml0Lm1vZHVsZSggJ1ZlY3RvcjInICk7XG5cbmZ1bmN0aW9uIGFwcHJveGltYXRlRXF1YWxzKCBhc3NlcnQsIGEsIGIsIG1zZyApIHtcbiAgYXNzZXJ0Lm9rKCBNYXRoLmFicyggYSAtIGIgKSA8IDAuMDAwMDAwMDEsIGAke21zZ30gZXhwZWN0ZWQ6ICR7Yn0sIHJlc3VsdDogJHthfWAgKTtcbn1cblxuUVVuaXQudGVzdCggJ2Rpc3RhbmNlJywgYXNzZXJ0ID0+IHtcbiAgYXBwcm94aW1hdGVFcXVhbHMoIGFzc2VydCwgbmV3IFZlY3RvcjIoIDIsIDAgKS5kaXN0YW5jZSggVmVjdG9yMi5aRVJPICksIDIgKTtcbiAgYXBwcm94aW1hdGVFcXVhbHMoIGFzc2VydCwgbmV3IFZlY3RvcjIoIDIsIDAgKS5kaXN0YW5jZVNxdWFyZWQoIFZlY3RvcjIuWkVSTyApLCA0ICk7XG4gIGFwcHJveGltYXRlRXF1YWxzKCBhc3NlcnQsIG5ldyBWZWN0b3IyKCA0LCA3ICkuZGlzdGFuY2UoIG5ldyBWZWN0b3IyKCA2LCA5ICkgKSwgMiAqIE1hdGguc3FydCggMiApICk7XG4gIGFwcHJveGltYXRlRXF1YWxzKCBhc3NlcnQsIG5ldyBWZWN0b3IyKCA0LCA3ICkuZGlzdGFuY2VTcXVhcmVkKCBuZXcgVmVjdG9yMiggNiwgOSApICksIDggKTtcbn0gKTtcblxuUVVuaXQudGVzdCggJ2NvbXBvbmVudCBhdmVyYWdlJywgYXNzZXJ0ID0+IHtcblxuICBjb25zdCB2ZWN0b3IxID0gbmV3IFZlY3RvcjIoIDIsIDIgKTtcbiAgY29uc3QgdmVjdG9yMiA9IG5ldyBWZWN0b3IyKCAzLCAzICk7XG4gIGNvbnN0IHZlY3RvcnMgPSBbIHZlY3RvcjEsIHZlY3RvcjIgXTtcbiAgbGV0IGF2ZXJhZ2UgPSBWZWN0b3IyLmF2ZXJhZ2UoIHZlY3RvcnMgKTtcbiAgYXNzZXJ0Lm9rKCBhdmVyYWdlLnggPT09IDIuNSwgJ3ggYXZlcmFnZScgKTtcbiAgYXNzZXJ0Lm9rKCBhdmVyYWdlLnkgPT09IDIuNSwgJ3kgYXZlcmFnZScgKTtcblxuICB2ZWN0b3JzLnB1c2goIG5ldyBWZWN0b3IyKCA3LCAxICkgKTtcbiAgYXZlcmFnZSA9IFZlY3RvcjIuYXZlcmFnZSggdmVjdG9ycyApO1xuICBhc3NlcnQub2soIGF2ZXJhZ2UueCA9PT0gNCwgJ3ggYXZlcmFnZSBhZ2FpbicgKTtcbiAgYXNzZXJ0Lm9rKCBhdmVyYWdlLnkgPT09IDIsICd5IGF2ZXJhZ2UgYWdhaW4nICk7XG59ICk7Il0sIm5hbWVzIjpbIlZlY3RvcjIiLCJRVW5pdCIsIm1vZHVsZSIsImFwcHJveGltYXRlRXF1YWxzIiwiYXNzZXJ0IiwiYSIsImIiLCJtc2ciLCJvayIsIk1hdGgiLCJhYnMiLCJ0ZXN0IiwiZGlzdGFuY2UiLCJaRVJPIiwiZGlzdGFuY2VTcXVhcmVkIiwic3FydCIsInZlY3RvcjEiLCJ2ZWN0b3IyIiwidmVjdG9ycyIsImF2ZXJhZ2UiLCJ4IiwieSIsInB1c2giXSwibWFwcGluZ3MiOiJBQUFBLHNEQUFzRDtBQUV0RDs7Ozs7Q0FLQyxHQUVELE9BQU9BLGFBQWEsZUFBZTtBQUVuQ0MsTUFBTUMsTUFBTSxDQUFFO0FBRWQsU0FBU0Msa0JBQW1CQyxNQUFNLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxHQUFHO0lBQzNDSCxPQUFPSSxFQUFFLENBQUVDLEtBQUtDLEdBQUcsQ0FBRUwsSUFBSUMsS0FBTSxZQUFZLEdBQUdDLElBQUksV0FBVyxFQUFFRCxFQUFFLFVBQVUsRUFBRUQsR0FBRztBQUNsRjtBQUVBSixNQUFNVSxJQUFJLENBQUUsWUFBWVAsQ0FBQUE7SUFDdEJELGtCQUFtQkMsUUFBUSxJQUFJSixRQUFTLEdBQUcsR0FBSVksUUFBUSxDQUFFWixRQUFRYSxJQUFJLEdBQUk7SUFDekVWLGtCQUFtQkMsUUFBUSxJQUFJSixRQUFTLEdBQUcsR0FBSWMsZUFBZSxDQUFFZCxRQUFRYSxJQUFJLEdBQUk7SUFDaEZWLGtCQUFtQkMsUUFBUSxJQUFJSixRQUFTLEdBQUcsR0FBSVksUUFBUSxDQUFFLElBQUlaLFFBQVMsR0FBRyxLQUFPLElBQUlTLEtBQUtNLElBQUksQ0FBRTtJQUMvRlosa0JBQW1CQyxRQUFRLElBQUlKLFFBQVMsR0FBRyxHQUFJYyxlQUFlLENBQUUsSUFBSWQsUUFBUyxHQUFHLEtBQU87QUFDekY7QUFFQUMsTUFBTVUsSUFBSSxDQUFFLHFCQUFxQlAsQ0FBQUE7SUFFL0IsTUFBTVksVUFBVSxJQUFJaEIsUUFBUyxHQUFHO0lBQ2hDLE1BQU1pQixVQUFVLElBQUlqQixRQUFTLEdBQUc7SUFDaEMsTUFBTWtCLFVBQVU7UUFBRUY7UUFBU0M7S0FBUztJQUNwQyxJQUFJRSxVQUFVbkIsUUFBUW1CLE9BQU8sQ0FBRUQ7SUFDL0JkLE9BQU9JLEVBQUUsQ0FBRVcsUUFBUUMsQ0FBQyxLQUFLLEtBQUs7SUFDOUJoQixPQUFPSSxFQUFFLENBQUVXLFFBQVFFLENBQUMsS0FBSyxLQUFLO0lBRTlCSCxRQUFRSSxJQUFJLENBQUUsSUFBSXRCLFFBQVMsR0FBRztJQUM5Qm1CLFVBQVVuQixRQUFRbUIsT0FBTyxDQUFFRDtJQUMzQmQsT0FBT0ksRUFBRSxDQUFFVyxRQUFRQyxDQUFDLEtBQUssR0FBRztJQUM1QmhCLE9BQU9JLEVBQUUsQ0FBRVcsUUFBUUUsQ0FBQyxLQUFLLEdBQUc7QUFDOUIifQ==